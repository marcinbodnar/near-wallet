{"version":3,"sources":["images/icon-problems.svg","images/icon-authorized.svg","images/wallet.png","images/icon-account.svg","images/icon-recent.svg","images/icon-arrow-right.svg","images/icon-m-transaction.svg","images/icon-contacts.svg","images/icon-logout.svg","images/icon-activity.svg","images/icon-check.svg","images/icon-mobile-menu.svg","images/icon-help.svg","images/near.svg","images/footer-nearkat.svg","images/icon-arrow-grn.svg","images/icon-account-grey.svg","images/icon-arrow-blk.svg","images/icon-authorized-grey.svg","images/icon-deny.svg","images/icon-authorize.svg","images/icon-add-blue.svg","images/icon-arrow-up.svg","images/icon-m-filter.svg","images/icon-arrow-left.svg","images/icon-m-search.svg","images/icon-lock.svg","images/icon-keys-grey.svg","images/icon-doc-grey.svg","images/icon-activity-grey.svg","images/icon-contacts-grey.svg","images/icon-t-stake.svg","images/icon-t-transfer.svg","actions/account.js","reducers/account.js","middleware/index.js","components/responsive/GlobalAlert.js","components/common/MainImage.js","components/responsive/PopupMenuTrigger.js","components/responsive/MobileView.js","components/responsive/DesktopPopup.js","components/responsive/DesktopView.js","components/responsive/ResponsiveContainer.js","components/common/Footer.js","components/dashboard/DashboardNotice.js","components/common/FormButton.js","components/dashboard/ListItem.js","components/dashboard/DashboardActivity.js","components/common/PageContainer.js","components/dashboard/DashboardDetail.js","components/common/RequestStatusBox.js","components/accounts/AccountFormAccountId.js","components/accounts/CreateAccountForm.js","components/common/AccountNote.js","components/accounts/AccountFormSection.js","components/common/Disclaimer.js","components/accounts/AccountFormContainer.js","components/accounts/CreateAccount.js","components/common/AccountSkipThisStep.js","components/accounts/SetRecoveryInfoForm.js","components/accounts/SetRecoveryInfo.js","components/accounts/RecoverAccountForm.js","components/accounts/RecoverAccount.js","components/login/LoginContainer.js","components/login/LoginForm.js","components/login/Login.js","components/authorized-apps/AuthorizedAppsDeauthorize.js","components/contacts/ContactsRemove.js","components/pagination/PaginationSubBox.js","components/pagination/PaginationTab.js","components/pagination/PaginationPaging.js","components/common/Search.js","components/pagination/PaginationSortBy.js","components/pagination/PaginationBlock.js","components/contacts/Contacts.js","components/authorized-apps/AuthorizedAppsEmpty.js","components/authorized-apps/AuthorizedApps.js","components/send-money/SendMoneyAmountInput.js","components/send-money/SendMoneyFirstStep.js","components/send-money/SendMoneySecondStep.js","components/send-money/SendMoneyThirdStep.js","components/send-money/SendMoney.js","components/profile/ProfileDetails.js","components/profile/ProfileSection.js","components/profile/ProfileYourKeys.js","components/profile/ProfileNotice.js","components/profile/Profile.js","components/GlobalStyle.js","components/Routing.js","serviceWorker.js","index.js","reducers/index.js","utils/wallet.js","images/icon-close.svg","images/icon-arrow-down.svg","images/icon-send.svg","images/icon-app-default.svg","images/icon-check-blue.svg"],"names":["module","exports","__webpack_require__","p","REFRESH_ACCOUNT","LOADER_ACCOUNT","REFRESH_URL","handleRefreshAccount","history","dispatch","getState","wallet","redirectIfEmpty","accountId","getAccountId","getAccountDetails","type","loader","loadAccount","then","v","data","amount","amountStr","Number","toLocaleString","useGrouping","stake","nonce","code_hash","accounts","catch","e","console","error","message","indexOf","clearState","redirectToCreateAccount","reset_accounts","handleRefreshUrl","location","_parse","parse","search","title","app_url","contract_id","success_url","failure_url","public_key","parsedUrl","URL","searchParams","set","redirect_url","href","url","app_title","Wallet","redirectToApp","state","nextUrl","account","concat","stringify","setTimeout","window","createActions","REQUEST_CODE","requestCode","bind","successCode","errorCode","SETUP_ACCOUNT_RECOVERY","setupAccountRecovery","RECOVER_ACCOUNT","recoverAccount","GET_ACCOUNT_DETAILS","REMOVE_ACCESS_KEY","removeAccessKey","CHECK_NEW_ACCOUNT","checkNewAccount","CREATE_NEW_ACCOUNT","createNewAccount","CHECK_ACCOUNT_AVAILABLE","checkAccountAvailable","CLEAR","clear","ADD_ACCESS_KEY","addAccessKey","contractId","publicKey","successUrl","successCodeHeader","successCodeDescription","errorCodeHeader","errorCodeDescription","CLEAR_ALERT","clearAlert","switchAccount","SWITCH_ACCOUNT","selectAccount","initialState","formLoader","sentSms","globalAlertReducer","handleActions","_handleActions","Object","defineProperty","combineActions","_ref2","payload","meta","objectSpread","globalAlert","success","errorMessage","toString","undefined","messageCodeHeader","messageCode","messageCodeDescription","keys","reduce","obj","key","requestResultReducer","_handleActions2","_ref3","requestStatus","reducer","_ref4","ready","authorizedApps","_ref5","reduceReducers","_ref","arguments","length","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","readyStatePromise","store","next","makeAction","newAction","assign","warn","CustomMessage","styled","Message","_templateObject","mapDispatchToProps","connect","react_default","a","createElement","Container","icon","className","Image","onClick","src","CloseImage","IconCheckImage","IconsProblemImage","Content","Header","CustomDiv","MainImage_templateObject","MainImage","_ref$size","size","PopupMenuTrigger_templateObject","PopupMenuTrigger","handleClick","_ref$dropdown","dropdown","PopupMenuTrigger_CustomDiv","common_MainImage","AccountGreyImage","MobileMenuImage","ArrowDownImage","Loader","active","inline","CustomResponsive","Responsive","MobileView_templateObject","getWidth","onlyTablet","minWidth","innerWidth","MobileView","handleDropdown","_this","setState","handleSelectAccount","props","push","redirectCreateAccount","_this2","this","maxWidth","Segment","basic","Menu","borderless","react_router_dom","to","LogoImage","responsive_PopupMenuTrigger","Item","RecentImage","SendImage","AuthorizedGreyImage","List","as","filter","map","i","Button","responsive_GlobalAlert","Component","defaultProps","children","withRouter","CustomPopup","Popup","DesktopPopup_templateObject","DesktopPopup","handleToggle","handleClose","handleOpen","popupOpen","trigger","position","open","on","onClose","onOpen","Icon","AccountImage","Link","DesktopView_templateObject","DesktopView","activeItem","hideFixedMenu","fixed","showFixedMenu","handleItemClick","name","DesktopView_CustomResponsive","onlyComputer","Visibility","once","onBottomPassed","onBottomPassedReverse","HelpImage","responsive_DesktopPopup","ResponsiveContainer","react","responsive_DesktopView","responsive_MobileView","FooterGrid","Grid","Footer_templateObject","columns","Column","textAlign","verticalAlign","widescreen","largeScreen","computer","tablet","mobile","Group","LogoFooterImage","only","floated","NearkatImage","DashboardNotice_templateObject","CustomButton","FormButton_templateObject","ArrowGrnImage","ArrowRightImage","FormButton","_ref$color","color","_ref$disabled","disabled","_ref$sending","sending","CustomGridRow","Row","ListItem_templateObject","ListItem","row","_ref$wide","wide","_ref$showSub","showSub","toggleShowSub","showSubOpen","ArrowBlkImage","ArrowRight","CustomGrid","DashboardActivity_templateObject","DashboardActivity","image","activity","width","Dimmer","inverted","dashboard_ListItem","common_FormButton","CustomContainer","PageContainer_templateObject","PageContainer","additional","bottom","DashboardDetail","notice","newcontacts","refreshAuthorizedApps","handleNotice","_this$state","_this$props","common_PageContainer","dashboard_DashboardActivity","r","AppDefaultImage","RequestStatusBoxGrid","RequestStatusBox_templateObject","RequestStatusBox","CustomFormInput","Form","Input","AccountFormAccountId_templateObject","ProblemsImage","CheckBlueImage","AccountFormAccountId","defaultAccountId","handleChangeAccountId","value","match","trim","toLowerCase","handleChange","timeout","clearTimeout","loading","onChange","placeholder","maxLength","required","autoComplete","autoCorrect","autoCapitalize","spellCheck","CreateAccountForm","handleRecaptcha","accounts_AccountFormAccountId","CustomList","AccountNote_templateObject","AccountNote","AccountNote_CustomList","CustomForm","AccountFormSection_templateObject","AccountFormSection","handleSubmit","onSubmit","common_AccountNote","DisclaimerGrid","Disclaimer_templateObject","Disclaimer","AccountFormContainer_templateObject","AccountFormContainer","text","AccountFormContainer_CustomContainer","stackable","common_Disclaimer","CreateAccount","componentDidMount","componentWillUnmount","preventDefault","finally","log","accounts_AccountFormContainer","accounts_AccountFormSection","accounts_CreateAccountForm","CreateAccountWithRouter","CustomSegment","AccountSkipThisStep_templateObject","AccountSkipThisStep","skipRecoverySetup","SetRecoveryInfoForm","phoneNumber","isLegit","react_phone_number_input","common_AccountSkipThisStep","SetRecoveryInfo","isLegitField","securityCode","isValidPhoneNumber","combinedState","accounts_SetRecoveryInfoForm","SetRecoveryInfoWithRouter","params","RecoverAccountForm","isLegitForm","RecoverAccount","accounts_RecoverAccountForm","RecoverAccountWithRouter","LoginContainer_templateObject","DenyImage","LoginContainer","appTitle","LoginContainer_CustomContainer","Dimmable","horizontal","AuthorizeImage","LoginForm_templateObject","ArrowUpImage","AddBlueImage","handleOnClick","handleDeny","handleAllow","buttonLoader","LoginForm_CustomGrid","Login","login_LoginContainer","login_LoginForm","LoginWithRouter","AuthorizedAppsDeauthorize","showSubData","handleDeauthorize","ContactsRemove","PaginationSubBox_templateObject","MTransactionImage","PaginationShowSubBox","toggleCloseSub","subPage","PaginationSubBox_CustomList","authorized_apps_AuthorizedAppsDeauthorize","contacts_ContactsRemove","PaginationTabList","PaginationTab_templateObject","LEFT_PAGE","RIGHT_PAGE","range","from","step","_Component","PaginationTab","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","currentPage","gotoPage","page","onPageChanged","evt","target","blur","handleMoveLeft","pageNeighbors","handleMoveRight","fetchPageNumbers","totalPages","getTotalPages","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","inherits","createClass","Math","ceil","totalRecords","pageLimit","initialPage","index","circular","ArrowLeftImage","onPageChange","PaginationPaging_templateObject","Search_templateObject","MSearchImage","PaginationSortBy_templateObject","ArrowDown","PaginationBlockGrid","PaginationBlock_templateObject","PaginationBlock","dropdownType","filterTypes","img","TransactionFilter","pagingDropdown","pagingValue","buttonRadio","handleOnClickPaging","handleDropdownClick","handlePagingDropdownClick","buttonRadioClick","pageNumber","_this$props$showSub","_this$props2","PaginationSubBox","Contacts","_","_this3","pagination_PaginationBlock","ContactsWithRouter","AuthorizedAppsEmpty_templateObject","AuthorizedAppsEmpty","AuthorizedAppsEmpty_CustomSegment","rel","AuthorizedApps","authorized_apps_AuthorizedAppsEmpty","AuthorizedAppsWithRouter","SendMoneyAmountInput_templateObject","fontSize","SendMoneyAmountInput","defaultAmount","amountStatus","handleChangeAmount","isInteger","SendMoneyAmountInput_CustomDiv","pattern","min","SendMoneyFirstStep_templateObject","SendMoneyFirstStep","handleNextStep","note","paramAccountId","SendMoneyFirstStep_CustomList","send_money_SendMoneyAmountInput","SendMoneySecondStep_templateObject","SendMoneySecondStep","handleExpandNote","handleGoBack","expandNote","SendMoneySecondStep_CustomList","SendMoneyThirdStep_templateObject","SendMoneyThirdStep","SendMoneyThirdStep_CustomList","SendMoney","handleCancelTransfer","successMessage","sendMoney","_this$state2","paramId","id","_this$state3","send_money_SendMoneyFirstStep","send_money_SendMoneySecondStep","send_money_SendMoneyThirdStep","SendMoneyWithRouter","ProfileDetails_templateObject","ProfileDetails","ProfileDetails_CustomGrid","LockImage","align","hoverable","ProfileSection","ProfileYourKeys_templateObject","ProfileNotice_templateObject","Profile","profile_ProfileSection","profile_ProfileDetails","ProfileWithRouter","createGlobalStyle","GlobalStyle_templateObject","theme","Routing","GlobalStyle","esm","styled_components_browser_esm","responsive_ResponsiveContainer","react_router","exact","path","component","DashboardDetailWithRouter","Footer","Boolean","hostname","createBrowserHistory","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","createMiddleware","ReactDOM","render","es","components_Routing","document","getElementById","navigator","serviceWorker","registration","unregister","NETWORK_ID","process","REACT_APP_NETWORK_ID","ACCOUNT_HELPER_URL","REACT_APP_ACCOUNT_HELPER_URL","CONTRACT_CREATE_ACCOUNT_URL","NODE_URL","REACT_APP_NODE_URL","HELPER_KEY","REACT_APP_ACCOUNT_HELPER_KEY","KEY_WALLET_ACCOUNTS","KEY_UNIQUE_PREFIX","KEY_ACTIVE_ACCOUNT_ID","ACCOUNT_ID_REGEX","Z_WWW_toptal_Near_Protocol_wallet_3_fork_fork_master_deploy_near_wallet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","key_store","nearlib","BrowserLocalStorageKeyStore","connection","fromConfig","networkId","provider","signer","keyStore","JSON","localStorage","getItem","Z_WWW_toptal_Near_Protocol_wallet_3_fork_fork_master_deploy_near_wallet_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","setItem","save","test","_sendMoney","Z_WWW_toptal_Near_Protocol_wallet_3_fork_fork_master_deploy_near_wallet_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","Z_WWW_toptal_Near_Protocol_wallet_3_fork_fork_master_deploy_near_wallet_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","receiverId","wrap","_context","prev","getAccount","stop","_x","_x2","options","param","next_url","WALLET_CREATE_NEW_ACCOUNT_URL","encodeURIComponent","replace","isEmpty","_loadAccount","_callee2","_context2","Error","abrupt","sent","_x3","_getAccountDetails","_callee3","_context3","_removeAccessKey","_callee4","_context4","removeKey","_x4","_checkAccountAvailable","_callee5","_context5","isLegitAccountId","_x5","_checkNewAccount","_callee6","remoteAccount","_context6","t0","_x6","_createNewAccount","_callee7","keyPair","_context7","fromRandom","sendJson","newAccountId","newAccountPublicKey","getPublicKey","saveAndSelectAccount","_x7","_saveAndSelectAccount","_callee8","_context8","setKey","_x8","_x9","_addAccessKey","_callee9","_context9","addKey","_x10","_x11","_x12","_x13","_x14","_validateCode","_callee10","postData","_context10","_x15","_x16","_x17","_setupAccountRecovery","_callee11","hash","signature","_context11","public_keys","some","b58","Buffer","Uint8Array","sha256","array","signHash","validateCode","_x18","_x19","_x20","_recoverAccount","_callee12","_context12","_x21","_x22","_x23"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mKCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uNCI3BC,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAc,cAEpB,SAASC,EAAqBC,GAClC,OAAO,SAACC,EAAUC,GACfC,EAAOC,gBAAgBJ,GACvB,IAAMK,EAAYF,EAAOG,eAEzBL,EAASM,KAETN,EAAS,CACNO,KAAMX,EACNY,QAAQ,IAGXN,EACIO,YAAYL,EAAWL,GACvBW,KAAK,SAAAC,GACHX,EAAS,CACNO,KAAMZ,EACNiB,KAAM,CACHR,UAAWA,EACXS,OAAQF,EAAC,QAAc,EACvBG,UAAWC,OAAOJ,EAAC,QAAYK,eAAe,KAAM,CAACC,aAAY,KAAU,IAC3EC,MAAOP,EAAC,MACRQ,MAAOR,EAAC,MACRS,UAAWT,EAAC,UACZU,SAAUnB,EAAOmB,YAIvBrB,EAAS,CACNO,KAAMX,EACNY,QAAQ,MAGbc,MAAM,SAAAC,GACJC,QAAQC,MAAM,yBAA0BF,GAEpCA,EAAEG,UAAkE,IAAvDH,EAAEG,QAAQC,QAAQ,kCAGhCzB,EAAO0B,aACP1B,EAAO2B,wBACJ,CACGC,gBAAgB,GAEnB/B,OAOX,SAASgC,EAAiBC,GAC9B,OAAO,SAAAhC,GAAY,IAAAiC,EAC+DC,gBAAMF,EAASG,QAAtFC,EADQH,EACRG,MAAOC,EADCJ,EACDI,QAASC,EADRL,EACQK,YAAaC,EADrBN,EACqBM,YAAaC,EADlCP,EACkCO,YAAaC,EAD/CR,EAC+CQ,WAE/D,GAAKF,EAAL,CAIA,IAAMG,EAAY,IAAIC,IAAIJ,GAC1BG,EAAUE,aAAaC,IAAI,aAAc3C,EAAOG,gBAChDqC,EAAUE,aAAaC,IAAI,aAAcJ,GACzC,IAAMK,EAAeJ,EAAUK,KAE/B/C,EAAS,CACNO,KAAMV,EACNmD,IAAK,CACFC,UAAWb,GAAS,GACpBC,QAASA,GAAW,GACpBC,YAAaA,GAAe,GAC5BC,YAAaA,GAAe,GAC5BC,YAAaA,GAAe,GAC5BC,WAAYA,GAAc,GAC1BK,aAAcA,GAAgB,QAM1C,QAAM5C,EAAS,IAAIgD,IAENC,EAAgB,kBAAM,SAACnD,EAAUC,GAC3C,IAAMmD,EAAQnD,IACRoD,EAAWD,EAAME,QAAQN,KAAOI,EAAME,QAAQN,IAAIT,YAAxC,WAAAgB,OAAkEC,oBAAUJ,EAAME,QAAQN,MAAS,IACnHS,WAAW,WACRC,OAAO1B,SAAWqB,GAClB,UAGoKM,YAAc,CACrLC,aAAc,CACX1D,EAAO2D,YAAYC,KAAK5D,GACxB,iBAAO,CAAE6D,YAAa,8BAA+BC,UAAW,+BAEnEC,uBAAwB,CACrB/D,EAAOgE,qBAAqBJ,KAAK5D,GACjC,iBAAO,CAAE6D,YAAa,uCAAwCC,UAAW,wCAE5EG,gBAAiB,CACdjE,EAAOkE,eAAeN,KAAK5D,GAC3B,iBAAO,CAAE6D,YAAa,iCAAkCC,UAAW,kCAEtEK,oBAAqB,CAACnE,EAAOI,kBAAkBwD,KAAK5D,GAAS,iBAAO,KACpEoE,kBAAmB,CAACpE,EAAOqE,gBAAgBT,KAAK5D,GAAS,iBAAO,KAChEsE,kBAAmB,CAChBtE,EAAOuE,gBAAgBX,KAAK5D,GAC5B,iBAAO,CAAE6D,YAAa,oCAAqCC,UAAW,4CAEzEU,mBAAoB,CACjBxE,EAAOyE,iBAAiBb,KAAK5D,GAC7B,iBAAO,CAAE6D,YAAa,oCAAqCC,UAAW,4CAEzEY,wBAAyB,CACtB1E,EAAO2E,sBAAsBf,KAAK5D,GAClC,iBAAO,CAAE6D,YAAa,cAAeC,UAAW,qBAEnDc,MAAO,OA3BKjB,gBAAaK,yBAAsBE,mBAAgB9D,sBAAmBiE,oBAAiBE,oBAAiBE,qBAAkBE,0BAAuBE,YA8BpHpB,YAAc,CACvDqB,eAAgB,CACb9E,EAAO+E,aAAanB,KAAK5D,GACzB,SAACE,EAAW8E,EAAYC,EAAWC,EAAYnC,GAA/C,MAA8D,CAC3DoC,kBAAmB,UACnBC,uBAAwBrC,EAAY,0CACpCsC,gBAAiB,QACjBC,qBAAsB,MAG5BC,YAAa,OAVDR,iBAAcS,eAadC,EAAkBhC,YAAc,CAC5CiC,eAAgB1F,EAAO2F,cAAc/B,KAAK5D,KAD9ByF,uBC1HTG,EAAe,CAClBC,YAAY,EACZC,SAAS,GAUNC,EAAqBC,aAAaC,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EAGpCG,YAAerB,GAAgB,SAAC7B,EAADmD,GAAA,IAAU9E,EAAV8E,EAAU9E,MAAO+E,EAAjBD,EAAiBC,QAASC,EAA1BF,EAA0BE,KAA1B,OAAAL,OAAAM,EAAA,EAAAN,CAAA,GAC1BhD,EAD0B,CAE7BuD,YAAeH,GAAW/E,EAAQ,CAC/BmF,SAAUnF,EACVoF,aAAepF,GAAS+E,GAAWA,EAAQM,iBAAeC,EAC1DC,kBAAmBvF,EAAQ+E,EAAQS,aAAeR,EAAKlB,gBAAkBkB,EAAKpB,kBAC9E6B,uBAAwBzF,EAAQ+E,EAAQS,aAAeR,EAAKjB,qBAAuBiB,EAAKnB,6BACvFyB,MAV8BX,OAAAC,EAAA,EAAAD,CAAAD,EAYpCT,EAAa,SAAAtC,GAAK,OAAIgD,OAAOe,KAAK/D,GAAOgE,OAAO,SAACC,EAAKC,GAAN,MAAsB,gBAARA,GAAyBD,EAAIC,GAAOlE,EAAMkE,GAAMD,GAAOA,GAAK,MAZtFlB,GAarCL,GAEGyB,EAAuBrB,aAAasB,EAAA,GAAApB,OAAAC,EAAA,EAAAD,CAAAoB,EAGtClB,YAAezC,EAAaK,EAAsBE,EAAgBK,EAAiBE,EAAkBE,GAAyB,SAACzB,EAADqE,GAAA,IAAUhG,EAAVgG,EAAUhG,MAAO+E,EAAjBiB,EAAiBjB,QAASC,EAA1BgB,EAA0BhB,KAA1B,OAAAL,OAAAM,EAAA,EAAAN,CAAA,GACzHhD,EADyH,CAE5HsE,cAAiBlB,GAAW/E,EAAQ,CACjCmF,SAAUnF,EACVoF,aAAepF,GAAS+E,GAAWA,EAAQM,iBAAeC,EAC1DE,YAAaxF,EAAQ+E,EAAQS,aAAeR,EAAKzC,UAAYyC,EAAK1C,kBACjEgD,MATgCX,OAAAC,EAAA,EAAAD,CAAAoB,EAWtCzC,EAAQ,SAAA3B,GAAK,OAAIgD,OAAOe,KAAK/D,GAAOgE,OAAO,SAACC,EAAKC,GAAN,MAAsB,kBAARA,GAA2BD,EAAIC,GAAOlE,EAAMkE,GAAMD,GAAOA,GAAK,MAXjFG,GAYvC1B,GAEG6B,EAAUzB,YAAcE,OAAAC,EAAA,EAAAD,CAAA,GACvBvC,EAAc,SAACT,EAADwE,GAA6B,IAAnBnG,EAAmBmG,EAAnBnG,MACtB,OADyCmG,EAAZC,QACfpG,EACJ2E,OAAAM,EAAA,EAAAN,CAAA,GAAKhD,EAAZ,CAAmB4C,SAAS,IAExB5C,IAEb0C,GAEGgC,EAAiB5B,YAAcE,OAAAC,EAAA,EAAAD,CAAA,GAC9B9F,EAAoB,SAAC8C,EAAD2E,KAAUtG,MAAV,IAAiB+E,EAAjBuB,EAAiBvB,QAAjB,OAAAJ,OAAAM,EAAA,EAAAN,CAAA,GACfhD,EADe,CAElB0E,eAAgBtB,GAAWA,EAAQsB,mBAEzChC,GA2BYkC,kBACZlC,EA9EmB,SAAC1C,EAAD6E,GAAsB,IAAZJ,EAAYI,EAAZJ,MAC7B,MAAqB,qBAAVA,EACDzE,EAEHgD,OAAAM,EAAA,EAAAN,CAAA,GAAKhD,EAAZ,CAAmB2C,YAAa8B,KA4EhC5B,EACAsB,EACAI,EACAG,EA9BH,WAAqC,IAApB1E,EAAoB8E,UAAAC,OAAA,QAAApB,IAAAmB,UAAA,GAAAA,UAAA,GAAZ,GAAIE,EAAQF,UAAAC,OAAA,EAAAD,UAAA,QAAAnB,EAClC,OAAQqB,EAAO7H,MACZ,KAAKZ,EACF,OAAOyG,OAAAM,EAAA,EAAAN,CAAA,GACDhD,EACAgF,EAAOxH,MAEhB,KAAKhB,EACF,OAAOwG,OAAAM,EAAA,EAAAN,CAAA,GACDhD,EADN,CAEG5C,OAAQ4H,EAAO5H,SAGrB,KAAKX,EACF,OAAOuG,OAAAM,EAAA,EAAAN,CAAA,GACDhD,EADN,CAEGJ,IAAKoF,EAAOpF,MAGlB,QACG,OAAOI,uBC5FViF,EAAmB3E,OAAO4E,sCAAwCC,IAUlEC,EAAoB,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAN,GACzC,IAAKA,EAAO5B,UAAY4B,EAAO5B,QAAQ9F,KACrC,OAAOgI,EAAKN,GAGd,SAASO,EAAWd,EAAOjH,GACzB,IAAMgI,EAAYxC,OAAOyC,OAAO,GAAIT,GAEpC,cADOQ,EAAUpC,QACVJ,OAAOyC,OAAOD,EAAW,CAAEf,SAASjH,GAI7C,OADA8H,EAAKC,GAAW,IACTP,EAAO5B,QAAQ9F,KACpB,SAAA8F,GAAO,OAAIkC,EAAKC,GAAW,EAAM,CAAEnC,cACnC,SAAA/E,GAEE,OADAD,QAAQsH,KAAK,8BAA+BrH,GACrCiH,EAAKC,GAAW,EAAM,CAAElH,OAAO,EAAM+E,QAAS/E,0yECjB3D,IAAMsH,GAAgBC,aAAOC,KAAPD,CAAHE,MA+HbC,GAAqB,CACxBzD,cAOY0D,eAJS,SAAA7C,GAAA,IAAGjD,EAAHiD,EAAGjD,QAAH,OAAA8C,OAAAM,EAAA,EAAAN,CAAA,GAClB9C,IAKH6F,GAFYC,CAhCK,SAAAnB,GAAA,IAAGtB,EAAHsB,EAAGtB,YAAajB,EAAhBuC,EAAgBvC,WAAhB,OACjBiB,EACG0C,EAAAC,EAAAC,cAACC,GAAA,EAAD,KACGH,EAAAC,EAAAC,cAACR,GAAD,CAAeU,MAAI,EAACC,UAAW/C,EAAYC,QAAU,UAAY,SAC9DyC,EAAAC,EAAAC,cAACI,GAAA,EAAD,CACGC,QAASlE,EACTmE,IAAKC,KACLJ,UAAU,gBAEZ/C,GACE0C,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOD,UAAU,OAAOG,IAAKlD,EAAYC,QAAUmD,KAAiBC,OACvEX,EAAAC,EAAAC,cAACN,GAAA,EAAQgB,QAAT,KACGZ,EAAAC,EAAAC,cAACN,GAAA,EAAQiB,OAAT,KACIvD,EAAYK,mBAEfL,EAAYC,QACRD,EAAYO,uBACZP,EAAYO,wBAA0BP,EAAYE,gBAIjE,qqCClIL,IAAMsD,GAAYnB,aAAM,MAANA,CAAHoB,MA0EAC,GAdG,SAAApC,GAAA,IACf4B,EADe5B,EACf4B,IADeS,EAAArC,EAEfsC,YAFe,IAAAD,EAER,SAFQA,EAAA,OAIfjB,EAAAC,EAAAC,cAACY,GAAD,CAAWT,UAAWa,GACnBlB,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKA,wqEC3DlB,IAAMM,GAAYnB,aAAO,MAAPA,CAAHwB,MAmIAC,GAxCU,SAAAxC,GAAA,IAAG3E,EAAH2E,EAAG3E,QAASoH,EAAZzC,EAAYyC,YAAanK,EAAzB0H,EAAyB1H,KAAzBoK,EAAA1C,EAA+B2C,gBAA/B,IAAAD,KAAA,OACtBtB,EAAAC,EAAAC,cAACsB,GAAD,CAAWjB,QAASc,GACjBrB,EAAAC,EAAAC,cAAA,WACa,YAAThJ,GACE8I,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACZL,EAAAC,EAAAC,cAACuB,GAAD,CACGjB,IAAKkB,KACLR,KAAK,WAIdlB,EAAAC,EAAAC,cAAA,OAAKG,UAAS,iBAAAnG,OAAmBhD,IACpB,WAATA,GACE8I,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKe,EAAWI,KAAkBlB,OAElC,YAATvJ,GAAsB8I,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKoB,QAEtC5B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXpG,EAAQ9C,SAAW8C,EAAQlD,UACzBiJ,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,CAAQC,QAAM,EAACC,QAAM,EAACb,KAAK,SAE3BlB,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,WAAMjG,EAAQxC,UAAd,KACAuI,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QAAf,YAITL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXpG,EAAQ9C,SAAW8C,EAAQlD,UACzBiJ,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,CAAQC,QAAM,EAACC,QAAM,EAACb,KAAK,SAE3BlB,EAAAC,EAAAC,cAAA,eAAOjG,EAAQlD,y0GCrGjC,IAAMiL,GAAmBrC,aAAOsC,KAAPtC,CAAHuC,MA6GhBC,GAAW,WAEd,MADgC,qBAAX9H,OACN4H,KAAWG,WAAWC,SAAWhI,OAAOiI,YAGpDC,gNASHxI,MAAQ,CACLwH,UAAU,KAGbiB,eAAiB,kBACdC,EAAKC,SAAS,SAAA3I,GAAK,MAAK,CACrBwH,UAAWxH,EAAMwH,eAGvBoB,oBAAsB,SAAA5L,GACnB0L,EAAKG,MAAMtG,cAAcvF,GACzB0L,EAAKG,MAAMnM,qBAAqBgM,EAAKG,MAAMlM,SAC3C+L,EAAKD,iBACLC,EAAKG,MAAMlM,QAAQmM,KAAnB,QAGHC,sBAAwB,WACrBL,EAAK5L,OAAS,IAAIgD,IAClB4I,EAAKD,iBACLC,EAAK5L,OAAO2B,wBAAwB,GAAIiK,EAAKG,MAAMlM,mFAG7C,IAAAqM,EAAAC,KACEzB,EAAayB,KAAKjJ,MAAlBwH,SACAtH,EAAY+I,KAAKJ,MAAjB3I,QAER,OACG+F,EAAAC,EAAAC,cAAC8B,GAAD,CACGG,SAAUA,GACVc,SAAUhB,KAAWG,WAAWa,UAGhCjD,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAASC,OAAK,EAAC9C,UAAU,UACtBL,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CAAM/C,UAAU,cAAcgD,YAAU,GACrCrD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACZL,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,KACNvD,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKgD,UAKpBvJ,EAAQlD,WACNiJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACZL,EAAAC,EAAAC,cAACuD,GAAD,CACGxJ,QAASA,EACToH,YAAa2B,KAAKR,eAClBtL,KAAK,SACLqK,SAAUA,MAKtBvB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CACGC,OAAK,EACL9C,UAAS,cAAAnG,OAAgBqH,EAAQ,YAEjCvB,EAAAC,EAAAC,cAACkD,GAAA,EAAKA,KAAN,KACGpD,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,IAAIhD,QAASyC,KAAKR,gBACxBxC,EAAAC,EAAAC,cAACkD,GAAA,EAAKM,KAAN,CAAWrD,UAAU,QAClBL,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKmD,OADf,YAYC,KACJ3D,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,cAAchD,QAASyC,KAAKR,gBAClCxC,EAAAC,EAAAC,cAACkD,GAAA,EAAKM,KAAN,CAAWrD,UAAU,eAClBL,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKoD,OADf,eAMH5D,EAAAC,EAAAC,cAACkD,GAAA,EAAKA,KAAN,CAAW/C,UAAU,OAClBL,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,WAAWhD,QAASyC,KAAKR,gBAC/BxC,EAAAC,EAAAC,cAACkD,GAAA,EAAKM,KAAN,KACG1D,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKkB,OADf,YAYC,KACJ1B,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,mBAAmBhD,QAASyC,KAAKR,gBACvCxC,EAAAC,EAAAC,cAACkD,GAAA,EAAKM,KAAN,KACG1D,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKqD,OADf,oBAYC,MAEP7D,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAASC,OAAK,EAAC9C,UAAU,kBACtBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,KACG9D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,MAAd,kBAEC9J,EAAQjC,UACN+E,OAAOe,KAAK7D,EAAQjC,UAChBgM,OAAO,SAAA/D,GAAC,OAAIA,IAAMhG,EAAQlD,YAC1BkN,IAAI,SAAChK,EAASiK,GAAV,OACFlE,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CACGK,GAAG,IACH9F,IAAG,MAAA/D,OAAQgK,GACX3D,QAAS,kBACNwC,EAAKJ,oBAAoB1I,IAE5BoG,UAAU,iBANb,IAQKpG,MAIjB+F,EAAAC,EAAAC,cAACiE,GAAA,EAAD,CAAQ5D,QAASyC,KAAKF,uBAAtB,0BAOZ9C,EAAAC,EAAAC,cAACkE,GAAD,cAjJaC,aAAnB9B,GAKI+B,aAAe,CACnBC,SAAU,IAiJhB,IAAMzE,GAAqB,CACxBrJ,uBACA6F,iBAOYyD,eAJS,SAAAnB,GAAA,MAAkB,CACvC3E,QADqB2E,EAAG3E,UAMxB6F,GAFYC,CAGbyE,aAAWjC,4nEC1Sb,IAAMkC,GAAc9E,aAAO+E,KAAP/E,CAAHgF,MAwLFC,GAtFM,SAAAhG,GAAA,IAClB3E,EADkB2E,EAClB3E,QACA0I,EAFkB/D,EAElB+D,oBACAG,EAHkBlE,EAGlBkE,sBACA+B,EAJkBjG,EAIlBiG,aACAC,EALkBlG,EAKlBkG,YACAC,EANkBnG,EAMlBmG,WACAC,EAPkBpG,EAOlBoG,UAPkB,OASlBhF,EAAAC,EAAAC,cAACuE,GAAD,CACGQ,QACGjF,EAAAC,EAAAC,cAACuD,GAAD,CACGxJ,QAASA,EACToH,YAAawD,EACb3N,KAAK,YAGXgO,SAAS,eACTC,KAAMH,EACNI,GAAG,QACHC,QAASP,EACTQ,OAAQP,GAER/E,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAASC,OAAK,EAAC9C,UAAU,oBACtBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAMzD,UAAU,WACbL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKyB,KAAN,CAAWxB,GAAIzD,KAAOE,IAAKgF,OAC3BxF,EAAAC,EAAAC,cAAC4D,GAAA,EAAKlD,QAAN,CAAcmD,GAAI0B,KAAMlC,GAAG,WAAWhD,QAASuE,GAA/C,YAWC,KAEJ9E,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKyB,KAAN,CAAWxB,GAAIzD,KAAOE,IAAKqD,OAC3B7D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKlD,QAAN,CACGmD,GAAI0B,KACJlC,GAAG,kBACHhD,QAASuE,GAHZ,oBAgBC,MAEP9E,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAMzD,UAAU,kBACbL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,MAAd,mBAEH/D,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAMzD,UAAU,2BACZpG,EAAQjC,UACN+E,OAAOe,KAAK7D,EAAQjC,UAChBgM,OAAO,SAAA/D,GAAC,OAAIA,IAAMhG,EAAQlD,YAC1BkN,IAAI,SAAChK,EAASiK,GAAV,OACFlE,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CACGK,GAAG,IACH9F,IAAG,MAAA/D,OAAQgK,GACX3D,QAAS,WACNoC,EAAoB1I,GACpB6K,KAEHzE,UAAU,iBAPb,IASKpG,MAIjB+F,EAAAC,EAAAC,cAACiE,GAAA,EAAD,CAAQ5D,QAASuC,GAAjB,o/CCxKT,IAAMd,GAAmBrC,aAAOsC,KAAPtC,CAAH+F,MAsEhBvD,GAAW,WAEd,MADgC,qBAAX9H,OACN4H,KAAWG,WAAWC,SAAWhI,OAAOiI,YAGpDqD,gNASH5L,MAAQ,CACL6L,WAAY,OACZZ,WAAW,KAGda,cAAgB,kBAAMpD,EAAKC,SAAS,CAAEoD,OAAO,OAE7CC,cAAgB,kBAAMtD,EAAKC,SAAS,CAAEoD,OAAO,OAE7CE,gBAAkB,SAAC9N,EAAD0G,GAAA,IAAMqH,EAANrH,EAAMqH,KAAN,OAAiBxD,EAAKC,SAAS,CAAEkD,WAAYK,OAE/DtD,oBAAsB,SAAA5L,GACnB0L,EAAKG,MAAMtG,cAAcvF,GACzB0L,EAAKG,MAAMnM,qBAAqBgM,EAAKG,MAAMlM,SAC3C+L,EAAKG,MAAMlM,QAAQmM,KAAnB,QAGHC,sBAAwB,WACrBL,EAAK5L,OAAS,IAAIgD,IAClB4I,EAAK5L,OAAO2B,wBAAwB,GAAIiK,EAAKG,MAAMlM,SACnD+L,EAAKC,SAAS,iBAAO,CAClBsC,WAAW,QAIjBH,aAAe,WACZpC,EAAKC,SAAS,SAAA3I,GAAK,MAAK,CACrBiL,WAAYjL,EAAMiL,gBAIxBF,YAAc,WACXrC,EAAKC,SAAS,SAAA3I,GAAK,MAAK,CACrBiL,WAAW,QAIjBD,WAAa,WACVtC,EAAKC,SAAS,SAAA3I,GAAK,MAAK,CACrBiL,WAAW,+EAKR,IACEA,EAAchC,KAAKjJ,MAAnBiL,UACA/K,EAAY+I,KAAKJ,MAAjB3I,QAER,OACG+F,EAAAC,EAAAC,cAACgG,GAAD,CACG/D,SAAUA,GACVE,SAAUJ,KAAWkE,aAAa9D,UAElCrC,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CACGC,MAAM,EACNC,eAAgBtD,KAAK+C,cACrBQ,sBAAuBvD,KAAK6C,eAE5B7F,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAS7C,UAAU,SAAS8C,OAAK,IACjCnD,EAAAC,EAAAC,cAACkE,GAAD,MACApE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACZL,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACZL,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,KACNvD,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKgD,SAGlBxD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACZL,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,KACNvD,EAAAC,EAAAC,cAACI,GAAA,EAAD,CACGD,UAAU,cACVG,IAAKmD,OAHX,YAkBC,KACJ3D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACZL,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,eACNvD,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOD,UAAU,cAAcG,IAAKoD,OADvC,iBAOT5D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACXpG,EAAQlD,WACNiJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACZL,EAAAC,EAAAC,cAAA,KAAGxG,KAAK,qBACLsG,EAAAC,EAAAC,cAACI,GAAA,EAAD,CACGD,UAAU,cACVG,IAAKgG,SAIdxG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACZL,EAAAC,EAAAC,cAACuG,GAAD,CACGxM,QAASA,EACT0I,oBAAqBK,KAAKL,oBAC1BG,sBACGE,KAAKF,sBAER+B,aAAc7B,KAAK6B,aACnBC,YAAa9B,KAAK8B,YAClBC,WAAY/B,KAAK+B,WACjBC,UAAWA,iBA/HlBX,aAApBsB,GAKIrB,aAAe,CACnBC,SAAU,IAsIhB,IAAMzE,GAAqB,CACxBrJ,uBACA6F,iBAOYyD,eAJS,SAAA7C,GAAA,MAAkB,CACvCjD,QADqBiD,EAAGjD,UAMxB6F,GAFYC,CAGbyE,aAAWmB,KC/OEe,GARa,SAAA9H,GAAA,IAAG2F,EAAH3F,EAAG2F,SAAH,OACzBvE,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KACG3G,EAAAC,EAAAC,cAAC0G,GAAD,MACA5G,EAAAC,EAAAC,cAAC2G,GAAD,MACA7G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QAAQkE,sgECD7B,IAAMuC,GAAanH,aAAOoH,KAAPpH,CAAHqH,MAsJDN,GAxDa,kBACzB1G,EAAAC,EAAAC,cAAC4G,GAAD,CAAYG,QAAS,GAClBjH,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGC,UAAU,OACVC,cAAc,SACdC,WAAY,EACZC,YAAa,EACbC,SAAU,EACVC,OAAQ,GACRC,OAAQ,IAERzH,EAAAC,EAAAC,cAACwD,GAAA,EAAKgE,MAAN,CAAYrH,UAAU,aACnBL,EAAAC,EAAAC,cAACwD,GAAA,EAAD,KACG1D,EAAAC,EAAAC,cAACwD,GAAA,EAAKpD,MAAN,CAAYE,IAAKmH,OACjB3H,EAAAC,EAAAC,cAACwD,GAAA,EAAK9C,QAAN,gDAEGZ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGxG,KAAK,KAAR,oBACAsG,EAAAC,EAAAC,cAAA,QAAMG,UAAU,oBAAhB,KACAL,EAAAC,EAAAC,cAAA,KAAGxG,KAAK,KAAR,sBAKZsG,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGU,KAAK,WACLL,SAAU,EACVlH,UAAU,aACV+G,cAAc,UAJjB,+FAOyB,IACtBpH,EAAAC,EAAAC,cAAA,KAAGxG,KAAK,6BAAR,eAEHsG,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGU,KAAK,kBACLP,WAAY,EACZC,YAAa,EACbC,SAAU,EACVC,OAAQ,EACRL,UAAU,QACV9G,UAAU,QAEVL,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAM+D,QAAQ,SACX7H,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,MAAd,cACA/D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,KAAK1D,UAAU,SAC1BL,EAAAC,EAAAC,cAAA,KAAGxG,KAAK,yCAAR,oBAIHsG,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOD,UAAU,UAAUG,IAAKsH,kvBChJzBnI,aAAOmE,KAAPnE,CAAHoI,MAAhB,8tJCCA,IAAMC,GAAerI,aAAOwE,KAAPxE,CAAHsI,KA8DeC,KAkBGC,MA2JrBC,GAhCI,SAAAxJ,GAAA,IAChB2F,EADgB3F,EAChB2F,SACArN,EAFgB0H,EAEhB1H,KAFgBmR,EAAAzJ,EAGhB0J,aAHgB,IAAAD,EAGR,OAHQA,EAAAE,EAAA3J,EAIhB4J,gBAJgB,IAAAD,KAKhBhI,EALgB3B,EAKhB2B,QALgBkI,EAAA7J,EAMhB8J,eANgB,IAAAD,KAAAxH,EAAArC,EAOhBsC,YAPgB,IAAAD,EAOT,GAPSA,EAAA,OAShBjB,EAAAC,EAAAC,cAAC8H,GAAD,CACG9Q,KAAMA,EACNmJ,UAAS,GAAAnG,OAAKoO,EAAL,KAAApO,OAAcgH,EAAd,KAAAhH,OAAsBwO,EAAO,WACtCF,SAAUA,EACVjI,QAASA,GAERmI,EAAO,UAEHnE,68DC1NX,IAAMoE,GAAgBhJ,aAAOoH,KAAK6B,IAAZjJ,CAAHkJ,MA6JJC,GAzDE,SAAAlK,GAAA,IACdmK,EADcnK,EACdmK,IACA7E,EAFctF,EAEdsF,EAFc8E,EAAApK,EAGdqK,YAHc,IAAAD,KAAAE,EAAAtK,EAIduK,eAJc,IAAAD,KAKdE,EALcxK,EAKdwK,cACAC,EANczK,EAMdyK,YANc,OAQdrJ,EAAAC,EAAAC,cAACyI,GAAD,CACGvB,cAAc,SACd/G,UAAS,GAAAnG,OAAK+O,EAAI,UAAT,KAAA/O,OACNiP,GAAWE,IAAgBnF,EAA3B,mBADM,KAAAhK,OAELiP,EAAO,cACX5I,QAAS,kBAAM0I,GAAQG,EAAclF,EAAG6E,KAExC/I,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGK,SAAU0B,EAAO,GAAK,GACtBzB,OAAQyB,EAAO,GAAK,GACpBxB,OAAQwB,EAAO,GAAK,IAEpBjJ,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CAAMK,cAAc,UACjBpH,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAa7G,UAAU,aACpBL,EAAAC,EAAAC,cAACuB,GAAD,CACGjB,IAAKuI,EAAI,GACT7H,KAAM+H,EAAI,mBAGhBjJ,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAa7G,UAAU,kBAAvB,eACeL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAe0I,EAAI,IACpC,MAAVA,EAAI,IACF/I,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cACbL,EAAAC,EAAAC,cAAA,WADH,UAGGF,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAe0I,EAAI,GAAnC,UAHH,eAG8D,IAC3D/I,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAe0I,EAAI,QAMjDE,GACEjJ,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGK,SAAU,EACVC,OAAQ,EACRC,OAAQ,EACRN,UAAU,SAEVnH,EAAAC,EAAAC,cAACI,GAAA,EAAD,CACGE,IAAK2I,GAAWE,IAAgBnF,EAAIoF,KAAgBC,KACpDlJ,UAAU,k6BCrJzB,IAAMmJ,GAAa7J,aAAOoH,KAAPpH,CAAH8J,MAwEDC,GA9BW,SAAA9K,GAAA,IAAGzH,EAAHyH,EAAGzH,OAAQwS,EAAX/K,EAAW+K,MAAO5Q,EAAlB6F,EAAkB7F,MAAOwK,EAAzB3E,EAAyB2E,GAAIqG,EAA7BhL,EAA6BgL,SAA7B,OACvB5J,EAAAC,EAAAC,cAACsJ,GAAD,KACGxJ,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,KACG5I,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAa7G,UAAU,mBAAmB8G,UAAU,OAAO0C,MAAO,IAC/D7J,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQR,UAAU,MACfL,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOD,UAAU,cAAcG,IAAKmJ,IACnC5Q,KAIViH,EAAAC,EAAAC,cAAC4J,GAAA,EAAD,CAAQC,UAAQ,EAACjI,OAAQ3K,GACtB6I,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,OAGF+H,EAAS3F,IAAI,SAAC8E,EAAK7E,GAAN,OACXlE,EAAAC,EAAAC,cAAC8J,GAAD,CAAU/L,IAAG,KAAA/D,OAAOgK,GAAK6E,IAAKA,MAGjC/I,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,KACG5I,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaC,UAAU,OAAO0C,MAAO,IAClC7J,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAIA,GACPvD,EAAAC,EAAAC,cAAC+J,GAAD,CAAY3B,MAAM,YAAYpH,KAAK,SAAnC,2+DCpEf,IAAMgJ,GAAkBvK,aAAOQ,KAAPR,CAAHwK,MA8GNC,GA5BO,SAAAxL,GAAA,IAAG2F,EAAH3F,EAAG2F,SAAUxL,EAAb6F,EAAa7F,MAAOsR,EAApBzL,EAAoByL,WAAYC,EAAhC1L,EAAgC0L,OAAQpT,EAAxC0H,EAAwC1H,KAAxC,OACnB8I,EAAAC,EAAAC,cAACgK,GAAD,KACGlK,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CAAM1G,UAAU,iBACH,WAATnJ,EAEK8I,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,CAAU3B,QAAQ,IAAI5G,UAAU,qBAC7BL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAanD,GAAG,KAAKoD,UAAU,UAC3BpO,IAIPiH,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,CAAU3B,QAAQ,IAAI5G,UAAU,cAC7BL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAanD,GAAG,KAAKwD,SAAU,GAAIC,OAAQ,GAAIC,OAAQ,GAAIL,cAAc,UACrErO,GAEJiH,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAU,EAAGC,OAAQ,GAAIC,OAAQ,GAAIpH,UAAU,OACxDgK,KAKf9F,EACDvE,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAASC,OAAK,EAACgE,UAAU,UACrBmD,8ECrFJC,gNACHxQ,MAAQ,CACL5C,QAAQ,EACRqT,QAAQ,EACRZ,SAAU,GACVnL,eAAgB,GAChBgM,YAAa,MA4DhBC,sBAAwB,WACrBjI,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,KAGXsL,EAAKG,MAAM3L,oBAAoBI,KAAK,WACjCoL,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,UAKjBwT,aAAe,WACZlI,EAAKC,SAAS,SAAA3I,GAAK,MAAK,CACrByQ,QAASzQ,EAAMyQ,+FAtElBxH,KAAKJ,MAAMlK,iBAAiBsK,KAAKJ,MAAMjK,UACvCqK,KAAKJ,MAAMnM,qBAAqBuM,KAAKJ,MAAMlM,SAC3CsM,KAAK0H,wBAEL1H,KAAKN,SAAS,iBAAO,CAClBvL,QAAQ,sCAqEL,IAAAyT,EAMF5H,KAAKjJ,MAJN5C,EAFGyT,EAEHzT,OAFG0T,GAAAD,EAGHJ,OAHGI,EAIHhB,SAJGgB,EAKHH,YAGmCzH,KAAKJ,OAAnCnE,EARFoM,EAQEpM,eAAgBhH,EARlBoT,EAQkBpT,UAExB,OACGuI,EAAAC,EAAAC,cAAC4K,GAAD,CACG/R,MACGiH,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KACG3G,EAAAC,EAAAC,cAAA,QAAMG,UAAU,WAAhB,aACAL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAe5I,GAC/BuI,EAAAC,EAAAC,cAAA,QAAMG,UAAU,QAAhB,WAGNgK,WACGrK,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,eACNvD,EAAAC,EAAAC,cAAC+J,GAAD,CAAY3B,MAAM,qBAAlB,gBAMNtI,EAAAC,EAAAC,cAAC6K,GAAD,CACG5T,OAAQA,EACRwS,MAAO9F,KACP9K,MAAM,kBACNwK,GAAG,mBACHqG,SAAUnL,IA6BT,aAjJc4F,aAuJxBvE,GAAqB,CACxBrJ,uBACAiC,mBACAzB,qBAeY8I,eAZS,SAAAnB,GAAA,IAAG3E,EAAH2E,EAAG3E,QAAH,OAAA8C,OAAAM,EAAA,EAAAN,CAAA,GAClB9C,EADkB,CAErBwE,eAAgBxE,EAAQwE,eACnBxE,EAAQwE,eAAewF,IAAI,SAAA+G,GAAC,MAAI,CAC7BC,KACAD,EAAEnP,WACFmP,EAAExT,OACFwT,EAAElP,aAEL,MAKLgE,GAFYC,CAGbyE,aAAW+F,gzBClMb,IAAMW,GAAuBvL,aAAOoH,KAAPpH,CAAHwL,MAwDXC,GAVU,SAAAxM,GAAA,IAAGP,EAAHO,EAAGP,cAAH,OACtBA,EACG2B,EAAAC,EAAAC,cAACgL,GAAD,KACGlL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAa7G,UAAS,cAAAnG,OAAgBmE,EAAcd,QAAU,UAAY,YACtEc,EAAcT,cAGnB,m/BC5CR,IAAMyN,GAAkB1L,aAAO2L,KAAKC,MAAZ5L,CAAH6L,KA8BGC,KAKAC,MAKlBC,gNACH5R,MAAQ,CACLhD,UAAW0L,EAAKG,MAAMgJ,kBAAoB,MAG7CC,sBAAwB,SAAC3T,EAAD0G,GAAwB,IAAlBqH,EAAkBrH,EAAlBqH,KAAM6F,EAAYlN,EAAZkN,MACjC,GAAIA,EAAMC,MAAM,oBACb,OAAO,EAGVtJ,EAAKC,SAAS,kBAAA3F,OAAAC,EAAA,EAAAD,CAAA,GACVkJ,EAAO6F,EAAME,OAAOC,iBAGxBxJ,EAAKG,MAAMsJ,aAAahU,EAAG,CAAE+N,OAAM6F,UAEnCrJ,EAAK0J,SAAWC,aAAa3J,EAAK0J,SAElC1J,EAAK0J,QAAU/R,WAAW,WACH,WAApBqI,EAAKG,MAAM1L,KACNuL,EAAKG,MAAMxH,gBAAgB0Q,GAC3BrJ,EAAKG,MAAMpH,sBAAsBsQ,IACtC,+EAGI,IAAAjB,EAC+B7H,KAAKJ,MAAnClG,EADDmO,EACCnO,WAAY2B,EADbwM,EACaxM,cACZtH,EAAciM,KAAKjJ,MAAnBhD,UAER,OACGiJ,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KACG3G,EAAAC,EAAAC,cAACmL,GAAD,CACGgB,QAAS3P,EACT2D,UAAS,UAAAnG,OACNmE,EAAiBA,EAAcd,QAAU,UAAY,UAAa,IAErE0I,KAAK,YACL6F,MAAO/U,EACPuV,SAAUtJ,KAAK6I,sBACfU,YAAY,wBACZC,UAAU,KACVC,UAAQ,EACRC,aAAa,MACbC,YAAY,MACZC,eAAe,MACfC,WAAW,UAEd7M,EAAAC,EAAAC,cAAC+B,GAAA,EAAD,CAAY8B,GAAIqH,GAAkBnI,SAAU,IAAK5E,cAAeA,YA/CzCgG,aA4D7BvE,GAAqB,CACxBtE,wBACAJ,mBAOY2E,eAJS,SAAA3B,EAAAG,GAAA,IAAGtE,EAAHmE,EAAGnE,QAAHsE,EAAgBwN,MAAhB,OAAAhP,OAAAM,EAAA,EAAAN,CAAA,GAClB9C,IAKH6F,GAFYC,CAGb4L,ICtEamB,GA7CW,SAAAlO,GAAA,IACvBzH,EADuByH,EACvBzH,OACAuF,EAFuBkC,EAEvBlC,WACAwP,EAHuBtN,EAGvBsN,aAEA7N,GALuBO,EAIvBmO,gBAJuBnO,EAKvBP,eALuB,OAOvB2B,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KACG3G,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAX,qBACA/D,EAAAC,EAAAC,cAAC8M,GAAD,CACGtQ,WAAYA,EACZwP,aAAcA,EACdhV,KAAK,WAQJ,KAEJ8I,EAAAC,EAAAC,cAAC+J,GAAD,CACG/S,KAAK,SACLoR,MAAM,OACNE,WAAYnK,GAAiBA,EAAcd,SAC3CmL,QAASvR,GAJZ,kBAQA6I,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACZL,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,oBAAT,ixBCrCT,IAAM0J,GAAatN,aAAOmE,KAAPnE,CAAHuN,MAgDDC,GAfK,kBACjBnN,EAAAC,EAAAC,cAACkN,GAAD,KACGpN,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,SAArB,QACAL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,6CAGA1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,+CAGA1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,0CACA1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,4BACA1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,2tDCxCN,IAAM2J,GAAa1N,aAAO2L,KAAP3L,CAAH2N,MAkGDC,GArBY,SAAA3O,GAAA,IAAG4O,EAAH5O,EAAG4O,aAAcnP,EAAjBO,EAAiBP,cAAe1F,EAAhCiG,EAAgCjG,SAAU4L,EAA1C3F,EAA0C2F,SAA1C,OACxBvE,EAAAC,EAAAC,cAACmN,GAAD,CAAYX,aAAa,MAAMe,SAAUD,GACtCxN,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,KACG/G,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAU,EAAGC,OAAQ,EAAGC,OAAQ,IACzClD,GAEJvE,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAU,EAAGC,OAAQ,EAAGC,OAAQ,IAC1CzH,EAAAC,EAAAC,cAAC+B,GAAA,EAAD,CAAY8B,GAAIqH,GAAkB/I,SAAU,IAAKhE,cAAeA,IAC/D1F,GAAYqH,EAAAC,EAAAC,cAACwN,GAAD,0fC1FzB,IAAMC,GAAiBhO,aAAOoH,KAAPpH,CAAHiO,MAqCLC,GAbI,kBAChB7N,EAAAC,EAAAC,cAACyN,GAAD,KACG3N,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,CAAUvI,UAAU,8BACjBL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAU,GAAIC,OAAQ,GAAIC,OAAQ,IAC5CzH,EAAAC,EAAAC,cAAA,QAAMG,UAAU,mBAAhB,gBADH,uGAG4C,IACzCL,EAAAC,EAAAC,cAAA,KAAGxG,KAAK,2BAAR,yiCC1BZ,IAAMwQ,GAAkBvK,aAAOQ,KAAPR,CAAHmO,MA2ENC,GA7Bc,SAAAnP,GAAA,IAAGjG,EAAHiG,EAAGjG,SAAUI,EAAb6F,EAAa7F,MAAOiV,EAApBpP,EAAoBoP,KAAMzJ,EAA1B3F,EAA0B2F,SAA1B,OAC1BvE,EAAAC,EAAAC,cAAC+N,GAAD,KACGjO,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CAAMmH,WAAS,GACblO,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,CAAU3B,QAAQ,IAAI5G,UAAU,cAC5BL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAU,EAAGC,OAAQ,EAAGC,OAAQ,IAC1CzH,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAMhL,GACjBiH,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAMiK,GAChBrV,GAAYE,gBAAMF,EAASG,QAAQL,gBACjCuH,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,KAAK1D,UAAU,cAA1B,4JAQXkE,EAEDvE,EAAAC,EAAAC,cAACiO,GAAD,QCjEAC,gNACHrU,MAAQ,CACL5C,QAAQ,EACRJ,UAAW,MAGdsX,kBAAoB,eAEpBC,qBAAuB,WACpB7L,EAAKG,MAAMlH,WAGdwQ,aAAe,SAAChU,EAAD0G,GAAwB,IAAlBqH,EAAkBrH,EAAlBqH,KAAM6F,EAAYlN,EAAZkN,MACxBrJ,EAAKC,SAAS,kBAAA3F,OAAAC,EAAA,EAAAD,CAAA,GACVkJ,EAAO6F,QAId0B,aAAe,SAAAtV,GACZA,EAAEqW,iBAEF9L,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,KAJM,IAOTJ,EAAc0L,EAAK1I,MAAnBhD,UAER0L,EAAKG,MAAMtH,iBAAiBvE,GAAWM,KAAK,SAAA+G,GACzC,IADwDA,EAAZhG,MAC5C,CAEA,IAAI4B,EAAO,iBAAAE,OAAoBnD,GAC/BqD,WAAW,WACRqI,EAAKG,MAAMlM,QAAQmM,KAAK7I,IACxB,QAELwU,QAAQ,WACN/L,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,UAKjB4V,gBAAkB,SAAAjB,GACf3T,QAAQsW,IAAI3C,6EAGN,IACE3U,EAAW6L,KAAKjJ,MAAhB5C,OADF0T,EAEgC7H,KAAKJ,MAAnCvE,EAFFwM,EAEExM,cAAe3B,EAFjBmO,EAEiBnO,WAEvB,OACGsD,EAAAC,EAAAC,cAACwO,GAAD,CACG/V,SAAUqK,KAAKJ,MAAMjK,SACrBI,MAAM,iBACNiV,KAAK,wFAELhO,EAAAC,EAAAC,cAACyO,GAAD,CACGtQ,cAAe2E,KAAKJ,MAAMvE,cAC1BmP,aAAcxK,KAAKwK,aACnB7U,SAAUqK,KAAKJ,MAAMjK,UAErBqH,EAAAC,EAAAC,cAAC0O,GAAD,CACGzX,OAAQA,EACRkH,cAAeA,EACf3B,WAAYA,EACZqQ,gBAAiB/J,KAAK+J,gBACtBb,aAAclJ,KAAKkJ,wBAlET7H,aA0EtBvE,GAAqB,CACxB1E,kBACAE,mBACAI,SAOUmT,GAA0B9O,YAJf,SAAAxB,GAAA,IAAGtE,EAAHsE,EAAGtE,QAAH,OAAA8C,OAAAM,EAAA,EAAAN,CAAA,GAClB9C,IAKH6F,GAFoCC,CAGrCqO,wQCxFF,IAAMU,GAAgBnP,aAAOuD,KAAPvD,CAAHoP,MAsBJC,GAZa,SAAApQ,GAAA,IAAGqQ,EAAHrQ,EAAGqQ,kBAAH,OACzBjP,EAAAC,EAAAC,cAAC4O,GAAD,CAAe3L,OAAK,GACjBnD,EAAAC,EAAAC,cAAA,QAAMG,UAAU,aAAhB,kBADH,8JAEGL,EAAAC,EAAAC,cAAC+J,GAAD,CACG1J,QAAS0O,EACT3G,MAAM,QAFT,4CCyDS4G,GArEa,SAAAtQ,GAAA,IACzBzH,EADyByH,EACzBzH,OACAuF,EAFyBkC,EAEzBlC,WACAyS,EAHyBvQ,EAGzBuQ,YACAxS,EAJyBiC,EAIzBjC,QACAyS,EALyBxQ,EAKzBwQ,QACA/Q,EANyBO,EAMzBP,cACA6N,EAPyBtN,EAOzBsN,aACA+C,EARyBrQ,EAQzBqQ,kBARyB,OAUzBjP,EAAAC,EAAAC,cAACyG,EAAA,SAAD,MACKhK,GACCqD,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KACG3G,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAX,gBACA/D,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CACGhP,UAAS,UAAAnG,OACNmE,EACKA,EAAcd,QACX,UACA,UACH,GALC,KAAArD,OAMLwC,EAAa,UAAY,IAC7BuJ,KAAK,cACL6F,MAAOqD,EACP7C,SAAU,SAAAR,GAAK,OACZI,EAAa,KAAM,CAAEjG,KAAM,cAAe6F,WAE7CS,YAAY,2BACZE,UAAQ,KAKhB9P,GACEqD,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KACG3G,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAX,0BACA/D,EAAAC,EAAAC,cAACqL,GAAA,EAAD,CACGtF,KAAK,eACLqG,SAAUJ,EACVK,YAAY,qBAMrBvM,EAAAC,EAAAC,cAAC+J,GAAD,CACG/S,KAAK,SACLoR,MAAM,OACNE,UAAW4G,EACX1G,QAASvR,GAJZ,mBASA6I,EAAAC,EAAAC,cAACoP,GAAD,CAAqBL,kBAAmBA,MCrDxCM,gNACHxV,MAAQ,CACL5C,QAAQ,EACRgY,YAAa,GACbC,SAAS,KAGZf,kBAAoB,eAEpBC,qBAAuB,WACpB7L,EAAKG,MAAMlH,WAGdwQ,aAAe,SAAChU,EAAD0G,GAAwB,IAAlBqH,EAAkBrH,EAAlBqH,KAAM6F,EAAYlN,EAAZkN,MACxBrJ,EAAKC,SAAS,eAAAxF,EAAA,OAAAA,EAAA,GAAAH,OAAAC,EAAA,EAAAD,CAAAG,EACV+I,EAAO6F,GADG/O,OAAAC,EAAA,EAAAD,CAAAG,EAAA,UAEFuF,EAAK+M,aAAavJ,EAAM6F,IAFtB5O,OAejBsQ,aAAe,SAAAtV,GAGZ,GAFAA,EAAEqW,kBAEG9L,EAAK1I,MAAMqV,QACb,OAAO,EAGV3M,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,KAGNsL,EAAKG,MAAMjG,QAQb8F,EAAKG,MAAM/H,qBAAqB4H,EAAK1I,MAAMoV,YAAa1M,EAAKG,MAAM7L,UAAW0L,EAAK1I,MAAM0V,cACrFpY,KAAK,SAAA+G,GAAaA,EAAXhG,OAGLqK,EAAKG,MAAM9I,kBAEb0U,QAAQ,WACN/L,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,OAfjBsL,EAAKG,MAAMpI,YAAYiI,EAAK1I,MAAMoV,YAAa1M,EAAKG,MAAM7L,WACtDyX,QAAQ,WACN/L,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,UAkBvB8X,kBAAoB,SAAA/W,GACjBA,EAAEqW,iBACF9L,EAAKG,MAAM9I,8FA5CDmM,EAAM6F,GAMhB,MAJiB,CACdqD,YAAaO,KACbD,aAAc,SAAA3D,GAAK,QAAMA,EAAME,OAAOD,MAAM,aAE7B9F,GAAM6F,oCA0CxB,IAAM6D,EAAa5S,OAAAM,EAAA,EAAAN,CAAA,GACbiG,KAAKJ,MACLI,KAAKjJ,MAFQ,CAGhBqV,QAASpM,KAAKjJ,MAAMqV,UAAYpM,KAAKJ,MAAMlG,aAE9C,OACGsD,EAAAC,EAAAC,cAACwO,GAAD,CACG3V,MAAM,uBACNiV,KAAK,uFAELhO,EAAAC,EAAAC,cAACyO,GAAD,CAAoBnB,aAAcxK,KAAKwK,aAAcnP,cAAe2E,KAAKJ,MAAMvE,eAC5E2B,EAAAC,EAAAC,cAAC0P,GAAD7S,OAAAyC,OAAA,GACOmQ,EADP,CAEGnC,aAAcxK,KAAKwK,aACnBtB,aAAclJ,KAAKkJ,aACnB+C,kBAAmBjM,KAAKiM,8BAnFZ5K,aA2FxBvE,GAAqB,CACxBtF,cACAK,uBACAf,gBACA4B,SAQUmU,GAA4B9P,YALjB,SAAAxB,EAAAG,GAAA,IAAGzE,EAAHsE,EAAGtE,QAAa8R,EAAhBrN,EAAgBqN,MAAhB,OAAAhP,OAAAM,EAAA,EAAAN,CAAA,GAClB9C,EADkB,CAErBlD,UAAWgV,EAAM+D,OAAO/Y,aAGuC+I,GAAzBC,CAA6CwP,ICjCvEQ,GAvEY,SAAAnR,GAAA,IACxBzH,EADwByH,EACxBzH,OACAuF,EAFwBkC,EAExBlC,WACAyS,EAHwBvQ,EAGxBuQ,YACAxS,EAJwBiC,EAIxBjC,QACA0B,EALwBO,EAKxBP,cACA6N,EANwBtN,EAMxBsN,aACA8D,EAPwBpR,EAOxBoR,YAPwB,OASxBhQ,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KACG3G,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAX,YACA/D,EAAAC,EAAAC,cAAC8M,GAAD,CACGtQ,WAAYA,EACZwP,aAAcA,KAGfvP,GACCqD,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KACG3G,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAX,gBACA/D,EAAAC,EAAAC,cAACmP,GAAA,EAAD,CACGhP,UAAS,UAAAnG,OACNmE,EACKA,EAAcd,QACX,UACA,UACH,GALC,KAAArD,OAMLwC,EAAa,UAAY,IAC7BuJ,KAAK,cACL6F,MAAOqD,EACP7C,SAAU,SAAAR,GAAK,OACZI,EAAa,KAAM,CAAEjG,KAAM,cAAe6F,WAE7CS,YAAY,2BACZE,UAAQ,KAKhB9P,GACEqD,EAAAC,EAAAC,cAACyG,EAAA,SAAD,KACG3G,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAX,0BACA/D,EAAAC,EAAAC,cAACqL,GAAA,EAAD,CACGtF,KAAK,eACLqG,SAAUJ,EACVK,YAAY,kBACZE,UAAQ,KAKjBzM,EAAAC,EAAAC,cAAC+J,GAAD,CACG/S,KAAK,SACLoR,MAAM,OACNE,UAAWwH,IACXtH,QAASvR,GAJZ,qBChDA8Y,gNACHlW,MAAQ,CACL5C,QAAQ,EACRJ,UAAW,GACXoY,YAAa,GACbC,SAAS,KAGZf,kBAAoB,eAEpBC,qBAAuB,WACpB7L,EAAKG,MAAMlH,WAGdwQ,aAAe,SAAChU,EAAD0G,GAAwB,IAAlBqH,EAAkBrH,EAAlBqH,KAAM6F,EAAYlN,EAAZkN,MACxBrJ,EAAKC,SAAS,SAAC3I,GAAD,IAAAmD,EAAA,OAAAA,EAAA,GAAAH,OAAAC,EAAA,EAAAD,CAAAG,EACV+I,EAAO6F,GADG/O,OAAAC,EAAA,EAAAD,CAAAG,EAAA,UAEO,cAAT+I,EAAuBlM,EAAMqV,QAAU3M,EAAK+M,aAAavJ,EAAM6F,IAF7D5O,OAejB8S,YAAc,kBAAMvN,EAAKG,MAAMvE,eAAiBoE,EAAKG,MAAMvE,cAAcd,SAAWkF,EAAK1I,MAAMqV,WAE/F5B,aAAe,SAAAtV,GAGZ,GAFAA,EAAEqW,kBAEG9L,EAAKuN,cACP,OAAO,EAGVvN,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,KAGX,IAAMJ,EAAY0L,EAAK1I,MAAMhD,UACxB0L,EAAKG,MAAMjG,QAQb8F,EAAKG,MAAM7H,eAAe0H,EAAK1I,MAAMoV,YAAapY,EAAW0L,EAAK1I,MAAM0V,cACpEpY,KAAK,SAAA+G,GAAeA,EAAZhG,OAENqK,EAAKG,MAAM9I,kBAEb0U,QAAQ,WACN/L,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,OAdjBsL,EAAKG,MAAMpI,YAAYiI,EAAK1I,MAAMoV,YAAapY,GAC3CyX,QAAQ,WACN/L,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,qFA3BV8O,EAAM6F,GAMhB,MAJiB,CACdqD,YAAaO,KACbD,aAAc,SAAA3D,GAAK,QAAMA,EAAME,OAAOD,MAAM,aAE7B9F,GAAM6F,oCAuCxB,IAAM6D,EAAa5S,OAAAM,EAAA,EAAAN,CAAA,GACbiG,KAAKJ,MACLI,KAAKjJ,MAFQ,CAGhBqV,QAASpM,KAAKjJ,MAAMqV,UAAYpM,KAAKJ,MAAMlG,aAG9C,OACGsD,EAAAC,EAAAC,cAACwO,GAAD,CACG3V,MAAM,oBACNiV,KAAK,wFAELhO,EAAAC,EAAAC,cAACyO,GAAD,CAAoBtQ,cAAe2E,KAAKJ,MAAMvE,cAAemP,aAAcxK,KAAKwK,aAAa/S,KAAKuI,OAC/FhD,EAAAC,EAAAC,cAACgQ,GAADnT,OAAAyC,OAAA,GACOmQ,EADP,CAEGzD,aAAclJ,KAAKkJ,aACnB8D,YAAahN,KAAKgN,wBAjFP3L,aAyFvBvE,GAAqB,CACxBtF,cACAO,iBACAjB,gBACA0B,wBACAE,SAOUyU,GAA2BpQ,YAJhB,SAAAxB,EAAAG,GAAA,IAAGzE,EAAHsE,EAAGtE,QAAHyE,EAAgBqN,MAAhB,OAAAhP,OAAAM,EAAA,EAAAN,CAAA,GAClB9C,IAKH6F,GAFqCC,CAGtCkQ,07DC3FF,IAAM/F,GAAkBvK,aAAOQ,KAAPR,CAAHyQ,KAyCG1E,KASA2E,MAsLTC,GA7HQ,SAAA1R,GAAA,IAAGzH,EAAHyH,EAAGzH,OAAQoN,EAAX3F,EAAW2F,SAAUgM,EAArB3R,EAAqB2R,SAArB,OACpBvQ,EAAAC,EAAAC,cAACsQ,GAAD,KACGxQ,EAAAC,EAAAC,cAAC4J,GAAA,EAAO2G,SAAR,CAAiB1M,GAAIb,KAASC,OAAK,GAChCnD,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,KACG/G,EAAAC,EAAAC,cAAC4J,GAAA,EAAD,CAAQC,UAAQ,EAACjI,OAAQ3K,GACtB6I,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,OAGH7B,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,KACG5I,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGC,UAAU,SACVI,SAAU,GACVC,OAAQ,GACRC,OAAQ,IAERzH,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAM4M,YAAU,EAACrQ,UAAU,aACxBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAACuB,GAAD,CACGjB,IAAKkB,KACLR,KAAK,SAGXlB,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,MAClBL,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKmQ,QAEf3Q,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAACuB,GAAD,CACGjB,IAAKyK,KACL/J,KAAK,YAMpBlB,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,CAAUvI,UAAU,SACjBL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGnD,GAAG,KACHoD,UAAU,SACVI,SAAU,GACVC,OAAQ,GACRC,OAAQ,IAERzH,EAAAC,EAAAC,cAAA,QAAMG,UAAU,aAAakQ,EAA7B,KAPH,6CAWHvQ,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,CAAUvI,UAAU,YACjBL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGC,UAAU,SACVI,SAAU,GACVC,OAAQ,GACRC,OAAQ,IAJX,iCASHzH,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,KACG5I,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGI,YAAa,EACbC,SAAU,EACVE,OAAQ,GACRG,KAAK,iCAER5H,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGI,YAAa,EACbC,SAAU,EACVC,OAAQ,EACRC,OAAQ,EACRpH,UAAU,QAEVL,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAMzD,UAAU,sBACbL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,MAAd,gBACA/D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,aAClBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKlD,QAAN,CAAcP,UAAU,eAAxB,2BAIHL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,aAClBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKlD,QAAN,CAAcP,UAAU,eAAxB,yCAMTL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGI,YAAa,EACbC,SAAU,EACVC,OAAQ,EACRC,OAAQ,EACRpH,UAAU,QAEVL,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,KACG9D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,MAAd,mBACA/D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,kBAClBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKlD,QAAN,CAAcP,UAAU,eAAxB,sCAIHL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,kBAClBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKlD,QAAN,CAAcP,UAAU,eAAxB,4CAMTL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGI,YAAa,EACbC,SAAU,EACVE,OAAQ,GACRG,KAAK,mCAKbrD,qsFCrOV,IAAMiF,GAAa7J,aAAOoH,KAAPpH,CAAHiR,KAuCoBlP,KAgBAE,KAMGiP,KA6BHC,MAgIrB/Q,eAJS,SAAA7C,GAAA,MAAkB,CACvCjD,QADqBiD,EAAGjD,UAIZ8F,CA/FG,SAAAnB,GAAA,IACf2C,EADe3C,EACf2C,SACAtH,EAFe2E,EAEf3E,QACA8W,EAHenS,EAGfmS,cACAC,EAJepS,EAIfoS,WACAC,EALerS,EAKfqS,YACAtO,EANe/D,EAMf+D,oBACAG,EAPelE,EAOfkE,sBACAoO,EARetS,EAQfsS,aARe,OAUflR,EAAAC,EAAAC,cAACiR,GAAD,KACGnR,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,CAAUvI,UAAU,YACjBL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaI,YAAa,EAAGC,SAAU,EAAGC,OAAQ,EAAGC,OAAQ,KAC7DzH,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaI,YAAa,EAAGC,SAAU,EAAGC,OAAQ,GAAIC,OAAQ,IAC3DzH,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAAS7C,UAAU,gBAAgBE,QAASwQ,EAAe5N,OAAK,GAC7DnD,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAMsD,cAAc,SAAS/G,UAAS,mBACnCL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,QACrBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,KAAK1D,UAAU,QAA7B,IACKpG,EAAQlD,WAEbiJ,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAS,SAAAnG,OAAWqH,EAAW,KAAO,OAGpDvB,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAASC,OAAK,EAAC9C,UAAS,YAAAnG,OAAcqH,EAAW,GAAK,SAClDxE,OAAOe,KAAK7D,EAAQjC,UACjBgM,OAAO,SAAA/D,GAAC,OAAIA,IAAMhG,EAAQlD,YAC1BkN,IAAI,SAAChK,EAASiK,GAAV,OACFlE,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CACG7F,IAAG,MAAA/D,OAAQgK,GACX3D,QAAS,kBAAMoC,EAAoB1I,IACnCoG,UAAU,WAEVL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,QACrBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,KAAK1D,UAAU,QAA7B,IACKpG,MAId+F,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CACGvD,QAASuC,EACTzC,UAAU,kBAEVL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,QACrBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,8BAArB,0BAOZL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaI,YAAa,EAAGC,SAAU,EAAGC,OAAQ,EAAGC,OAAQ,MAEhEzH,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,CAAUvI,UAAS,WAAAnG,OAAaqH,EAAW,OAAS,KACjDvB,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaI,YAAa,EAAGC,SAAU,EAAGC,OAAQ,EAAGC,OAAQ,KAC7DzH,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaI,YAAa,EAAGC,SAAU,EAAGC,OAAQ,GAAIC,OAAQ,IAC3DzH,EAAAC,EAAAC,cAACoL,GAAA,EAAD,CAAMmC,SAAUwD,GACbjR,EAAAC,EAAAC,cAAA,SACGhJ,KAAK,SACL+O,KAAK,YACL6F,MAAO7R,EAAQlD,YAGlBiJ,EAAAC,EAAAC,cAAC+J,GAAD,CACG3B,MAAM,aACN/H,QAASyQ,GAFZ,QAOAhR,EAAAC,EAAAC,cAAC+J,GAAD,CACG/S,KAAK,SACLoR,MAAM,OACNI,QAASwI,GAHZ,WASNlR,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaI,YAAa,EAAGC,SAAU,EAAGC,OAAQ,EAAGC,OAAQ,SC7MhE2J,gNACHrX,MAAQ,CACLmX,cAAc,EACd3P,UAAU,KAGb8M,kBAAoB,WACjB5L,EAAK5L,OAAS,IAAIgD,IAClB4I,EAAKG,MAAMlK,iBAAiB+J,EAAKG,MAAMjK,UACvC8J,EAAKG,MAAMnM,qBAAqBgM,EAAKG,MAAMlM,YAG9C4X,qBAAuB,WACpB7L,EAAKG,MAAMvG,gBAGd0U,cAAgB,WACbtO,EAAKC,SAAS,CACXnB,UAAWkB,EAAK1I,MAAMwH,cAI5ByP,WAAa,SAAA9Y,GACVA,EAAEqW,iBACE9L,EAAKG,MAAM3I,QAAQN,IAAIR,cACxBkB,OAAO1B,SAASe,KAAO+I,EAAKG,MAAM3I,QAAQN,IAAIR,gBAIpD8X,YAAc,WACXxO,EAAKC,SAAS,iBAAO,CAClBwO,cAAc,KAGjBzO,EAAKG,MAAMhH,aAAa6G,EAAKG,MAAM3I,QAAQlD,UAAW0L,EAAKG,MAAM3I,QAAQN,IAAIV,YAAawJ,EAAKG,MAAM3I,QAAQN,IAAIP,WAAYqJ,EAAKG,MAAM3I,QAAQN,IAAIT,YAAauJ,EAAKG,MAAM3I,QAAQN,IAAIC,WACpLvC,KAAK,SAAAuH,GACH,IADkBA,EAAZxG,MACN,CAGAgC,WAAW,WACRqI,EAAKG,MAAMlM,QAAQmM,KAFX,qBAGR,SAEL2L,QAAQ,WACN/L,EAAKC,SAAS,iBAAO,CAClBwO,cAAc,UAK1BvO,oBAAsB,SAAA5L,GACnB0L,EAAKG,MAAMtG,cAAcvF,GACzB0L,EAAKG,MAAMnM,qBAAqBgM,EAAKG,MAAMlM,YAG9CoM,sBAAwB,WACrBL,EAAK5L,OAAO2B,wBAAwB,GAAIiK,EAAKG,MAAMlM,mFAG7C,IACEuD,EAAY+I,KAAKJ,MAAjB3I,QAER,OACG+F,EAAAC,EAAAC,cAACmR,GAAD,CACGla,OAAQ8C,EAAQ9C,OAChBoZ,SAAUtW,EAAQN,KAAOM,EAAQN,IAAIC,WAEpCK,EAAQlD,WACNiJ,EAAAC,EAAAC,cAACoR,GAADvU,OAAAyC,OAAA,GACOwD,KAAKjJ,MADZ,CAEGgX,cAAe/N,KAAK+N,cACpBC,WAAYhO,KAAKgO,WACjBC,YAAajO,KAAKiO,YAClBtO,oBAAqBK,KAAKL,oBAC1BG,sBAAuBE,KAAKF,iCA1E1BuB,aAkFdvE,GAAqB,CACxBrJ,uBACAiC,mBACA4D,gBACAV,eACAS,cAOUkV,GAAkBxR,YAJP,SAAA7C,GAAA,MAAkB,CACvCjD,QADqBiD,EAAGjD,UAMxB6F,GAF4BC,CAG7ByE,aAAW4M,0BCnBEI,GAnFmB,SAAA5S,GAAA,IAAG6S,EAAH7S,EAAG6S,YAAaC,EAAhB9S,EAAgB8S,kBAAhB,OAC/B1R,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,KACG9D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAM4M,YAAU,EAACrQ,UAAU,SACxBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,SAClBL,EAAAC,EAAAC,cAACuB,GAAD,CACGjB,IAAKiR,EAAY,GACjBvQ,KAAK,SAGXlB,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKjD,OAAN,CAAakD,GAAG,MACZ0N,EAAY,IAEhBzR,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,KAAK1D,UAAU,cAC1BL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAhB,WAGCoR,EAAY,GAJhB,aASTzR,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,qBAClBL,EAAAC,EAAAC,cAACiE,GAAA,EAAD,CAAQ5D,QAASmR,GAAjB,iBAIF,GAgBA,ICUQC,GAnDQ,kBACpB3R,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,KACG9D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAM4M,YAAU,EAACrQ,UAAU,SACxBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAACuB,GAAD,CACGjB,IAAKkB,KACLR,KAAK,YAGXlB,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKjD,OAAN,CAAakD,GAAG,MAAhB,iBAGA/D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,MAAd,iBAIT/D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,qBAClBL,EAAAC,EAAAC,cAACiE,GAAA,EAAD,2BAEHnE,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,uBAClBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CACGK,GAAG,KACH1D,UAAU,wCAFb,uBAMAL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,sCAClBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKjD,OAAN,2BACAb,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,gBAEH1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,sCAClBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKjD,OAAN,kCACAb,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,gBAEH1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,sCAClBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKjD,OAAN,uCAGAb,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,iBAGN1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,yBAClBL,EAAAC,EAAAC,cAACiE,GAAA,EAAD,CAAQJ,GAAI0B,KAAMlC,GAAG,sBAArB,67HCxCT,IAAM0J,GAAatN,aAAOmE,KAAPnE,CAAHiS,KAyDWC,KAkBAA,KAMAnG,MA2GZoG,GAxBc,SAAAlT,GAAA,IAAGmT,EAAHnT,EAAGmT,eAAgBC,EAAnBpT,EAAmBoT,QAASP,EAA5B7S,EAA4B6S,YAAaC,EAAzC9S,EAAyC8S,kBAAzC,OAC1B1R,EAAAC,EAAAC,cAAC+R,GAAD,CAAY5R,UAAU,OACnBL,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,OAClBL,EAAAC,EAAAC,cAACI,GAAA,EAAD,CACGC,QAAS,kBAAMwR,KACfvR,IAAKC,QAGXT,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACgB,oBAAZsO,GAAiCP,EAC/BzR,EAAAC,EAAAC,cAACgS,GAAD,CACGT,YAAaA,EACbC,kBAAmBA,IAGtB1R,EAAAC,EAAAC,cAACiS,GAAD,CACGV,YAAaA,EACbC,kBAAmBA,+gBC1LlC,IAAMU,GAAoBzS,aAAOmE,KAAPnE,CAAH0S,MA0BjBC,GAAY,OACZC,GAAa,QAEbC,GAAQ,SAACC,EAAMlP,GAIlB,IAJmC,IAAbmP,EAAa7T,UAAAC,OAAA,QAAApB,IAAAmB,UAAA,GAAAA,UAAA,GAAN,EACzBqF,EAAIuO,EACFD,EAAQ,GAEPtO,GAAKX,GACTiP,EAAM3P,KAAKqB,GACXA,GAAKwO,EAGR,OAAOF,8/BAGV,SAAAG,GAAA,SAAAC,IAAA,IAAAC,EAAApQ,EAAA1F,OAAA+V,EAAA,EAAA/V,CAAAiG,KAAA4P,GAAA,QAAAG,EAAAlU,UAAAC,OAAAkU,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAArU,UAAAqU,GAAA,OAAAzQ,EAAA1F,OAAAoW,GAAA,EAAApW,CAAAiG,MAAA6P,EAAA9V,OAAAqW,GAAA,EAAArW,CAAA6V,IAAAS,KAAAC,MAAAT,EAAA,CAAA7P,MAAA9I,OAAA8Y,MAgBGjZ,MAAQ,CACLwZ,YAAa,MAjBnB9Q,EA4BG+Q,SAAW,SAAAC,GACR,IAAMF,EAAc9Q,EAAKG,MAAM8Q,cAAcD,GAAQ,EACrDhR,EAAKC,SAAS,CAAE6Q,iBA9BtB9Q,EAiCGpB,YAAc,SAACoS,EAAME,GAClBA,EAAIpF,iBACJ9L,EAAK+Q,SAASC,GACdE,EAAIC,OAAOC,QApCjBpR,EAuCGqR,eAAiB,SAAAH,GACdA,EAAIpF,iBACJ9L,EAAK+Q,SAAS/Q,EAAK1I,MAAMwZ,YAAyC,EAA3B9Q,EAAKG,MAAMmR,cAAoB,GACtEJ,EAAIC,OAAOC,QA1CjBpR,EA6CGuR,gBAAkB,SAAAL,GACfA,EAAIpF,iBACJ9L,EAAK+Q,SAAS/Q,EAAK1I,MAAMwZ,YAAyC,EAA3B9Q,EAAKG,MAAMmR,cAAoB,GACtEJ,EAAIC,OAAOC,QAhDjBpR,EAmDGwR,iBAAmB,WAChB,IAAMC,EAAazR,EAAK0R,gBAClBZ,EAAc9Q,EAAK1I,MAAMwZ,YACzBQ,EAAgBtR,EAAKG,MAAMmR,cAE3BK,EAA+B,EAAhBL,EAAoB,EAGzC,GAAIG,EAFgBE,EAAe,EAEL,CAC3B,IAAIC,EAAQ,GAENC,EAAYf,EAAcQ,EAC1BQ,EAAahB,EAAcQ,EAC3BS,EAAiBN,EAAa,EAE9BO,EAAYH,EAAY,EAAIA,EAAY,EACxCI,EACHH,EAAaC,EAAiBD,EAAaC,EAKxCG,EAAoBP,GAH1BC,EAAQ7B,GAAMiC,EAAWC,IAEA5V,OAC6B,EAEhD8V,EAAYH,EAAY,EACxBI,EAAaH,EAAUF,EAEvBM,EAAgBxC,GAChByC,EAAiBxC,GAEvB,GAAIqC,IAAcC,EAAY,CAC3B,IAAMG,EAAaxC,GAChBiC,EAAYE,EACZF,EAAY,GAEfJ,EAAK,CAAIS,GAAJ5a,OAAA6C,OAAAkY,GAAA,EAAAlY,CAAsBiY,GAAtBjY,OAAAkY,GAAA,EAAAlY,CAAqCsX,SACtC,IAAKO,GAAaC,EAAY,CAClC,IAAMG,EAAaxC,GAAMkC,EAAU,EAAGA,EAAUC,GAChDN,EAAK,GAAAna,OAAA6C,OAAAkY,GAAA,EAAAlY,CAAOsX,GAAPtX,OAAAkY,GAAA,EAAAlY,CAAiBiY,GAAjB,CAA6BD,SAC1BH,GAAaC,IACrBR,EAAK,CAAIS,GAAJ5a,OAAA6C,OAAAkY,GAAA,EAAAlY,CAAsBsX,GAAtB,CAA6BU,KAGrC,OAAQ,GAAR7a,OAAA6C,OAAAkY,GAAA,EAAAlY,CAAcsX,GAAd,CAAqBH,IAGxB,OAAO1B,GAAM,EAAG0B,IAjGtBzR,EAAA,OAAA1F,OAAAmY,GAAA,EAAAnY,CAAA6V,EAAAD,GAAA5V,OAAAoY,EAAA,EAAApY,CAAA6V,EAAA,EAAA3U,IAAA,gBAAA6N,MAAA,WAqBM,OAAOsJ,KAAKC,KAAKrS,KAAKJ,MAAM0S,aAAetS,KAAKJ,MAAM2S,aArB5D,CAAAtX,IAAA,oBAAA6N,MAAA,WAyBM9I,KAAKN,SAAS,CAAE6Q,YAAavQ,KAAKJ,MAAM4S,YAAc,MAzB5D,CAAAvX,IAAA,SAAA6N,MAAA,WAoGY,IAAA/I,EAAAC,KACN,IAAKA,KAAKJ,MAAM0S,aAAc,OAAO,KACrC,GAAwB,IAApBtS,KAAKkR,WAAkB,OAAO,KAElC,IAAMG,EAAQrR,KAAKiR,mBACnB,OACGjU,EAAAC,EAAAC,cAACkS,GAAD,CAAmB1B,YAAU,EAACrQ,UAAU,iBACpCgU,EAAMpQ,IAAI,SAACwP,EAAMgC,GACf,OAAIhC,IAASnB,GAEPtS,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWzF,IAAKwX,GACbzV,EAAAC,EAAAC,cAACiE,GAAA,EAAD,CAAQuR,UAAQ,EAACnV,QAASwC,EAAK+Q,gBAC5B9T,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKmV,SAKpBlC,IAASlB,GAEPvS,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWzF,IAAKwX,GACbzV,EAAAC,EAAAC,cAACiE,GAAA,EAAD,CAAQuR,UAAQ,EAACnV,QAASwC,EAAKiR,iBAA/B,QAONhU,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWzF,IAAKwX,GACbzV,EAAAC,EAAAC,cAACiE,GAAA,EAAD,CACGuR,UAAQ,EACR5T,OAAQiB,EAAKhJ,MAAMwZ,cAAgBE,EACnClT,QAAS,SAAArI,GAAC,OAAI6K,EAAK1B,YAAYoS,EAAMvb,KAEpCub,WArIzBb,EAAA,CAAmCvO,cASzBC,aAAe,CACnBiR,UAAW,GACXxB,cAAe,EACf6B,aAAc,aACdJ,YAAa,GCvDU7V,aAAOmE,KAAPnE,CAAHkW,MAA1B,6eCCmBlW,aAAO2L,KAAP3L,CAAHmW,KAccC,8qCCdDpW,aAAOmE,KAAPnE,CAAHqW,KAUIC,+mCCF9B,IAAMC,GAAsBvW,aAAOoH,KAAPpH,CAAHwW,KAiBjB,IA+CFC,gNAKHrc,MAAQ,CACLjB,OAAQ,GACRyI,UAAU,EACV8U,aAAc5T,EAAKG,MAAM1L,KACpBuL,EAAKG,MAAM0T,YAAY7T,EAAKG,MAAM1L,MAAMqf,IACxCC,KACLC,gBAAgB,EAChBC,YAAa,GAEbC,aAAa,KAGhB5F,cAAgB,WACbtO,EAAKC,SAAS,CACXnB,UAAWkB,EAAK1I,MAAMwH,cAI5BqV,oBAAsB,WACnBnU,EAAKC,SAAS,CACX+T,gBAAiBhU,EAAK1I,MAAM0c,oBAIlCvK,aAAe,SAAChU,EAAD0G,GAAwB,IAAlBqH,EAAkBrH,EAAlBqH,KAAM6F,EAAYlN,EAAZkN,MACxBrJ,EAAKC,SAAS,kBAAA3F,OAAAC,EAAA,EAAAD,CAAA,GAAUkJ,EAAO6F,QAGlC0B,aAAe,WACZrV,QAAQsW,IAAI,oBAGfoI,oBAAsB,SAAAR,GACnB5T,EAAKC,SAAS,CACX2T,eACA9U,UAAWkB,EAAK1I,MAAMwH,cAI5BuV,0BAA4B,SAAAJ,GACzBjU,EAAKC,SAAS,CACXgU,cACAD,gBAAiBhU,EAAK1I,MAAM0c,iBAG/BhU,EAAKG,MAAM8Q,cAAc,EAAGgD,MAY/BK,iBAAmB,WAChBtU,EAAKC,SAAS,SAAA3I,GAAK,MAAK,CACrB4c,aAAc5c,EAAM4c,gGAXVK,qCAeP,IAAAnM,EAUF7H,KAAKJ,MARN0T,EAFGzL,EAEHyL,YACApf,EAHG2T,EAGH3T,KAHG+f,GAAApM,EAIHmM,WAJGnM,EAKH1B,gBALG,IAAA8N,KAMHjF,EANGnH,EAMHmH,QACAP,EAPG5G,EAOH4G,YACAM,EARGlH,EAQHkH,eACAL,EATG7G,EASH6G,kBATG9G,EAkBF5H,KAAKjJ,MAlBHmd,GAAAtM,EAaHyL,aAbGzL,EAcHrJ,SAdGqJ,EAeH9R,OAfG8R,EAgBH8L,YAhBG9L,EAiBH6L,eASCzT,KAAKJ,OA1BHsU,EAqBH5B,aArBG4B,EAsBH3B,UAtBG2B,EAuBH1B,YAvBG0B,EAwBHxD,cAxBGwD,EAyBHnD,cAGuB7c,GAAQof,EAAYpf,GAE9C,OACG8I,EAAAC,EAAAC,cAACgW,GAAD,CACGhI,WAAS,EACTjH,QAAS,IAER,EA8BDjH,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,KACG5I,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGK,SAAU4B,EAAU,GAAK,GACzB9I,UAAW8I,EAAO,kBAElBnJ,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CAAM1G,UAAU,aAAa2C,KAAKJ,MAAM2B,WAG3CvE,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGK,SAAU,EACVlH,UAAS,YAAAnG,OAAciP,EAAO,YAE9BnJ,EAAAC,EAAAC,cAACiX,GAAD,CACGpF,eAAgBA,EAChBC,QAASA,EACTP,YAAaA,EACbC,kBAAmBA,OAI3B,UAzJiBrN,aAAxB+R,GACI9R,aAAe,CACnBoP,cAAe,cA0MN0C,UC/QTgB,gNACHrd,MAAQ,CACL5C,QAAQ,EACRgS,SAAS,EACTE,YAAa,EACbO,SAAU,GACV0M,YAAa,CACV,CAAEC,IAAK,GAAItQ,KAAM,OACjB,CAAEsQ,IAAK,GAAItQ,KAAM,OACjB,CAAEsQ,IAAK,GAAItQ,KAAM,OACjB,CAAEsQ,IAAK,GAAItQ,KAAM,WAIvBmD,cAAgB,SAAAlF,GACbA,EAAS,MAALA,EAAYzB,EAAK1I,MAAMsP,YAAcnF,EAEzCzB,EAAKC,SAAS,SAAA3I,GAAK,MAAK,CACrBoP,QAASjF,IAAMnK,EAAMsP,aAAetP,EAAMoP,QAAUpP,EAAMoP,QAC1DE,YAAanF,QAInB6N,eAAiB,WACdtP,EAAKC,SAAS,iBAAO,CAClByG,SAAS,EACTE,YAAa,EACboI,YAAa,2FAIC,IAAA1O,EAAAC,KACjBA,KAAKJ,MAAMlK,iBAAiBsK,KAAKJ,MAAMjK,UACvCqK,KAAKJ,MAAMnM,qBAAqBuM,KAAKJ,MAAMlM,SAE3CsM,KAAKN,SAAS,iBAAO,CAClBvL,QAAQ,KAGXiD,WAAW,WACR2I,EAAKL,SAAS,SAAA2U,GAAC,MAAK,CACjBzN,SAAU,CACP,CAAClI,KAAkB,iBAAkB,uBAAwB,IAC7D,CAACA,KAAkB,aAAc,aAAc,IAC/C,CACGA,KACA,mBACA,uBACA,IAEH,CAACA,KAAkB,iBAAkB,uBAAwB,IAC7D,CAACA,KAAkB,aAAc,aAAc,IAC/C,CACGA,KACA,mBACA,uBACA,IAEH,CAACA,KAAkB,iBAAkB,uBAAwB,IAC7D,CAACA,KAAkB,aAAc,aAAc,IAC/C,CACGA,KACA,mBACA,uBACA,IAEH,CAACA,KAAkB,iBAAkB,uBAAwB,KAEhEvK,QAAQ,MAEX,sCAGG,IAAAmgB,EAAAtU,KAAA4H,EACkD5H,KAAKjJ,MAArD6P,EADFgB,EACEhB,SAAU0M,EADZ1L,EACY0L,YAAanN,EADzByB,EACyBzB,QAASE,EADlCuB,EACkCvB,YAExC,OACGrJ,EAAAC,EAAAC,cAAC4K,GAAD,CACG/R,MAAM,WACNsR,WAAYrK,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAA,QAAMG,UAAU,oBAAhB,YAEnBL,EAAAC,EAAAC,cAACqX,GAAD,CACGjB,YAAaA,EACbnN,QAASA,EACTC,cAAepG,KAAKoG,cACpB2I,eAAgB/O,KAAK+O,gBAEpBnI,EAAS3F,IAAI,SAAC8E,EAAK7E,GAAN,OACXlE,EAAAC,EAAAC,cAAC8J,GAAD,CACG/L,IAAG,KAAA/D,OAAOgK,GACV6E,IAAKA,EACL7E,EAAGA,EACH+E,MAAM,EACNE,QAASA,EACTC,cAAekO,EAAKlO,cACpBC,YAAaA,eA/FXhF,aAwGjBvE,GAAqB,CACxBrJ,uBACAiC,oBAKU8e,GAAqBzX,YAFV,iBAAO,IAI5BD,GAF+BC,CAGhCyE,aAAW4S,8TCxHb,IAAMtI,GAAgBnP,aAAOuD,KAAPvD,CAAH8X,MAyBJC,GAVa,kBACzB1X,EAAAC,EAAAC,cAACyX,GAAD,CAAexU,OAAK,GACjBnD,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAX,uGACA/D,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAX,oCACA/D,EAAAC,EAAAC,cAAA,KAAGxG,KAAK,6BAA6Bka,OAAO,SAASgE,IAAI,uBACtD5X,EAAAC,EAAAC,cAAC+J,GAAD,CAAY3B,MAAM,QAAlB,kBCRHuP,gNACH9d,MAAQ,CACL5C,QAAQ,EACRgS,SAAS,EACTE,YAAa,EACboI,YAAa,GACbhT,eAAgB,GAChB6X,YAAa,CACV,CAAEC,IAAK,GAAItQ,KAAM,OACjB,CAAEsQ,IAAK,GAAItQ,KAAM,OACjB,CAAEsQ,IAAK,GAAItQ,KAAM,OACjB,CAAEsQ,IAAK,GAAItQ,KAAM,WAIvBmD,cAAgB,SAAClF,EAAG6E,GACjB7E,EAAS,MAALA,EAAYzB,EAAK1I,MAAMsP,YAAcnF,EAEzCzB,EAAKC,SAAS,SAAA3I,GAAK,MAAK,CACrBoP,SAAS,EACTE,YAAanF,EACbuN,YAAa1I,QAInBgJ,eAAiB,WACdtP,EAAKC,SAAS,iBAAO,CAClByG,SAAS,EACTE,YAAa,EACboI,YAAa,SAInBC,kBAAoB,WACjB,IAAM5V,EAAY2G,EAAK1I,MAAM0X,YAAY,GAEzChP,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,KAGXsL,EAAKG,MAAM1H,gBAAgBY,GAAWzE,KAAK,WACxCoL,EAAKsP,iBACLtP,EAAKiI,6BAIXA,sBAAwB,WACrBjI,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,KAGXsL,EAAKG,MAAM3L,oBAAoBI,KAAK,WACjCoL,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,4FAMd6L,KAAKJ,MAAMlK,iBAAiBsK,KAAKJ,MAAMjK,UACvCqK,KAAKJ,MAAMnM,qBAAqBuM,KAAKJ,MAAMlM,SAC3CsM,KAAK0H,yDAGC,IAAA3H,EAAAC,KAAA4H,EAMF5H,KAAKjJ,MAJNuc,EAFG1L,EAEH0L,YACAnN,EAHGyB,EAGHzB,QACAE,EAJGuB,EAIHvB,YACAoI,EALG7G,EAKH6G,YAGKhT,EAAmBuE,KAAKJ,MAAxBnE,eAER,OACGuB,EAAAC,EAAAC,cAAC4K,GAAD,CACG/R,MAAM,kBACNsR,WACGrK,EAAAC,EAAAC,cAAA,UACIzB,GAAkBA,EAAeK,OAClCkB,EAAAC,EAAAC,cAAA,QAAMG,UAAU,oBAAhB,YAINL,EAAAC,EAAAC,cAACqX,GAAD,CACGjB,YAAaA,EACbnN,QAASA,EACTsI,YAAaA,EACbrI,cAAepG,KAAKoG,cACpB2I,eAAgB/O,KAAK+O,eACrBC,QAAQ,kBACRN,kBAAmB1O,KAAK0O,mBAEvBjT,IAAmBA,EAAeK,OAC9BL,EAAewF,IAAI,SAAC8E,EAAK7E,GAAN,OAClBlE,EAAAC,EAAAC,cAAC8J,GAAD,CACG/L,IAAG,KAAA/D,OAAOgK,GACV6E,IAAKA,EACL7E,EAAGA,EACH+E,MAAM,EACNE,QAASA,EACTC,cAAerG,EAAKqG,cACpBC,YAAaA,MAEdrJ,EAAAC,EAAAC,cAAC4X,GAAD,gBAxGMzT,aA+GvBvE,GAAqB,CACxBrJ,uBACAiC,mBACAzB,oBACAiE,mBAeU6c,GAA2BhY,YAZhB,SAAAnB,GAAA,IAAG3E,EAAH2E,EAAG3E,QAAH,OAAA8C,OAAAM,EAAA,EAAAN,CAAA,GAClB9C,EADkB,CAErBwE,eAAgBxE,EAAQwE,eACnBxE,EAAQwE,eAAewF,IAAI,SAAA+G,GAAC,MAAI,CAC7BC,KACAD,EAAEnP,WACFmP,EAAExT,OACFwT,EAAElP,aAEL,QAKLgE,GAFqCC,CAGtCyE,aAAWqT,qwCCjJb,IAAM/W,GAAYnB,aAAM,MAANA,CAAHqY,KAUO,SAAApV,GAAK,OAAIA,EAAMqV,WAwC/BC,gNACHne,MAAQ,CACLvC,OAAQ,GAAA0C,OAAGuI,EAAKG,MAAMuV,gBAAmB,GACzCC,aAAc,MAGjBC,mBAAqB,SAACngB,EAAD0G,GAAwB,IAAlBqH,EAAkBrH,EAAlBqH,KAAM6F,EAAYlN,EAAZkN,MACxBsM,EAAgB1gB,OAAO4gB,UAAU5gB,OAAOoU,IAEzCA,EAAQpU,OAAO+K,EAAKG,MAAMpL,QACvB,qBACA,GAHH,+BAKLiL,EAAKC,SAAS,eAAAxF,EAAA,OAAAA,EAAA,GAAAH,OAAAC,EAAA,EAAAD,CAAAG,EACV+I,EAAO6F,GADG/O,OAAAC,EAAA,EAAAD,CAAAG,EAAA,eAEXkb,GAFWlb,IAKduF,EAAKG,MAAMsJ,aAAahU,EAAG,CAAE+N,OAAM6F,UACnCrJ,EAAKG,MAAMsJ,aAAahU,EAAG,CAAE+N,KAAM,eAAgB6F,MAAOsM,8EAGnD,IAAAxN,EAC0B5H,KAAKjJ,MAA9BvC,EADDoT,EACCpT,OAAQ4gB,EADTxN,EACSwN,aACVH,EAAWzgB,EAAOsH,OAAS,GAAK,GAAKtH,EAAOsH,OAAS,EAAI,GAAKtH,EAAOsH,OAAS,EAAI,GAAK,GAE7F,OACGkB,EAAAC,EAAAC,cAACqY,GAAD,CAAWN,SAAQ,GAAA/d,OAAK+d,EAAL,OAChBjY,EAAAC,EAAAC,cAACoL,GAAA,EAAKC,MAAN,CACGrU,KAAK,SACLshB,QAAQ,SACRvS,KAAK,SACL6F,MAAOtU,EACP8U,SAAUtJ,KAAKqV,mBACf9L,YAAY,IACZmG,KAAK,IACL+F,IAAI,MAENL,GACEpY,EAAAC,EAAAC,cAACgD,GAAA,EAAD,CAASC,OAAK,EAACgE,UAAU,SAAS9G,UAAU,sBACxC+X,WAxCgB/T,aA2DpBtE,eAJS,SAAA3B,EAAAG,GAAA,IAAGtE,EAAHmE,EAAGnE,QAAHsE,EAAgBwN,MAAhB,OAAAhP,OAAAM,EAAA,EAAAN,CAAA,GAClB9C,IAHqB,GAMZ8F,CAGbmY,guDCjGF,IAAMjL,GAAatN,aAAOmE,KAAPnE,CAAH+Y,MA8IDC,GAvEY,SAAA/Z,GAAA,IACxBga,EADwBha,EACxBga,eACA1M,EAFwBtN,EAExBsN,aAEA/U,GAJwByH,EAGxBia,KAHwBja,EAIxBzH,QACA2hB,EALwBla,EAKxBka,eACA/hB,EANwB6H,EAMxB7H,UACAiZ,EAPwBpR,EAOxBoR,YACAtT,EARwBkC,EAQxBlC,WACA2B,EATwBO,EASxBP,cACA7G,EAVwBoH,EAUxBpH,OAVwB,OAYxBwI,EAAAC,EAAAC,cAAC6Y,GAAD,CAAY1Y,UAAU,OACnBL,EAAAC,EAAAC,cAACoL,GAAA,EAAD,CAAMoB,aAAa,OAChB1M,EAAAC,EAAAC,cAAC4J,GAAA,EAAD,CAAQC,UAAQ,EAACjI,OAAQ3K,GACtB6I,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,OAGFiX,EACE9Y,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKlD,QAAN,CAAcP,UAAU,cACrBL,EAAAC,EAAAC,cAACuB,GAAD,CACGjB,IAAKkB,KACLR,KAAK,YAGXlB,EAAAC,EAAAC,cAAC4D,GAAA,EAAKlD,QAAN,CAAcmD,GAAG,MAAMhN,GACvBiJ,EAAAC,EAAAC,cAAC4D,GAAA,EAAKlD,QAAN,SAAgB7J,IAGnBiJ,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,KACG1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKlD,QAAN,KACGZ,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAX,6BACA/D,EAAAC,EAAAC,cAAC8M,GAAD,CACGtQ,WAAYA,EACZwP,aAAcA,EACdN,iBAAkB7U,IAErBiJ,EAAAC,EAAAC,cAAC+B,GAAA,EAAD,CAAY8B,GAAIqH,GAAkB/I,SAAU,IAAKhE,cAAeA,MAIzE2B,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,qBAClBL,EAAAC,EAAAC,cAAC8Y,GAAD,CACG9M,aAAcA,EACdiM,cAAe3gB,KAYjB,KACJwI,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,cAClBL,EAAAC,EAAAC,cAAC+J,GAAD,CACG1J,QAASqY,EACTtQ,MAAM,QACNE,UAAWwH,KAHd,u2EC7IZ,IAAM/C,GAAatN,aAAOmE,KAAPnE,CAAHsZ,KAmBM,SAAArW,GAAK,OAAIA,EAAMqV,WAuJtBiB,GA/Da,SAAAta,GAAA,IACzBga,EADyBha,EACzBga,eACAO,EAFyBva,EAEzBua,iBACAC,EAHyBxa,EAGzBwa,aACAC,EAJyBza,EAIzBya,WACAR,EALyBja,EAKzBia,KACArhB,EANyBoH,EAMzBpH,OACAT,EAPyB6H,EAOzB7H,UACAI,EARyByH,EAQzBzH,OARyB,OAUzB6I,EAAAC,EAAAC,cAACoZ,GAAD,CAAYjZ,UAAU,MAAM4X,SAAUzgB,EAAOiG,WAAWqB,OAAS,EAAI,GAAK,IACvEkB,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,MAAd,mBACA/D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,wBACjB7I,EAAOG,eAAe,KAAM,CAACC,aAAY,IAC1CoI,EAAAC,EAAAC,cAAA,uBAEHF,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,MAClBL,EAAAC,EAAAC,cAACW,GAAA,EAAD,CAAQkD,GAAG,MAAX,OAEH/D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,cAClBL,EAAAC,EAAAC,cAACuB,GAAD,CACGjB,IAAKkB,KACLR,KAAK,YAGXlB,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,MAAMhN,GACpBiJ,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,SAAa3M,GACZ8hB,GACE7Y,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,cAArB,aAEGL,EAAAC,EAAAC,cAAA,WACCmZ,EACErZ,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAewY,GAE/B7Y,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cAAcE,QAAS4Y,GAAvC,gBAMTnZ,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,yBAClBL,EAAAC,EAAAC,cAAC+J,GAAD,CACG1J,QAASqY,EACTtQ,MAAM,QACNE,SAAUrR,EACVuR,QAASvR,GAJZ,mBASH6I,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,8CACA1D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,qBAClBL,EAAAC,EAAAC,cAAC+J,GAAD,CACG1J,QAAS6Y,EACT9Q,MAAM,YACNE,SAAUrR,GAHb,0kCC/JT,IAAM8V,GAAatN,aAAOmE,KAAPnE,CAAH4Z,MA6EDC,GA3BY,SAAA5a,GAAA,IAAGia,EAAHja,EAAGia,KAAMrhB,EAAToH,EAASpH,OAAQT,EAAjB6H,EAAiB7H,UAAjB,OACxBiJ,EAAAC,EAAAC,cAACuZ,GAAD,KACGzZ,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,cAClBL,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKoD,QAEf5D,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,KAAK1D,UAAU,UACzB7I,EAAOG,eAAe,KAAM,CAACC,aAAY,IAC1CoI,EAAAC,EAAAC,cAAA,sBAFH,iBAIAF,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,cAClBL,EAAAC,EAAAC,cAACuB,GAAD,CACGjB,IAAKkB,KACLR,KAAK,YAGXlB,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWK,GAAG,MAAMhN,GACpBiJ,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,SAAa3M,GACZ8hB,GACE7Y,EAAAC,EAAAC,cAAC4D,GAAA,EAAKJ,KAAN,CAAWrD,UAAU,aAClBL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,aAAhB,cACAL,EAAAC,EAAAC,cAAA,WACC2Y,KCnEPa,gNACH3f,MAAQ,CACL5C,QAAQ,EACRub,KAAM,EACNmG,KAAM,GACNQ,YAAY,EACZP,gBAAgB,EAChB/hB,UAAW,GACXS,OAAQ,GACR4gB,aAAc,MAkCjB9J,qBAAuB,WACpB7L,EAAKG,MAAMlH,WAGd0d,aAAe,WACZ3W,EAAKC,SAAS,iBAAO,CAClBgQ,KAAM,QAIZiH,qBAAuB,WACpBlX,EAAKG,MAAMlH,QAEX+G,EAAKC,SAAS,iBAAO,CAClBgQ,KAAM,EACNmG,KAAM,GACNrhB,OAAQ,GACRT,UAAW,GACX6iB,gBAAgB,EAChBd,gBAAgB,KAGnBrW,EAAKG,MAAMlM,QAAQmM,KAAK,kBAG3B+V,eAAiB,SAAC1gB,GACfA,EAAEqW,iBADmB,IAAA3D,EAEcnI,EAAK1I,MAAhC2Y,EAFa9H,EAEb8H,KAAM3b,EAFO6T,EAEP7T,UAAWS,EAFJoT,EAEIpT,OAEzB,GAAa,IAATkb,EAmBD,OAlBAjQ,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,UAGXsL,EAAK5L,OAAOgjB,UAAU9iB,EAAWS,GAC7BH,KAAK,WACHoL,EAAKG,MAAMnM,qBAAqBgM,EAAKG,MAAMlM,SAE3C+L,EAAKC,SAAS,SAAA3I,GAAK,MAAK,CACrB2Y,KAAM3Y,EAAM2Y,KAAO,OAGxBza,MAAME,QAAQC,OACdoW,QAAQ,WACN/L,EAAKC,SAAS,iBAAO,CAClBvL,QAAQ,OAMpBsL,EAAKC,SAAS,SAAA3I,GAAK,MAAK,CACrB2Y,KAAM3Y,EAAM2Y,KAAO,EACnBlb,QAASuC,EAAMvC,aAIrB0U,aAAe,SAAChU,EAAD0G,GAAwB,IAAlBqH,EAAkBrH,EAAlBqH,KAAM6F,EAAYlN,EAAZkN,MACxBrJ,EAAKC,SAAS,kBAAA3F,OAAAC,EAAA,EAAAD,CAAA,GACVkJ,EAAO6F,QAIdqN,iBAAmB,WAChB1W,EAAKC,SAAS,iBAAO,CAClB2W,YAAY,QAIlBrJ,YAAc,WAAM,IAAA8J,EACgCrX,EAAK1I,MAA9C+e,EADSgB,EACThB,eAAgBthB,EADPsiB,EACOtiB,OAAQ4gB,EADf0B,EACe1B,aACxB/Z,EAAkBoE,EAAKG,MAAvBvE,cAER,OAAOya,EACHthB,EAAU,GAAsB,KAAjB4gB,EAChB/Z,GAAiBA,EAAcd,SAAY/F,EAAU,GAAsB,KAAjB4gB,uFA1G5C,IAAArV,EAAAC,KACjBA,KAAKnM,OAAS,IAAIgD,IAClBmJ,KAAKJ,MAAMlK,iBAAiBsK,KAAKJ,MAAMjK,UACvCqK,KAAKJ,MAAMnM,qBAAqBuM,KAAKJ,MAAMlM,SAE3C,IAAMqjB,EAAU/W,KAAKJ,MAAMmJ,MAAM+D,OAAOkK,GAExChX,KAAKN,SAAS,iBAAO,CAClBvL,QAAQ,KAGP4iB,EACD/W,KAAKJ,MAAMpH,sBAAsBue,GAAS1iB,KAAK,SAAA+G,GAAe,IAAZhG,EAAYgG,EAAZhG,MAC/C2K,EAAKL,SAAS,iBAAO,CAClBvL,QAAQ,EACRJ,UAAWgjB,KAGV3hB,GAEJ2K,EAAKL,SAAS,iBAAO,CAClBoW,gBAAgB,OAItB9V,KAAKN,SAAS,iBAAO,CAClBvL,QAAQ,sCAmFR,IAAA8iB,EACmBjX,KAAKjJ,MAAtB2Y,EADFuH,EACEvH,KAAMvb,EADR8iB,EACQ9iB,OADR0T,EAEgC7H,KAAKJ,MAAnClG,EAFFmO,EAEEnO,WAAY2B,EAFdwM,EAEcxM,cAEpB,OACG2B,EAAAC,EAAAC,cAAC4K,GAAD,CACG/R,MAAgB,IAAT2Z,EAAA,wBACPpI,OAAiB,IAAToI,GACL1S,EAAAC,EAAAC,cAAC+J,GAAD,CACG1J,QAASyC,KAAK2W,qBACdrR,MAAM,iBACNE,SAAUrR,GAHb,mBAQHD,KAAK,UAEK,IAATwb,GACE1S,EAAAC,EAAAC,cAACga,GAADnd,OAAAyC,OAAA,CACGoZ,eAAgB5V,KAAK4V,eACrB1M,aAAclJ,KAAKkJ,aACnB8D,YAAahN,KAAKgN,YAClBtT,WAAYA,EACZ2B,cAAeA,GACX2E,KAAKjJ,QAGL,IAAT2Y,GACE1S,EAAAC,EAAAC,cAACia,GAADpd,OAAAyC,OAAA,CACGoZ,eAAgB5V,KAAK4V,eACrBO,iBAAkBnW,KAAKmW,iBACvBC,aAAcpW,KAAKoW,cACfpW,KAAKjJ,QAGL,IAAT2Y,GAAc1S,EAAAC,EAAAC,cAACka,GAAuBpX,KAAKjJ,eA7JhCsK,aAmKlBvE,GAAqB,CACxBrJ,uBACAiC,mBACA8C,wBACAE,SAOU2e,GAAsBta,YAJX,SAAAxB,GAAA,IAAGtE,EAAHsE,EAAGtE,QAAH,OAAA8C,OAAAM,EAAA,EAAAN,CAAA,GAClB9C,IAKH6F,GAFgCC,CAGjCyE,aAAWkV,+7BCnLb,IAAMlQ,GAAa7J,aAAOoH,KAAPpH,CAAH2a,MA+QDC,GAhOQ,SAAA3b,GAAA,IAAG3E,EAAH2E,EAAG3E,QAAH,OACpB+F,EAAAC,EAAAC,cAACsa,GAAD,KACGxa,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,KACG5I,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CACGK,SAAS,KACTC,OAAO,KACPC,OAAO,KACP1D,GAAG,KACH1D,UAAU,uBALb,WASAL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAS,IAAIxD,GAAG,KAAKoD,UAAU,SAASS,KAAK,UAA1D,eAIH5H,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,CAAUvI,UAAU,cACjBL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAS,IAAIC,OAAO,IAAIC,OAAO,IAAIpH,UAAU,SAA1D,YAGAL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAS,IAAIC,OAAO,IAAIC,OAAO,KAA5C,IACKxN,EAAQlD,WAEbiJ,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAS,IAAIC,OAAO,IAAIL,UAAU,SAASS,KAAK,UAA7D,UAGA5H,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAS,IAAIC,OAAO,IAAIC,OAAO,IAAIN,UAAU,SACvDnH,EAAAC,EAAAC,cAACwE,GAAA,EAAD,CACGO,QACGjF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACZL,EAAAC,EAAAC,cAACI,GAAA,EAAD,CAAOE,IAAKia,KAAWC,MAAM,UAGnCC,WAAS,EACTzV,SAAS,eAETlF,EAAAC,EAAAC,cAACwE,GAAA,EAAM7D,OAAP,4BACAb,EAAAC,EAAAC,cAACwE,GAAA,EAAM9D,QAAP,6JAG8BZ,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CAAMC,GAAG,WAAT,0BAH9B,wDAQK,SAiKL,KAETvD,EAAAC,EAAAC,cAAC6G,GAAA,EAAK6B,IAAN,CAAUvI,UAAU,cACjBL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAS,IAAIC,OAAO,IAAIC,OAAO,IAAIpH,UAAU,SAA1D,WAGAL,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAS,IAAIC,OAAO,IAAIC,OAAO,KACxCxN,EAAQzC,OADZ,WAGAwI,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAS,IAAIC,OAAO,IAAIL,UAAU,SAASS,KAAK,UAA7D,WAGA5H,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAanD,GAAG,WCxQV6W,GAVQ,SAAAhc,GAAA,IAAG2F,EAAH3F,EAAG2F,SAAH,OACpBvE,EAAAC,EAAAC,cAAC6G,GAAA,EAAD,CAAME,QAAS,EAAGiH,WAAS,GACxBlO,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAU,IAAKhD,EAAS,IACrCvE,EAAAC,EAAAC,cAAC6G,GAAA,EAAKG,OAAN,CAAaK,SAAU,GACnBhD,EAAS,GACTA,EAAS,ytDCAA5E,aAAOmE,KAAPnE,CAAHkb,4bCHGlb,aAAOmE,KAAPnE,CAAHmb,MAAhB,ICOMC,gNACHhhB,MAAQ,CACL5C,QAAQ,uFAIR6L,KAAKJ,MAAMlK,iBAAiBsK,KAAKJ,MAAMjK,UACvCqK,KAAKJ,MAAMnM,qBAAqBuM,KAAKJ,MAAMlM,0CAGrC,IACEuD,EAAY+I,KAAKJ,MAAjB3I,QAER,OACG+F,EAAAC,EAAAC,cAAC4K,GAAD,CACG/R,MAAK,aAAAmB,OAAeD,EAAQlD,UAAYkD,EAAQlD,UAA5B,KAEpBiJ,EAAAC,EAAAC,cAAC8a,GAAD,KACGhb,EAAAC,EAAAC,cAAC+a,GAAD,CAAgBhhB,QAAS+I,KAAKJ,MAAM3I,UAGlC,KAGA,cAxBKoK,aA+BhBvE,GAAqB,CACxBrJ,uBACAiC,oBAOUwiB,GAAoBnb,YAJT,SAAAnB,GAAA,MAAkB,CACvC3E,QADqB2E,EAAG3E,UAMxB6F,GAF8BC,CAG/ByE,aAAWuW,w9MCtDEI,oBAAfC,MCmBMC,GAAQ,GA0ECC,uLApET,OACGtb,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACZL,EAAAC,EAAAC,cAACqb,GAAD,MAEAvb,EAAAC,EAAAC,cAACsb,EAAA,EAAD,CAEG9kB,QAASsM,KAAKJ,MAAMlM,SAEpBsJ,EAAAC,EAAAC,cAACub,GAAA,EAAD,CAAeJ,MAAOA,IACnBrb,EAAAC,EAAAC,cAACwb,GAAD,KACG1b,EAAAC,EAAAC,cAACyb,GAAA,EAAD,KACG3b,EAAAC,EAAAC,cAACyb,GAAA,EAAD,CACGC,OAAK,EACLC,KAAK,IACLC,UAAWC,KAEd/b,EAAAC,EAAAC,cAACyb,GAAA,EAAD,CACGC,OAAK,EACLC,KAAK,UACLC,UAAWjN,KAEd7O,EAAAC,EAAAC,cAACyb,GAAA,EAAD,CACGC,OAAK,EACLC,KAAK,2BACLC,UAAWjM,KAEd7P,EAAAC,EAAAC,cAACyb,GAAA,EAAD,CACGC,OAAK,EACLC,KAAK,mBACLC,UAAW3L,KAEdnQ,EAAAC,EAAAC,cAACyb,GAAA,EAAD,CACGC,OAAK,EACLC,KAAK,SACLC,UAAWvK,KAEdvR,EAAAC,EAAAC,cAACyb,GAAA,EAAD,CACGC,OAAK,EACLC,KAAK,YACLC,UAAWtE,KAEdxX,EAAAC,EAAAC,cAACyb,GAAA,EAAD,CACGC,OAAK,EACLC,KAAK,mBACLC,UAAW/D,KAEd/X,EAAAC,EAAAC,cAACyb,GAAA,EAAD,CACGC,OAAK,EACLC,KAAK,mBACLC,UAAWzB,KAEdra,EAAAC,EAAAC,cAACyb,GAAA,EAAD,CACGC,OAAK,EACLC,KAAK,WACLC,UAAWZ,KAGdlb,EAAAC,EAAAC,cAACyb,GAAA,EAAD,CAAOG,UAAWC,MAErB/b,EAAAC,EAAAC,cAAC8b,GAAD,iBA7DC3X,aCbF4X,QACW,cAA7B5hB,OAAO1B,SAASujB,UAEe,UAA7B7hB,OAAO1B,SAASujB,UAEhB7hB,OAAO1B,SAASujB,SAASnQ,MACvB,2DCLN,ICRgBrV,GDQVA,GAAUylB,cAEV/c,GAAQgd,aCVE1lB,GDU4BA,GCVhB2lB,YAAgB,CACzCpiB,UACAqiB,OAAQC,YAAc7lB,OxD4BV,SAACA,GAAD,OAAasI,EACxBwd,YACIC,YAAiB/lB,GACjBgmB,IACAvd,IuDxB8Cwd,CAAiBjmB,KAEvEkmB,IAASC,OACN7c,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAU1d,MAAOA,IACdY,EAAAC,EAAAC,cAAC6c,GAAD,CAASrmB,QAASA,MAErBsmB,SAASC,eAAe,SD4GrB,kBAAmBC,WACrBA,UAAUC,cAAc3e,MAAMnH,KAAK,SAAA+lB,GACjCA,EAAaC,+LG5HbC,EAAaC,0DAAYC,sBAAwB,UACjDC,EAAqBF,0DAAYG,8BAAgC,6CACjEC,EAA2B,GAAAzjB,OAAMujB,EAAN,YAC3BG,EAAWL,0DAAYM,oBAAsB,+BAC7CC,EAAaP,0DAAYQ,8BAAgC,+CAGzDC,EAAsBC,wBACtBC,EAAwBD,iCAExBE,EAAmB,uBAEZtkB,EAAb,WACG,SAAAA,IAAekD,OAAAqhB,EAAA,EAAArhB,CAAAiG,KAAAnJ,GACZmJ,KAAKqb,UAAY,IAAIC,YAAkBC,4BACvCvb,KAAKwb,WAAaF,aAAmBG,WAAW,CAC7CC,UAAWpB,EACXqB,SAAU,CAAEznB,KAAM,kBAAmB8b,KAAM,CAAErZ,IAAKikB,EAAW,MAC7DgB,OAAQ,CAAE1nB,KAAM,iBAAkB2nB,SAAU7b,KAAKqb,aAEpDrb,KAAKhL,SAAW8mB,KAAKjmB,MAClBkmB,aAAaC,QAAQhB,IAAwB,MAEhDhb,KAAKjM,UAAYgoB,aAAaC,QAAQd,IAA0B,GAXtE,OAAAnhB,OAAAkiB,EAAA,EAAAliB,CAAAlD,EAAA,EAAAoE,IAAA,OAAA6N,MAAA,WAeMiT,aAAaG,QAAQhB,EAAuBlb,KAAKjM,WACjDgoB,aAAaG,QAAQlB,EAAqBc,KAAK3kB,UAAU6I,KAAKhL,aAhBpE,CAAAiG,IAAA,eAAA6N,MAAA,WAoBM,OAAO9I,KAAKjM,YApBlB,CAAAkH,IAAA,gBAAA6N,MAAA,SAuBiB/U,GACX,KAAMA,KAAaiM,KAAKhL,UACrB,OAAO,EAEVgL,KAAKjM,UAAYA,EACjBiM,KAAKmc,SA5BX,CAAAlhB,IAAA,mBAAA6N,MAAA,SA+BoB/U,GACd,OAAOonB,EAAiBiB,KAAKroB,KAhCnC,CAAAkH,IAAA,YAAA6N,MAAA,eAAAuT,EAAAtiB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAAC,EAmCmBC,EAAYloB,GAnC/B,OAAA+nB,EAAAtf,EAAA0f,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAvgB,MAAA,cAAAugB,EAAAvgB,KAAA,EAoCY2D,KAAK8c,WAAW9c,KAAKjM,WAAW8iB,UAAU6F,EAAYloB,GApClE,wBAAAooB,EAAAG,SAAAN,EAAAzc,SAAA,gBAAAgd,EAAAC,GAAA,OAAAZ,EAAA/L,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,0BAAA6N,MAAA,WAuCkD,IAAvBoU,EAAuBrhB,UAAAC,OAAA,QAAApB,IAAAmB,UAAA,GAAAA,UAAA,GAAb,GAAInI,EAASmI,UAAAC,OAAA,EAAAD,UAAA,QAAAnB,EACtCyiB,EAAQ,CACXC,SAAU/lB,OAAO1B,SAASG,QAEzBonB,EAAQznB,iBACT0nB,EAAM1nB,gBAAiB,GAG1B,IAAIkB,EACD0mB,YAEAtjB,OAAOe,KAAKqiB,GAAOlc,IAChB,SAAC5N,EAAG6N,GAAJ,SAAAhK,OACMgK,EAAI,IAAM,IADhBhK,OACqBomB,mBAAmBjqB,GADxC,KAAA6D,OAC8ComB,mBACxCH,EAAM9pB,OAGlBK,EAAUA,EAAQmM,KAAKlJ,GAAOU,OAAO1B,SAAS4nB,QAAQ5mB,KAxD5D,CAAAsE,IAAA,UAAA6N,MAAA,WA4DM,OAAQ9I,KAAKhL,WAAa+E,OAAOe,KAAKkF,KAAKhL,UAAU8G,SA5D3D,CAAAb,IAAA,kBAAA6N,MAAA,SA+DmBpV,GACTsM,KAAKwd,WACNxd,KAAKxK,wBAAwB,GAAI9B,KAjE1C,CAAAuH,IAAA,cAAA6N,MAAA,eAAA2U,EAAA1jB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAAkB,EAqEqB3pB,GArErB,OAAAwoB,EAAAtf,EAAA0f,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAthB,MAAA,UAsEYtI,KAAaiM,KAAKhL,SAtE9B,CAAA2oB,EAAAthB,KAAA,cAuEe,IAAIuhB,MAAM,WAAa7pB,EAAY,mBAvElD,cAAA4pB,EAAAthB,KAAA,EAyEmB2D,KAAK8c,WAAW9c,KAAKjM,WAAWgD,QAzEnD,cAAA4mB,EAAAE,OAAA,SAAAF,EAAAG,MAAA,wBAAAH,EAAAZ,SAAAW,EAAA1d,SAAA,gBAAA+d,GAAA,OAAAN,EAAAnN,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,oBAAA6N,MAAA,eAAAkV,EAAAjkB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAAyB,IAAA,OAAA1B,EAAAtf,EAAA0f,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAA7hB,MAAA,UA6EW2D,KAAKjM,UA7EhB,CAAAmqB,EAAA7hB,KAAA,eAAA6hB,EAAAL,OAAA,SA6EkC,MA7ElC,cAAAK,EAAA7hB,KAAA,EA8EmB2D,KAAK8c,WAAW9c,KAAKjM,WAAWE,kBAAkB8nB,aAAaC,QAAQd,IA9E1F,cAAAgD,EAAAL,OAAA,SAAAK,EAAAJ,MAAA,wBAAAI,EAAAnB,SAAAkB,EAAAje,SAAA,yBAAAge,EAAA1N,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,kBAAA6N,MAAA,eAAAqV,EAAApkB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAA4B,EAiFyBtlB,GAjFzB,OAAAyjB,EAAAtf,EAAA0f,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAhiB,MAAA,cAAAgiB,EAAAhiB,KAAA,EAkFmB2D,KAAK8c,WAAW9c,KAAKjM,WAAWuqB,UAAUxlB,GAlF7D,cAAAulB,EAAAR,OAAA,SAAAQ,EAAAP,MAAA,wBAAAO,EAAAtB,SAAAqB,EAAApe,SAAA,gBAAAue,GAAA,OAAAJ,EAAA7N,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,wBAAA6N,MAAA,eAAA0V,EAAAzkB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAAiC,EAqF+B1qB,GArF/B,OAAAwoB,EAAAtf,EAAA0f,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAAriB,MAAA,UAsFW2D,KAAK2e,iBAAiB5qB,GAtFjC,CAAA2qB,EAAAriB,KAAA,cAuFe,IAAIuhB,MAAM,qBAvFzB,UAyFU7pB,IAAciM,KAAKjM,UAzF7B,CAAA2qB,EAAAriB,KAAA,eAAAqiB,EAAAriB,KAAA,EA0FsB2D,KAAK8c,WAAW/oB,GAAWgD,QA1FjD,cAAA2nB,EAAAb,OAAA,SAAAa,EAAAZ,MAAA,aA4Fe,IAAIF,MAAM,+BAAiC7pB,EAAY,MA5FtE,wBAAA2qB,EAAA3B,SAAA0B,EAAAze,SAAA,gBAAA4e,GAAA,OAAAJ,EAAAlO,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,kBAAA6N,MAAA,eAAA+V,EAAA9kB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAAsC,EAgGyB/qB,GAhGzB,IAAAgrB,EAAA,OAAAxC,EAAAtf,EAAA0f,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAA3iB,MAAA,UAiGW2D,KAAK2e,iBAAiB5qB,GAjGjC,CAAAirB,EAAA3iB,KAAA,cAkGe,IAAIuhB,MAAM,qBAlGzB,YAoGU7pB,KAAaiM,KAAKhL,UApG5B,CAAAgqB,EAAA3iB,KAAA,cAqGe,IAAIuhB,MAAM,WAAa7pB,EAAY,oBArGlD,cAuGUgrB,EAAgB,KAvG1BC,EAAAnC,KAAA,EAAAmC,EAAA3iB,KAAA,EAyG+B2D,KAAK8c,WAAW/oB,GAAWgD,QAzG1D,OAyGSgoB,EAzGTC,EAAAlB,KAAAkB,EAAA3iB,KAAA,wBAAA2iB,EAAAnC,KAAA,GAAAmC,EAAAC,GAAAD,EAAA,SAAAA,EAAAnB,OAAA,UA2GgB,GA3GhB,YA6GYkB,EA7GZ,CAAAC,EAAA3iB,KAAA,eA8Ge,IAAIuhB,MAAM,WAAa7pB,EAAY,oBA9GlD,yBAAAirB,EAAAjC,SAAA+B,EAAA9e,KAAA,6BAAAkf,GAAA,OAAAL,EAAAvO,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,mBAAA6N,MAAA,eAAAqW,EAAAplB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAA4C,EAkH0BrrB,GAlH1B,IAAAsrB,EAAA,OAAA9C,EAAAtf,EAAA0f,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAjjB,MAAA,cAmHM2D,KAAK5H,kBAECinB,EAAU/D,UAAgBiE,WAAW,WArHjDD,EAAAjjB,KAAA,EAsHYmjB,IAAS,OAAQ7E,EAA6B,CACjD8E,aAAc1rB,EACd2rB,oBAAqBL,EAAQM,iBAxHtC,cAAAL,EAAAjjB,KAAA,EA0HY2D,KAAK4f,qBAAqB7rB,EAAWsrB,GA1HjD,wBAAAC,EAAAvC,SAAAqC,EAAApf,SAAA,gBAAA6f,GAAA,OAAAV,EAAA7O,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,uBAAA6N,MAAA,eAAAgX,EAAA/lB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAAuD,EA6H8BhsB,EAAWsrB,GA7HzC,OAAA9C,EAAAtf,EAAA0f,KAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAA3jB,MAAA,cAAA2jB,EAAA3jB,KAAA,EA8HY2D,KAAKqb,UAAU4E,OAAO3F,EAAYvmB,EAAWsrB,GA9HzD,OA+HMrf,KAAKhL,SAASjB,IAAa,EAC3BiM,KAAKjM,UAAYA,EACjBiM,KAAKmc,OAjIX,wBAAA6D,EAAAjD,SAAAgD,EAAA/f,SAAA,gBAAAkgB,EAAAC,GAAA,OAAAL,EAAAxP,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,eAAA6N,MAAA,eAAAsX,EAAArmB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAA6D,EAoIsBtsB,EAAW8E,EAAYC,EAAWC,EAAYnC,GApIpE,OAAA2lB,EAAAtf,EAAA0f,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAjkB,MAAA,cAAAikB,EAAAjkB,KAAA,EAqImB2D,KAAK8c,WAAW9c,KAAKjM,WAAWwsB,OAC1CznB,EACAD,EACA,GACA,GACA,GA1IT,cAAAynB,EAAAzC,OAAA,SAAAyC,EAAAxC,MAAA,wBAAAwC,EAAAvD,SAAAsD,EAAArgB,SAAA,gBAAAwgB,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAR,EAAA9P,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,aAAA6N,MAAA,WA+IM9I,KAAKhL,SAAW,GAChBgL,KAAKjM,UAAY,GACjBiM,KAAKmc,SAjJX,CAAAlhB,IAAA,aAAA6N,MAAA,SAoJc/U,GACR,OAAO,IAAIunB,UAAgBtb,KAAKwb,WAAYznB,KArJlD,CAAAkH,IAAA,cAAA6N,MAAA,SAwJeqD,EAAapY,GACtB,OAAOyrB,IAAS,OAAD,GAAAtoB,OAAYujB,EAAZ,aAAAvjB,OAA0CiV,EAA1C,KAAAjV,OAAyDnD,EAAzD,mBAzJrB,CAAAkH,IAAA,eAAA6N,MAAA,eAAA+X,EAAA9mB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAAsE,EA4JsB3U,EAAapY,EAAWgtB,GA5J9C,OAAAxE,EAAAtf,EAAA0f,KAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAA3kB,MAAA,cAAA2kB,EAAAnD,OAAA,SA6Ja2B,IAAS,OAAD,GAAAtoB,OAAYujB,EAAZ,aAAAvjB,OAA0CiV,EAA1C,KAAAjV,OAAyDnD,EAAzD,iBAAmFgtB,IA7JxG,wBAAAC,EAAAjE,SAAA+D,MAAA,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAvQ,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,uBAAA6N,MAAA,eAAAsY,EAAArnB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAA6E,EAgK8BlV,EAAapY,EAAW0Y,GAhKtD,IAAAxV,EAAAqqB,EAAA1lB,EAAA2lB,EAAA,OAAAhF,EAAAtf,EAAA0f,KAAA,SAAA6E,GAAA,cAAAA,EAAA3E,KAAA2E,EAAAnlB,MAAA,cAiKYpF,EAAU+I,KAAK8c,WAAW/oB,GAjKtCytB,EAAAnlB,KAAA,EAkK0BpF,EAAQF,QAlKlC,UAAAyqB,EAAA1D,KAmKiB2D,YAAYC,KAAK,SAAAzmB,GAAG,OAAI0mB,SAAWC,EAAOnS,KAAKxU,MAAU6f,IAnK1E,CAAA0G,EAAAnlB,KAAA,eAAAmlB,EAAAnlB,KAAA,EAoKepF,EAAQspB,OAAOzF,GApK9B,cAuKYwG,EAAQO,WAAWpS,KAAKqS,IAAOC,MAAMH,EAAOnS,KAAKhD,KAvK7D+U,EAAAnlB,KAAA,GAwKkC2D,KAAKwb,WAAWI,OAAOoG,SAASV,EAAMvtB,EAAWumB,GAxKnF,eAAA1e,EAAA4lB,EAAA1D,KAwKcyD,EAxKd3lB,EAwKc2lB,UAxKdC,EAAAnlB,KAAA,GAyKY2D,KAAKiiB,aAAa9V,EAAapY,EAAW,CAAE0Y,eAAc8U,UAAWK,EAAOnS,KAAK8R,GAAW9mB,SAAS,YAzKjH,yBAAA+mB,EAAAzE,SAAAsE,EAAArhB,SAAA,gBAAAkiB,EAAAC,EAAAC,GAAA,OAAAhB,EAAA9Q,MAAAtQ,KAAAnE,YAAA,KAAAZ,IAAA,iBAAA6N,MAAA,eAAAuZ,EAAAtoB,OAAAuiB,EAAA,EAAAviB,CAAAwiB,EAAAtf,EAAAuf,KAAA,SAAA8F,EA4KwBnW,EAAapY,EAAW0Y,GA5KhD,IAAA4S,EAAA,OAAA9C,EAAAtf,EAAA0f,KAAA,SAAA4F,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAlmB,MAAA,cA6KYgjB,EAAU/D,UAAgBiE,WAAW,WA7KjDgD,EAAAlmB,KAAA,EA8KY2D,KAAKiiB,aAAa9V,EAAapY,EAAW,CAAE0Y,eAAc3T,UAAWumB,EAAQvmB,YA9KzF,cAAAypB,EAAAlmB,KAAA,EA+KY2D,KAAK4f,qBAAqB7rB,EAAWsrB,GA/KjD,wBAAAkD,EAAAxF,SAAAuF,EAAAtiB,SAAA,gBAAAwiB,EAAAC,EAAAC,GAAA,OAAAL,EAAA/R,MAAAtQ,KAAAnE,YAAA,MAAAhF,EAAA,iDCnBA3D,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.cb5d2d42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-problems.1f0685f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized.2f2edb66.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet.89d47110.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-account.ab010182.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-recent.83086272.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-right.2c9f3083.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-transaction.23b32201.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts.f6e4afac.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-logout.9cae8fb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity.b48f419e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-check.084a59cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-mobile-menu.1acfd8f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-help.f6c0707a.svg\";","module.exports = __webpack_public_path__ + \"static/media/near.584de59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/footer-nearkat.3083dec6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-grn.eaf2a8e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-account-grey.4d7da491.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-blk.79cca70c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized-grey.4d2fc992.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-deny.6946f17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorize.377da011.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-add-blue.be7039c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-up.b5be78eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-filter.1f33be14.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-left.5e7a861f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-search.2cea301b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lock.255000ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-keys-grey.a339e56f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-doc-grey.888e4b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity-grey.c5c92b3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts-grey.c7048ab4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-stake.cc91ad52.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-transfer.f726da93.svg\";","import { parse, stringify } from 'query-string'\r\nimport { createActions } from 'redux-actions'\r\nimport { Wallet } from '../utils/wallet'\r\n\r\nexport const REFRESH_ACCOUNT = 'REFRESH_ACCOUNT'\r\nexport const LOADER_ACCOUNT = 'LOADER_ACCOUNT'\r\nexport const REFRESH_URL = 'REFRESH_URL'\r\n\r\nexport function handleRefreshAccount(history) {\r\n   return (dispatch, getState) => {\r\n      wallet.redirectIfEmpty(history)\r\n      const accountId = wallet.getAccountId()\r\n\r\n      dispatch(getAccountDetails())\r\n\r\n      dispatch({\r\n         type: LOADER_ACCOUNT,\r\n         loader: true\r\n      })\r\n\r\n      wallet\r\n         .loadAccount(accountId, history)\r\n         .then(v => {\r\n            dispatch({\r\n               type: REFRESH_ACCOUNT,\r\n               data: {\r\n                  accountId: accountId,\r\n                  amount: v['amount'] || 0,\r\n                  amountStr: Number(v['amount']).toLocaleString('en', {useGrouping:true}) || '0',\r\n                  stake: v['stake'],\r\n                  nonce: v['nonce'],\r\n                  code_hash: v['code_hash'],\r\n                  accounts: wallet.accounts\r\n               }\r\n            })\r\n\r\n            dispatch({\r\n               type: LOADER_ACCOUNT,\r\n               loader: false\r\n            })\r\n         })\r\n         .catch(e => {\r\n            console.error('Error loading account:', e)\r\n\r\n            if (e.message && e.message.indexOf('does not exist while viewing') !== -1) {\r\n               // We have an account in the storage, but it doesn't exist on blockchain. We probably nuked storage so just redirect to create account\r\n               // TODO: Offer to remove specific account vs clearing everything?\r\n               wallet.clearState()\r\n               wallet.redirectToCreateAccount(\r\n                  {\r\n                     reset_accounts: true\r\n                  },\r\n                  history\r\n               )\r\n            }\r\n         })\r\n   }\r\n}\r\n\r\nexport function handleRefreshUrl(location) {\r\n   return dispatch => {\r\n      const { title, app_url, contract_id, success_url, failure_url, public_key  } = parse(location.search)\r\n      \r\n      if (!success_url) {\r\n         return\r\n      }\r\n      \r\n      const parsedUrl = new URL(success_url)\r\n      parsedUrl.searchParams.set('account_id', wallet.getAccountId())\r\n      parsedUrl.searchParams.set('public_key', public_key)\r\n      const redirect_url = parsedUrl.href\r\n\r\n      dispatch({\r\n         type: REFRESH_URL,\r\n         url: {\r\n            app_title: title || '',\r\n            app_url: app_url || '',\r\n            contract_id: contract_id || '',\r\n            success_url: success_url || '',\r\n            failure_url: failure_url || '',\r\n            public_key: public_key || '',\r\n            redirect_url: redirect_url || ''\r\n         }\r\n      })\r\n   }\r\n}\r\n\r\nconst wallet = new Wallet()\r\n\r\nexport const redirectToApp = () => (dispatch, getState) => {\r\n   const state = getState()\r\n   const nextUrl = (state.account.url && state.account.url.success_url) ? `/login/?${stringify(state.account.url)}` : '/'\r\n   setTimeout(() => {\r\n      window.location = nextUrl\r\n   }, 1500)\r\n}\r\n\r\nexport const { requestCode, setupAccountRecovery, recoverAccount, getAccountDetails, removeAccessKey, checkNewAccount, createNewAccount, checkAccountAvailable, clear } = createActions({\r\n   REQUEST_CODE: [\r\n      wallet.requestCode.bind(wallet),\r\n      () => ({ successCode: 'account.requestCode.success', errorCode: 'account.requestCode.error' })\r\n   ],\r\n   SETUP_ACCOUNT_RECOVERY: [\r\n      wallet.setupAccountRecovery.bind(wallet),\r\n      () => ({ successCode: 'account.setupAccountRecovery.success', errorCode: 'account.setupAccountRecovery.error' })\r\n   ],\r\n   RECOVER_ACCOUNT: [\r\n      wallet.recoverAccount.bind(wallet),\r\n      () => ({ successCode: 'account.recoverAccount.success', errorCode: 'account.recoverAccount.error' })\r\n   ],\r\n   GET_ACCOUNT_DETAILS: [wallet.getAccountDetails.bind(wallet), () => ({})],\r\n   REMOVE_ACCESS_KEY: [wallet.removeAccessKey.bind(wallet), () => ({})],\r\n   CHECK_NEW_ACCOUNT: [\r\n      wallet.checkNewAccount.bind(wallet),\r\n      () => ({ successCode: 'Congrats! this name is available.', errorCode: 'Username is taken. Try something else.' })\r\n   ],\r\n   CREATE_NEW_ACCOUNT: [\r\n      wallet.createNewAccount.bind(wallet),\r\n      () => ({ successCode: 'Congrats! this name is available.', errorCode: 'Username is taken. Try something else.' })\r\n   ],\r\n   CHECK_ACCOUNT_AVAILABLE: [\r\n      wallet.checkAccountAvailable.bind(wallet),\r\n      () => ({ successCode: 'User found.', errorCode: 'User not found.' })\r\n   ],\r\n   CLEAR: null,\r\n})\r\n\r\nexport const { addAccessKey, clearAlert } = createActions({\r\n   ADD_ACCESS_KEY: [\r\n      wallet.addAccessKey.bind(wallet),\r\n      (accountId, contractId, publicKey, successUrl, app_title) => ({\r\n         successCodeHeader: 'Success',\r\n         successCodeDescription: app_title + ' is now authorized to use your account.',\r\n         errorCodeHeader: 'Error',\r\n         errorCodeDescription: '' \r\n      })\r\n   ],\r\n   CLEAR_ALERT: null,\r\n})\r\n\r\nexport const { switchAccount } = createActions({\r\n   SWITCH_ACCOUNT: wallet.selectAccount.bind(wallet)\r\n})\r\n","import { handleActions, combineActions } from 'redux-actions'\r\nimport {\r\n   REFRESH_ACCOUNT,\r\n   LOADER_ACCOUNT,\r\n   REFRESH_URL,\r\n   requestCode,\r\n   setupAccountRecovery,\r\n   recoverAccount,\r\n   getAccountDetails,\r\n   checkNewAccount,\r\n   createNewAccount,\r\n   checkAccountAvailable,\r\n   clear,\r\n   addAccessKey,\r\n   clearAlert\r\n} from '../actions/account'\r\nimport reduceReducers from 'reduce-reducers'\r\n\r\nconst initialState = {\r\n   formLoader: false,\r\n   sentSms: false\r\n}\r\n\r\nconst loaderReducer = (state, { ready }) => {\r\n   if (typeof ready === 'undefined') {\r\n      return state\r\n   }\r\n   return { ...state, formLoader: !ready }\r\n}\r\n\r\nconst globalAlertReducer = handleActions({\r\n   // TODO: Reset state before action somehow. On navigate / start of other action?\r\n   // TODO: Make this generic to avoid listing actions\r\n   [combineActions(addAccessKey)]: (state, { error, payload, meta }) => ({\r\n      ...state,\r\n      globalAlert: !!payload || error ? {\r\n         success: !error,\r\n         errorMessage: (error && payload && payload.toString()) || undefined,\r\n         messageCodeHeader: error ? payload.messageCode || meta.errorCodeHeader : meta.successCodeHeader,\r\n         messageCodeDescription: error ? payload.messageCode || meta.errorCodeDescription : meta.successCodeDescription,\r\n      } : undefined\r\n   }),\r\n   [clearAlert]: state => Object.keys(state).reduce((obj, key) => key !== 'globalAlert' ? (obj[key] = state[key], obj) : obj, {})\r\n}, initialState)\r\n\r\nconst requestResultReducer = handleActions({\r\n   // TODO: Reset state before action somehow. On navigate / start of other action?\r\n   // TODO: Make this generic to avoid listing actions\r\n   [combineActions(requestCode, setupAccountRecovery, recoverAccount, checkNewAccount, createNewAccount, checkAccountAvailable)]: (state, { error, payload, meta }) => ({\r\n      ...state,\r\n      requestStatus: !!payload || error ? {\r\n         success: !error,\r\n         errorMessage: (error && payload && payload.toString()) || undefined,\r\n         messageCode: error ? payload.messageCode || meta.errorCode : meta.successCode \r\n      } : undefined\r\n   }),\r\n   [clear]: state => Object.keys(state).reduce((obj, key) => key !== 'requestStatus' ? (obj[key] = state[key], obj) : obj, {})\r\n}, initialState)\r\n\r\nconst reducer = handleActions({\r\n      [requestCode]: (state, { error, ready }) => {\r\n         if (ready && !error) {\r\n            return { ...state, sentSms: true }\r\n         }\r\n         return state\r\n      }\r\n}, initialState)\r\n\r\nconst authorizedApps = handleActions({\r\n      [getAccountDetails]: (state, { error, payload }) => ({\r\n         ...state,\r\n         authorizedApps: payload && payload.authorizedApps\r\n      })\r\n}, initialState)\r\n\r\n// TODO: Migrate everything to redux-actions\r\nfunction account(state = {}, action) {\r\n   switch (action.type) {\r\n      case REFRESH_ACCOUNT:\r\n         return {\r\n            ...state,\r\n            ...action.data\r\n         }\r\n      case LOADER_ACCOUNT: {\r\n         return {\r\n            ...state,\r\n            loader: action.loader\r\n         }\r\n      }\r\n      case REFRESH_URL: {\r\n         return {\r\n            ...state,\r\n            url: action.url\r\n         }\r\n      }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport default reduceReducers(\r\n   initialState,\r\n   loaderReducer,\r\n   globalAlertReducer,\r\n   requestResultReducer,\r\n   reducer,\r\n   authorizedApps,\r\n   account\r\n)\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware, compose } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n/**\r\n * Lets you dispatch special actions with a { promise } field.\r\n *\r\n * This middleware will turn them into a single action at the beginning,\r\n * and a single success (or failure) action when the `promise` resolves.\r\n *\r\n * For convenience, `dispatch` will return the promise so the caller can wait.\r\n */\r\nconst readyStatePromise = store => next => action => {\r\n  if (!action.payload || !action.payload.then) {\r\n    return next(action)\r\n  }\r\n\r\n  function makeAction(ready, data) {\r\n    const newAction = Object.assign({}, action)\r\n    delete newAction.payload\r\n    return Object.assign(newAction, { ready }, data)\r\n  }\r\n\r\n  next(makeAction(false))\r\n  return action.payload.then(\r\n    payload => next(makeAction(true, { payload })),\r\n    error => {\r\n      console.warn('Error in background action:', error)\r\n      return next(makeAction(true, { error: true, payload: error }))\r\n    }\r\n  )\r\n}\r\n\r\nexport default (history) => composeEnhancers(\r\n    applyMiddleware(\r\n        routerMiddleware(history),\r\n        thunk,\r\n        readyStatePromise))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Image, Container, Message } from 'semantic-ui-react'\r\n\r\nimport IconsProblemImage from '../../images/icon-problems.svg'\r\nimport IconCheckImage from '../../images/icon-check.svg'\r\nimport CloseImage from '../../images/icon-close.svg'\r\n\r\nimport { clearAlert } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomMessage = styled(Message)`\r\n   &&& {\r\n      border: 4px solid #e6e6e6;\r\n      background-color: #fff;\r\n      border-radius: 8px;\r\n      position: relative;\r\n      box-shadow: none;\r\n\r\n      .close {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 16px;\r\n         right: 16px;\r\n         padding: 0px;\r\n         cursor: pointer;\r\n\r\n         &.white {\r\n            filter: brightness(0) invert(1);\r\n         }\r\n      }\r\n\r\n      .left {\r\n         height: 38px;\r\n         margin-top: -4px;\r\n         margin-right: 0;\r\n         display: none;\r\n         filter: brightness(0) invert(1);\r\n      }\r\n      .content {\r\n         color: #999;\r\n         line-height: 20px;\r\n         word-break: break-all;\r\n\r\n         .header {\r\n            font-size: 18px;\r\n            line-height: 26px;\r\n            font-weight: 600;\r\n         }\r\n      }\r\n\r\n      &.success {\r\n         border: 4px solid #5ace84;\r\n         background-color: #5ace84;\r\n\r\n         .left {\r\n            margin-right: 12px;\r\n            display: inline;\r\n         }\r\n         .content {\r\n            color: #fff;\r\n\r\n            .header {\r\n               color: #fff;\r\n            }\r\n         }\r\n      }\r\n      &.error {\r\n         border: 4px solid #ff585d;\r\n         background-color: #ff585d;\r\n\r\n         .left {\r\n            margin-right: 12px;\r\n            display: inline;\r\n         }\r\n         .content {\r\n            color: #fff;\r\n\r\n            .header {\r\n               color: #fff;\r\n            }\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         padding-left: 8px;\r\n         padding-right: 8px;\r\n\r\n         .content {\r\n            font-size: 12px;\r\n            line-height: 14px;\r\n\r\n            .header {\r\n               font-size: 16px;\r\n               line-height: 20px;\r\n            }\r\n         }\r\n\r\n         .close {\r\n            width: 20px;\r\n            position: absolute;\r\n            top: 8px;\r\n            right: 8px;\r\n            padding: 0px;\r\n            cursor: pointer;\r\n\r\n            &.white {\r\n               filter: brightness(0) invert(1);\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst GlobalAlert = ({ globalAlert, clearAlert }) => (\r\n   globalAlert ?\r\n      <Container>\r\n         <CustomMessage icon className={globalAlert.success ? 'success' : 'error'}>\r\n            <Image\r\n               onClick={clearAlert}\r\n               src={CloseImage}\r\n               className='close white'\r\n            />\r\n            {globalAlert && \r\n               <Image className='left' src={globalAlert.success ? IconCheckImage : IconsProblemImage} />}\r\n            <Message.Content>\r\n               <Message.Header>\r\n                  {globalAlert.messageCodeHeader}\r\n               </Message.Header>\r\n               {globalAlert.success\r\n                  ? globalAlert.messageCodeDescription\r\n                  : globalAlert.messageCodeDescription || globalAlert.errorMessage}\r\n            </Message.Content>\r\n         </CustomMessage>\r\n      </Container>\r\n   : null\r\n)\r\n\r\nconst mapDispatchToProps = {\r\n   clearAlert\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   ...account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(GlobalAlert)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Image } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomDiv = styled(`div`)`\r\n   &&& {\r\n      border: 1px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      &.tiny {\r\n         width: 26px;\r\n         height: 26px;\r\n\r\n         img {\r\n            width: 16px;\r\n         }\r\n      }\r\n      &.small {\r\n         border: 0px;\r\n         background: #e6e6e6;\r\n         width: 32px;\r\n         height: 32px;\r\n\r\n         img {\r\n            width: 22px;\r\n         }\r\n      }\r\n      &.medium {\r\n         border: 0px;\r\n         background: #e6e6e6;\r\n         width: 48px;\r\n         height: 48px;\r\n\r\n         img {\r\n            width: 30px;\r\n         }\r\n      }\r\n      &.big {\r\n         border: 0px;\r\n         background: #e6e6e6;\r\n         width: 72px;\r\n         height: 72px;\r\n\r\n         img {\r\n            width: 48px;\r\n         }\r\n      }\r\n      &.huge {\r\n         border: 0px;\r\n         background: #e6e6e6;\r\n         width: 120px;\r\n         height: 120px;\r\n\r\n         img {\r\n            width: 100px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst MainImage = ({ \r\n   src, \r\n   size = 'medium' \r\n}) => (\r\n   <CustomDiv className={size}>\r\n      <Image src={src} />\r\n   </CustomDiv>\r\n)\r\n\r\nMainImage.propTypes = {\r\n   src: PropTypes.string,\r\n   size: PropTypes.string\r\n}\r\n\r\nexport default MainImage\r\n","import React from 'react'\r\n\r\nimport { Image, Loader } from 'semantic-ui-react'\r\n\r\nimport MainImage from '../common/MainImage'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport MobileMenuImage from '../../images/icon-mobile-menu.svg'\r\nimport CloseImage from '../../images/icon-close.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomDiv = styled('div')`\r\n   overflow: hidden;\r\n   width: 100%;\r\n   cursor: pointer;\r\n   font-family: 'benton-sans', sans-serif;\r\n   font-weight: 600;\r\n   > div {\r\n      .account-img {\r\n         padding-left: 6px;\r\n         float: left;\r\n         \r\n         margin-top: 18px;\r\n         margin-right: 10px;\r\n\r\n         > div {\r\n            background: #4a4f54 !important;\r\n         }\r\n      }\r\n      .overflow {\r\n         overflow: hidden;\r\n      }\r\n      .account-arrow {\r\n         float: right;\r\n         padding-right: 14px;\r\n         padding-left: 14px;\r\n         padding-top: 24px;\r\n         img {\r\n            width: 20px;\r\n         }\r\n         &.desktop {\r\n            padding-top: 32px;\r\n            padding-right: 26px;\r\n            img {\r\n               width: 12px;\r\n            }\r\n         }\r\n      }\r\n      .account-tokens {\r\n         float: right;\r\n         line-height: 29px;\r\n         font-size: 14px;\r\n         color: #fff;\r\n         margin: 21px 0 0 10px;\r\n         height: 28px;\r\n         background: #111314;\r\n         border-radius: 14px;\r\n         padding: 0 10px;\r\n         letter-spacing: normal;\r\n         max-width: 170px;\r\n         :hover {\r\n            color: #fff;\r\n         }\r\n         > div {\r\n            display: flex;\r\n            > div {\r\n               text-overflow: ellipsis;\r\n               overflow: hidden;\r\n\r\n               &.near {\r\n                  text-overflow: initial;\r\n               }\r\n            }\r\n         }\r\n         .near {\r\n            font-size: 18px;\r\n            padding-left: 4px;\r\n            font-weight: 500;\r\n         }\r\n      }\r\n      .account-name {\r\n         overflow: hidden;\r\n         padding-right: 0px;\r\n         text-align: right;\r\n         padding-left: 0px;\r\n         line-height: 72px;\r\n         > div {\r\n            font-size: 14px;\r\n            letter-spacing: normal;\r\n            padding-left: 0px;\r\n            padding-right: 0px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            color: #fff;\r\n            :hover {\r\n               color: #fff;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst PopupMenuTrigger = ({ account, handleClick, type, dropdown = false }) => (\r\n   <CustomDiv onClick={handleClick}>\r\n      <div>\r\n         {type === 'desktop' && (\r\n            <div className='account-img'>\r\n               <MainImage\r\n                  src={AccountGreyImage} \r\n                  size='small'\r\n               />\r\n            </div>\r\n         )}\r\n         <div className={`account-arrow ${type}`}>\r\n            {type === 'mobile' && (\r\n               <Image src={dropdown ? MobileMenuImage : CloseImage} />\r\n            )}\r\n            {type === 'desktop' && <Image src={ArrowDownImage} />}\r\n         </div>\r\n         <div className='overflow'>\r\n            <div className='account-tokens'>\r\n               {account.loader || !account.accountId ? (\r\n                  <Loader active inline size='mini' />\r\n               ) : (\r\n                  <div>\r\n                     <div>{account.amountStr} </div>\r\n                     <div className='near'>Ⓝ</div>\r\n                  </div>\r\n               )}\r\n            </div>\r\n            <div className='account-name'>\r\n               {account.loader || !account.accountId ? (\r\n                  <Loader active inline size='mini' />\r\n               ) : (\r\n                  <div>@{account.accountId}</div>\r\n               )}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </CustomDiv>\r\n)\r\n\r\nexport default PopupMenuTrigger\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport GlobalAlert from './GlobalAlert'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport {\r\n   Image,\r\n   Menu,\r\n   Responsive,\r\n   Segment,\r\n   List,\r\n   Button\r\n} from 'semantic-ui-react'\r\n\r\nimport PopupMenuTrigger from './PopupMenuTrigger'\r\n\r\nimport SendImage from '../../images/icon-send.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\r\nimport LogoutImage from '../../images/icon-logout.svg'\r\nimport LogoImage from '../../images/wallet.png'\r\nimport AccountGreyImage from '../../images/icon-account.svg'\r\nimport RecentImage from '../../images/icon-recent.svg'\r\nimport ActivityImage from '../../images/icon-activity.svg'\r\n\r\nimport { handleRefreshAccount, switchAccount } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomResponsive = styled(Responsive)`\r\n   &&& {\r\n      .navbar {\r\n         padding: 0px;\r\n         margin-bottom: 1rem;\r\n         &-main {\r\n            background-color: #24272a;\r\n            height: 72px;\r\n            border-radius: 0;\r\n            margin-bottom: 0;\r\n            .mainlogo {\r\n               float: left;\r\n               padding: 4px 10px 0px 0px;\r\n               div {\r\n                  width: 50px;\r\n                  overflow: hidden;\r\n                  > img.image {\r\n                     width: 160px;\r\n                     max-width: none;\r\n                  }\r\n               }\r\n            }\r\n            .trigger {\r\n               width: 100%;\r\n               overflow: hidden;\r\n            }\r\n         }\r\n         &-sub {\r\n            margin: 0px;\r\n            padding: 0px;\r\n            background-color: #24272a;\r\n            &.hide {\r\n               display: none;\r\n            }\r\n            .main {\r\n               font-family: 'benton-sans', sans-serif;\r\n               font-weight: 400;\r\n               font-size: 14px;\r\n               padding: 18px 6px;\r\n               margin: 0 1rem;\r\n               border-top: 1px solid #4a4f54;\r\n               color: #fff;\r\n               letter-spacing: 2px;\r\n               \r\n               &.border {\r\n                  border-bottom: 1px solid #4a4f54;\r\n               }\r\n               img {\r\n                  margin-top: -4px;\r\n                  width: 24px;\r\n                  margin-right: 20px;\r\n                  display: inline-block !important;\r\n               }\r\n            }\r\n            .sub {\r\n               padding: 10px 1rem 0 1rem;\r\n               .item {\r\n                  font-family: 'benton-sans', sans-serif;\r\n                  font-weight: 400;\r\n                  font-size: 14px;\r\n                  padding: 8px 9px;\r\n                  color: #8fd6bd;\r\n                  letter-spacing: 2px;\r\n                  \r\n                  img {\r\n                     margin-top: -2px;\r\n                     width: 18px;\r\n                     margin-right: 22px;\r\n                     display: inline-block !important;\r\n                  }\r\n               }\r\n            }\r\n            .switch-account {\r\n               background: #000;\r\n               padding: 0 1rem;\r\n               padding: 20px;\r\n               .item {\r\n                  padding: 0 10px;\r\n               }\r\n               h6.item {\r\n                  padding-bottom: 10px;\r\n                  border: 0px;\r\n               }\r\n               .account-title {\r\n                  height: 40px;\r\n                  line-height: 40px;\r\n                  color: #fff;\r\n                  font-weight: 500;\r\n                  border-bottom: 1px solid #323434;\r\n                  letter-spacing: normal;\r\n                  text-overflow: ellipsis;\r\n                  overflow: hidden;\r\n               }\r\n               button {\r\n                  width: 100%;\r\n                  border-radius: 30px;\r\n                  background: #24272a;\r\n                  color: #6ad1e3;\r\n                  :hover {\r\n                     background: #fff;\r\n                     color: #6ad1e3;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst getWidth = () => {\r\n   const isSSR = typeof window === 'undefined'\r\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\nclass MobileView extends Component {\r\n   static propTypes = {\r\n      children: PropTypes.node\r\n   }\r\n\r\n   static defaultProps = {\r\n      children: ''\r\n   }\r\n\r\n   state = {\r\n      dropdown: true\r\n   }\r\n\r\n   handleDropdown = () =>\r\n      this.setState(state => ({\r\n         dropdown: !state.dropdown\r\n      }))\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.props.switchAccount(accountId)\r\n      this.props.handleRefreshAccount(this.props.history)\r\n      this.handleDropdown()\r\n      this.props.history.push(`/`)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet = new Wallet()\r\n      this.handleDropdown()\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { dropdown } = this.state\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <CustomResponsive\r\n            getWidth={getWidth}\r\n            maxWidth={Responsive.onlyTablet.maxWidth}\r\n         >\r\n            \r\n            <Segment basic className='navbar'>\r\n               <Menu className='navbar-main' borderless>\r\n                  <div className='mainlogo'>\r\n                     <Link to='/'>\r\n                        <div>\r\n                           <Image src={LogoImage} />\r\n                        </div>\r\n                     </Link>\r\n                  </div>\r\n\r\n                  {account.accountId && (\r\n                     <div className='trigger'>\r\n                        <PopupMenuTrigger\r\n                           account={account}\r\n                           handleClick={this.handleDropdown}\r\n                           type='mobile'\r\n                           dropdown={dropdown}\r\n                        />\r\n                     </div>\r\n                  )}\r\n               </Menu>\r\n               <Segment\r\n                  basic\r\n                  className={`navbar-sub ${dropdown ? `hide` : ``}`}\r\n               >\r\n                  <Menu.Menu>\r\n                     <Link to='/' onClick={this.handleDropdown}>\r\n                        <Menu.Item className='main'>\r\n                           <Image src={RecentImage} />\r\n                           SUMMARY\r\n                        </Menu.Item>\r\n                     </Link>\r\n                     {false ? (\r\n                        <Link to='/activity' onClick={this.handleDropdown}>\r\n                           <Menu.Item className='main'>\r\n                              <Image src={ActivityImage} />\r\n                              ACTIVITY\r\n                           </Menu.Item>\r\n                        </Link>\r\n                     ) : null}\r\n                     <Link to='/send-money' onClick={this.handleDropdown}>\r\n                        <Menu.Item className='main border'>\r\n                           <Image src={SendImage} />\r\n                           SEND MONEY\r\n                        </Menu.Item>\r\n                     </Link>\r\n\r\n                     <Menu.Menu className='sub'>\r\n                        <Link to='/profile' onClick={this.handleDropdown}>\r\n                           <Menu.Item>\r\n                              <Image src={AccountGreyImage} />\r\n                              Profile\r\n                           </Menu.Item>\r\n                        </Link>\r\n                        {false ? (\r\n                           <Link to='/contacts' onClick={this.handleDropdown}>\r\n                              <Menu.Item>\r\n                                 <Image src={ContactsGreyImage} />\r\n                                 Contacts\r\n                              </Menu.Item>\r\n                           </Link>\r\n                        ) : null}\r\n                        <Link to='/authorized-apps' onClick={this.handleDropdown}>\r\n                           <Menu.Item>\r\n                              <Image src={AuthorizedGreyImage} />\r\n                              Authorized Apps\r\n                           </Menu.Item>\r\n                        </Link>\r\n                        {false ? (\r\n                           <Link to='/' onClick={this.handleDropdown}>\r\n                              <Menu.Item>\r\n                                 <Image src={LogoutImage} />\r\n                                 Logout\r\n                              </Menu.Item>\r\n                           </Link>\r\n                        ) : null}\r\n                     </Menu.Menu>\r\n                     <Segment basic className='switch-account'>\r\n                        <List>\r\n                           <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\r\n\r\n                           {account.accounts &&\r\n                              Object.keys(account.accounts)\r\n                                 .filter(a => a !== account.accountId)\r\n                                 .map((account, i) => (\r\n                                    <List.Item\r\n                                       as='a'\r\n                                       key={`mf-${i}`}\r\n                                       onClick={() =>\r\n                                          this.handleSelectAccount(account)\r\n                                       }\r\n                                       className='account-title'\r\n                                    >\r\n                                       @{account}\r\n                                    </List.Item>\r\n                                 ))}\r\n                        </List>\r\n                        <Button onClick={this.redirectCreateAccount}>\r\n                           CREATE NEW ACCOUNT\r\n                        </Button>\r\n                     </Segment>\r\n                  </Menu.Menu>\r\n               </Segment>\r\n            </Segment>\r\n            <GlobalAlert />\r\n         </CustomResponsive>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   switchAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(MobileView))\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Image, Segment, List, Button, Popup } from 'semantic-ui-react'\r\n\r\nimport PopupMenuTrigger from './PopupMenuTrigger'\r\n\r\nimport AccountImage from '../../images/icon-account.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\r\nimport LogoutImage from '../../images/icon-logout.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomPopup = styled(Popup)`\r\n   &&& {\r\n      padding: 0px;\r\n      right: 12px !important;\r\n      top: 50px !important;\r\n      position: fixed !important;\r\n\r\n      .account-dropdown {\r\n         width: 290px;\r\n         min-height: 100px;\r\n         background-color: #f8f8f8;\r\n\r\n         padding: 20px;\r\n\r\n         .item {\r\n            color: #999999;\r\n         }\r\n\r\n         .submenu {\r\n            margin: -20px;\r\n            padding: 20px;\r\n            background: #fff;\r\n\r\n            .icon {\r\n               width: 20px;\r\n            }\r\n            .content {\r\n               line-height: 26px;\r\n               padding-left: 10px;\r\n            }\r\n            .item {\r\n               margin: 4px 0;\r\n            }\r\n         }\r\n\r\n         .switch-account {\r\n            margin-top: 40px;\r\n            margin-bottom: 0px;\r\n         }\r\n\r\n         &-scroll {\r\n            max-height: 226px;\r\n            overflow-y: auto;\r\n            width: 270px;\r\n            margin-top: 0px;\r\n\r\n            > .item {\r\n               width: 250px;\r\n               margin: 0px;\r\n               padding: 0px;\r\n\r\n               :hover {\r\n                  text-decoration: underline;\r\n               }\r\n               ::before {\r\n                  display: none;\r\n               }\r\n               ::after {\r\n                  display: none;\r\n               }\r\n            }\r\n         }\r\n\r\n         h6 {\r\n            padding-bottom: 6px;\r\n         }\r\n         .account-title {\r\n            height: 40px;\r\n            line-height: 40px;\r\n            color: #4a4f54;\r\n            font-weight: 500;\r\n            border-bottom: 2px solid #e6e6e6;\r\n            letter-spacing: normal;\r\n\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n         }\r\n         button {\r\n            width: 100%;\r\n            border-radius: 30px;\r\n            background: #fff;\r\n            color: #6ad1e3;\r\n\r\n            :hover {\r\n               background: #6ad1e3;\r\n               color: #fff;\r\n            }\r\n         }\r\n      }\r\n\r\n      :hover {\r\n         .account-dropdown {\r\n            display: block;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DesktopPopup = ({\r\n   account,\r\n   handleSelectAccount,\r\n   redirectCreateAccount,\r\n   handleToggle,\r\n   handleClose,\r\n   handleOpen,\r\n   popupOpen\r\n}) => (\r\n   <CustomPopup\r\n      trigger={\r\n         <PopupMenuTrigger\r\n            account={account}\r\n            handleClick={handleToggle}\r\n            type='desktop'\r\n         />\r\n      }\r\n      position='right center'\r\n      open={popupOpen}\r\n      on='click'\r\n      onClose={handleClose}\r\n      onOpen={handleOpen}\r\n   >\r\n      <Segment basic className='account-dropdown'>\r\n         <List className='submenu'>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={AccountImage} />\r\n               <List.Content as={Link} to='/profile' onClick={handleClose}>\r\n                  Profile\r\n               </List.Content>\r\n            </List.Item>\r\n            {false ? (\r\n               <List.Item>\r\n                  <List.Icon as={Image} src={ContactsGreyImage} />\r\n                  <List.Content as={Link} to='/contacts' onClick={handleClose}>\r\n                     Contacts\r\n                  </List.Content>\r\n               </List.Item>\r\n            ) : null}\r\n\r\n            <List.Item>\r\n               <List.Icon as={Image} src={AuthorizedGreyImage} />\r\n               <List.Content\r\n                  as={Link}\r\n                  to='authorized-apps'\r\n                  onClick={handleClose}\r\n               >\r\n                  Authorized Apps\r\n               </List.Content>\r\n            </List.Item>\r\n\r\n            {false ? (\r\n               <List.Item>\r\n                  <List.Icon as={Image} src={LogoutImage} />\r\n                  <List.Content as={Link} to='/logout' onClick={handleClose}>\r\n                     Logout\r\n                  </List.Content>\r\n               </List.Item>\r\n            ) : null}\r\n         </List>\r\n         <List className='switch-account'>\r\n            <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\r\n         </List>\r\n         <List className='account-dropdown-scroll'>\r\n            {account.accounts &&\r\n               Object.keys(account.accounts)\r\n                  .filter(a => a !== account.accountId)\r\n                  .map((account, i) => (\r\n                     <List.Item\r\n                        as='a'\r\n                        key={`mf-${i}`}\r\n                        onClick={() => {\r\n                           handleSelectAccount(account) \r\n                           handleClose()}\r\n                        }\r\n                        className='account-title'\r\n                     >\r\n                        @{account}\r\n                     </List.Item>\r\n                  ))}\r\n         </List>\r\n         <Button onClick={redirectCreateAccount}>CREATE NEW ACCOUNT</Button>\r\n      </Segment>\r\n   </CustomPopup>\r\n)\r\n\r\nexport default DesktopPopup\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport DesktopPopup from './DesktopPopup'\r\nimport GlobalAlert from './GlobalAlert'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { Image, Responsive, Segment, Visibility } from 'semantic-ui-react'\r\n\r\nimport LogoImage from '../../images/wallet.png'\r\nimport HelpImage from '../../images/icon-help.svg'\r\nimport ActivityImage from '../../images/icon-activity.svg'\r\nimport RecentImage from '../../images/icon-recent.svg'\r\nimport SendImage from '../../images/icon-send.svg'\r\n\r\nimport { handleRefreshAccount, switchAccount } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomResponsive = styled(Responsive)`\r\n   .spacer {\r\n      height: 72px;\r\n   }\r\n   &&& .navbar {\r\n      width: 100%;\r\n      background-color: #24272a;\r\n      height: 72px;\r\n      border-radius: 0;\r\n      position: fixed;\r\n      top: 0px;\r\n      z-index: 100;\r\n\r\n      .left {\r\n         float: left;\r\n      }\r\n      .right {\r\n         float: right;\r\n      }\r\n      .overflow {\r\n         overflow: hidden;\r\n      }\r\n      .devider {\r\n         float: left;\r\n         width: 2px;\r\n         height: 40px;\r\n         background: #5d5f60;\r\n         padding: 0px;\r\n         margin: 16px 28px 0 0;\r\n      }\r\n      .help {\r\n         float: left;\r\n         margin-top: 22px;\r\n         margin-right: 28px;\r\n      }\r\n      &-icon {\r\n         height: 24px;\r\n         display: inline-block;\r\n      }\r\n      .mainlogo {\r\n         float: left;\r\n         padding-right: 6px;\r\n         img {\r\n            height: 72px;\r\n         }\r\n      }\r\n      .item {\r\n         float: left;\r\n         color: white;\r\n         font-family: 'benton-sans', sans-serif;\r\n         font-weight: 500;\r\n         font-size: 14px;\r\n         padding-left: 0px;\r\n         padding-right: 30px;\r\n         letter-spacing: 2px;\r\n         line-height: 72px;\r\n         img {\r\n            margin-right: 10px;\r\n         }\r\n         a {\r\n            color: #fff;\r\n         }\r\n         a:hover {\r\n            color: #6ad1e3;\r\n            text-decoration: none;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst getWidth = () => {\r\n   const isSSR = typeof window === 'undefined'\r\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\nclass DesktopView extends Component {\r\n   static propTypes = {\r\n      children: PropTypes.node\r\n   }\r\n\r\n   static defaultProps = {\r\n      children: ''\r\n   }\r\n\r\n   state = {\r\n      activeItem: 'home',\r\n      popupOpen: false\r\n   }\r\n\r\n   hideFixedMenu = () => this.setState({ fixed: false })\r\n\r\n   showFixedMenu = () => this.setState({ fixed: true })\r\n\r\n   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.props.switchAccount(accountId)\r\n      this.props.handleRefreshAccount(this.props.history)\r\n      this.props.history.push(`/`)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n      this.setState(() => ({\r\n         popupOpen: false\r\n      }))\r\n   }\r\n\r\n   handleToggle = () => {\r\n      this.setState(state => ({\r\n         popupOpen: !state.popupOpen\r\n      }))\r\n   }\r\n\r\n   handleClose = () => {\r\n      this.setState(state => ({\r\n         popupOpen: false\r\n      }))\r\n   }\r\n\r\n   handleOpen = () => {\r\n      this.setState(state => ({\r\n         popupOpen: true\r\n      }))\r\n   }\r\n\r\n\r\n   render() {\r\n      const { popupOpen } = this.state\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <CustomResponsive\r\n            getWidth={getWidth}\r\n            minWidth={Responsive.onlyComputer.minWidth}\r\n         >\r\n            <Visibility\r\n               once={false}\r\n               onBottomPassed={this.showFixedMenu}\r\n               onBottomPassedReverse={this.hideFixedMenu}\r\n            >\r\n               <Segment className='spacer' basic />\r\n               <GlobalAlert />\r\n               <div className='navbar'>\r\n                  <div className='left'>\r\n                     <div>\r\n                        <div className='mainlogo'>\r\n                           <Link to='/'>\r\n                              <Image src={LogoImage} />\r\n                           </Link>\r\n                        </div>\r\n                        <div className='item'>\r\n                           <Link to='/'>\r\n                              <Image\r\n                                 className='navbar-icon'\r\n                                 src={RecentImage}\r\n                              />\r\n                              SUMMARY\r\n                           </Link>\r\n                        </div>\r\n                        {false ? (\r\n                           <div className='item'>\r\n                              <Link to='/'>\r\n                                 <Image\r\n                                    className='navbar-icon'\r\n                                    src={ActivityImage}\r\n                                 />\r\n                                 ACTIVITY\r\n                              </Link>\r\n                           </div>\r\n                        ) : null}\r\n                        <div className='item'>\r\n                           <Link to='/send-money'>\r\n                              <Image className='navbar-icon' src={SendImage} />\r\n                              SEND MONEY\r\n                           </Link>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n                  <div className='overflow'>\r\n                     {account.accountId && (\r\n                        <div className='right'>\r\n                           <div className='help'>\r\n                              <a href='http://near.chat/'>\r\n                                 <Image\r\n                                    className='navbar-icon'\r\n                                    src={HelpImage}\r\n                                 />\r\n                              </a>\r\n                           </div>\r\n                           <div className='devider' />\r\n                           <div className='overflow'>\r\n                              <DesktopPopup\r\n                                 account={account}\r\n                                 handleSelectAccount={this.handleSelectAccount}\r\n                                 redirectCreateAccount={\r\n                                    this.redirectCreateAccount\r\n                                 }\r\n                                 handleToggle={this.handleToggle}\r\n                                 handleClose={this.handleClose}\r\n                                 handleOpen={this.handleOpen}\r\n                                 popupOpen={popupOpen}\r\n                              />\r\n                           </div>\r\n                        </div>\r\n                     )}\r\n                  </div>\r\n               </div>\r\n            </Visibility>\r\n         </CustomResponsive>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   switchAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(DesktopView))\r\n","import React, { Fragment } from 'react'\r\n\r\nimport MobileView from './MobileView'\r\nimport DesktopView from './DesktopView'\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n   <Fragment>\r\n      <DesktopView />\r\n      <MobileView />\r\n      <div className='main'>{children}</div>\r\n   </Fragment>\r\n)\r\n\r\nexport default ResponsiveContainer\r\n","import React from 'react'\r\nimport { Grid, Image, List, Item } from 'semantic-ui-react'\r\n\r\nimport LogoFooterImage from '../../images/near.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst FooterGrid = styled(Grid)`\r\n   &&&& {\r\n      position: absolute;\r\n      bottom: 0px;\r\n      width: 100%;\r\n\r\n      background-color: #f8f8f8;\r\n\r\n      font-size: 12px;\r\n      font-weight: 300;\r\n      color: #999999;\r\n\r\n      margin-bottom: 0px;\r\n      margin-left: 0px;\r\n\r\n      .near-logo {\r\n         .content {\r\n            a {\r\n               font-size: 12px;\r\n               font-weight: 300;\r\n               color: #999999;\r\n               text-decoration: underline;\r\n\r\n               :hover {\r\n                  text-decoration: none;\r\n               }\r\n            }\r\n            .color-brown-grey {\r\n               color: #e6e6e6;\r\n               padding: 0 6px;\r\n            }\r\n         }\r\n         .image {\r\n            width: 140px;\r\n            padding-left: 14px;\r\n         }\r\n      }\r\n\r\n      .learn-more {\r\n         padding: 0 40px 0 0;\r\n         color: #24272a;\r\n      }\r\n\r\n      .help {\r\n         padding-right: 0px;\r\n         padding-top: 10px;\r\n         padding-bottom: 10px;\r\n\r\n         > .list {\r\n            width: 230px;\r\n            height: 80px;\r\n            padding: 20px 0;\r\n            background: #fff;\r\n            text-align: left;\r\n\r\n            > img {\r\n               width: 80px;\r\n               position: absolute;\r\n               bottom: 0px;\r\n               right: 200px;\r\n            }\r\n\r\n            > h3 {\r\n               font-weight: 600 !important;\r\n               padding: 0 0 0 40px;\r\n               color: #999999 !important;\r\n\r\n               &.color {\r\n                  color: #0072ce !important;\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&&& {\r\n         height: 180px;\r\n\r\n         .near-logo {\r\n            .content {\r\n               text-align: center;\r\n            }\r\n            .image {\r\n               padding-left: 0px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ResponsiveContainer = () => (\r\n   <FooterGrid columns={2}>\r\n      <Grid.Column\r\n         textAlign='left'\r\n         verticalAlign='middle'\r\n         widescreen={4}\r\n         largeScreen={6}\r\n         computer={7}\r\n         tablet={10}\r\n         mobile={16}\r\n      >\r\n         <Item.Group className='near-logo'>\r\n            <Item>\r\n               <Item.Image src={LogoFooterImage} />\r\n               <Item.Content>\r\n                  © 2019 NEAR Inc. All Rights Reserved.\r\n                  <br />\r\n                  <a href='/'>Terms of Service</a>\r\n                  <span className='color-brown-grey'>|</span>\r\n                  <a href='/'>Privacy Policy</a>\r\n               </Item.Content>\r\n            </Item>\r\n         </Item.Group>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         only='computer'\r\n         computer={5}\r\n         className='learn-more'\r\n         verticalAlign='middle'\r\n      >\r\n         NEAR is a scalable computing and storage platform that changes how the\r\n         web works for better.{' '}\r\n         <a href='https://nearprotocol.com/'>Learn More</a>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         only='tablet computer'\r\n         widescreen={7}\r\n         largeScreen={5}\r\n         computer={4}\r\n         tablet={6}\r\n         textAlign='right'\r\n         className='help'\r\n      >\r\n         <List floated='right'>\r\n            <List.Item as='h3'>Need Help?</List.Item>\r\n            <List.Item as='h3' className='color'>\r\n               <a href='https://discordapp.com/invite/gBtUFKR'>\r\n                  Contact Support\r\n               </a>\r\n            </List.Item>\r\n            <Image className='nearkat' src={NearkatImage} />\r\n         </List>\r\n      </Grid.Column>\r\n   </FooterGrid>\r\n)\r\n\r\nexport default ResponsiveContainer\r\n","import React from 'react'\r\n\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nimport CloseImage from '../../images/icon-close.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 20px;\r\n      margin: 12px 0 12px 0;\r\n\r\n      .img {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 20px;\r\n         right: 20px;\r\n\r\n         img {\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      .text {\r\n         margin: 0 10% 0 0;\r\n         color: #24272a;\r\n         float: left;\r\n\r\n         .header {\r\n            font-family: 'benton-sans', sans-serif;\r\n         }\r\n         .content {\r\n            color: #999999;\r\n            padding-top: 12px;\r\n            line-height: 20px;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardNotice = ({ handleNotice }) => (\r\n   <CustomList horizontal className='box'>\r\n      <List.Item className='text'>\r\n         <List.Header>Here’s a Notice of some sort</List.Header>\r\n         <List.Content>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce nec\r\n            ex non augue volutpat finibus. Suspendisse fringilla consequat magna\r\n            a finibus.{` `}\r\n            <a href='/'>Call to Action</a>\r\n         </List.Content>\r\n      </List.Item>\r\n      <List.Item className='img'>\r\n         <Image onClick={handleNotice} src={CloseImage} />\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default DashboardNotice\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nimport ArrowGrnImage from '../../images/icon-arrow-grn.svg'\r\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomButton = styled(Button)`\r\n   &&& {\r\n      color: #fff;\r\n      font-weight: 500;\r\n      letter-spacing: 2px;\r\n\r\n      margin: 24px 0 0 0;\r\n      border: 2px solid;\r\n\r\n      width: 288px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      \r\n      font-size: 18px;\r\n\r\n      &.small {\r\n         width: 110px;\r\n         height: 40px;\r\n         border-radius: 20px;\r\n         letter-spacing: 0;\r\n         padding: 0px 0px;\r\n         font-weight: 600;\r\n         \r\n         font-size: 14px;\r\n      }\r\n\r\n      &.blue {\r\n         border-color: #0072ce;\r\n         background: #0072ce;\r\n\r\n         :disabled {\r\n            background: #e6e6e6;\r\n            border-color: #e6e6e6;\r\n            opacity: 1 !important;\r\n         }\r\n         :active,\r\n         :hover,\r\n         :focus {\r\n            border-color: #4096db;\r\n            background: #4096db;\r\n         }\r\n      }\r\n      &.green {\r\n         border-color: #5ace84;\r\n         background: #5ace84;\r\n\r\n         :disabled {\r\n            border-color: #e6e6e6;\r\n            background: #e6e6e6;\r\n            opacity: 1 !important;\r\n         }\r\n         :active,\r\n         :hover,\r\n         :focus {\r\n            border-color: #61de8d;\r\n            background: #61de8d;\r\n         }\r\n      }\r\n      &.green-white-arrow {\r\n         color: #5ace84;\r\n         border-color: #5ace84;\r\n         background-color: #fff;\r\n         background-image: url(${ArrowGrnImage});\r\n         background-repeat: no-repeat;\r\n         background-position: 90% center;\r\n         background-size: 14px 20px;\r\n         padding-right: 70px;\r\n\r\n         :disabled {\r\n            color: e6e6e6;\r\n            border-color: #e6e6e6;\r\n            background: #fff;\r\n            opacity: 1 !important;\r\n         }\r\n         :active,\r\n         :hover,\r\n         :focus {\r\n            color: #fff;\r\n            border-color: #61de8d;\r\n            background-color: #61de8d;\r\n            background-image: url(${ArrowRightImage});\r\n         }\r\n      }\r\n      &.gray-white {\r\n         color: #cccccc;\r\n         border-color: #cccccc;\r\n         background: #fff;\r\n\r\n         :disabled {\r\n            border-color: #e6e6e6;\r\n            background: #e6e6e6;\r\n            opacity: 1 !important;\r\n         }\r\n         :active,\r\n         :hover,\r\n         :focus {\r\n            color: #fff;\r\n            border-color: #cccccc;\r\n            background: #cccccc;\r\n         }\r\n      }\r\n      &.gray-blue {\r\n         color: #0072ce;\r\n         border-color: #f8f8f8;\r\n         background: #f8f8f8;\r\n\r\n         :disabled {\r\n            border-color: #e6e6e6;\r\n            background: #e6e6e6;\r\n            opacity: 1 !important;\r\n         }\r\n         :active,\r\n         :hover,\r\n         :focus {\r\n            color: #0072ce;\r\n            border-color: #f8f8f8;\r\n            background: #fff;\r\n         }\r\n      }\r\n      &.link {\r\n         width: auto;\r\n         height: auto;\r\n         letter-spacing: 0;\r\n         padding: 0;\r\n         margin: 0;\r\n\r\n         font-size: 14px;\r\n         line-height: 14px;\r\n         font-weight: 500;\r\n         background: none;\r\n         border: none;\r\n         display: inline;\r\n\r\n         text-decoration: underline;\r\n         color: #0072ce;\r\n\r\n         :hover,\r\n         :focus {\r\n            text-decoration: none;\r\n            color: #0072ce;\r\n         }\r\n\r\n         &.gray {\r\n            text-decoration: none;\r\n            color: #999;\r\n\r\n            :hover,\r\n            :focus {\r\n               text-decoration: underline;\r\n               color: #999;\r\n            }\r\n         }\r\n\r\n      }\r\n\r\n      &.dots {\r\n         color: #fff;\r\n         border-color: #cccccc;\r\n         background-color: #cccccc;\r\n\r\n         :active,\r\n         :hover,\r\n         :focus,\r\n         :disabled {\r\n            background: #cccccc;\r\n            border-color: #cccccc;\r\n         }\r\n         :after {\r\n            content: '.';\r\n            animation: dots 1s steps(5, end) infinite;\r\n         \r\n            @keyframes dots {\r\n               0%, 20% {\r\n                  color: rgba(0,0,0,0);\r\n                  text-shadow:\r\n                     .3em 0 0 rgba(0,0,0,0),\r\n                     .6em 0 0 rgba(0,0,0,0);\r\n               }\r\n               40% {\r\n                  color: white;\r\n                  text-shadow:\r\n                     .3em 0 0 rgba(0,0,0,0),\r\n                     .6em 0 0 rgba(0,0,0,0);\r\n               }\r\n               60% {\r\n                  text-shadow:\r\n                     .3em 0 0 white,\r\n                     .6em 0 0 rgba(0,0,0,0);\r\n               }\r\n               80%, 100% {\r\n                  text-shadow:\r\n                     .3em 0 0 white,\r\n                     .6em 0 0 white;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      &.bold {\r\n         font-weight: 600;\r\n      }\r\n   }\r\n`\r\n\r\nconst FormButton = ({ \r\n   children, \r\n   type, \r\n   color = 'blue', \r\n   disabled = false,\r\n   onClick,\r\n   sending = false,\r\n   size = ''\r\n}) => (\r\n   <CustomButton\r\n      type={type}\r\n      className={`${color} ${size} ${sending ? `dots` : ``}`}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n   >\r\n      {sending\r\n         ? `SENDING`\r\n         : children\r\n      }\r\n   </CustomButton>\r\n)\r\n\r\nFormButton.propTypes = {\r\n   children: PropTypes.string.isRequired,\r\n   type: PropTypes.string,\r\n   color: PropTypes.string,\r\n   disabled: PropTypes.bool,\r\n   onClick: PropTypes.func,\r\n   sending: PropTypes.bool,\r\n   size: PropTypes.string,\r\n}\r\n\r\nexport default FormButton\r\n","import React from 'react'\r\n\r\nimport { Grid, Image } from 'semantic-ui-react'\r\n\r\nimport MainImage from '../common/MainImage'\r\n\r\nimport ArrowRight from '../../images/icon-arrow-right.svg'\r\nimport ArrowBlkImage from '../../images/icon-arrow-blk.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGridRow = styled(Grid.Row)`\r\n   &&& {\r\n      margin-left: 20px;\r\n      border-left: 4px solid #f8f8f8;\r\n      cursor: pointer;\r\n\r\n      .col-image {\r\n         margin-left: -33px;\r\n         width: 40px;\r\n         flex: 0 0 40px;\r\n         padding-left: 0px;\r\n\r\n         > div {\r\n            margin: 0 24px 0 18px;\r\n         }\r\n      }\r\n\r\n      &.wide {\r\n         margin-left: 0px;\r\n         border-left: 0px;\r\n\r\n         .col-image {\r\n            margin-left: 6px;\r\n            width: 56px;\r\n            flex: 0 0 56px;\r\n\r\n            > div {\r\n               margin: 0 24px 0 0;   \r\n            }\r\n         }\r\n      }\r\n\r\n      .main-row-title {\r\n         font-weight: 600;\r\n         width: auto;\r\n         padding-right: 0px;\r\n         flex: 1;\r\n         word-break: break-all;\r\n      }\r\n\r\n      .dropdown-image-right {\r\n         width: 10px;\r\n         margin: 0 0 0 0;\r\n      }\r\n      .dropdown-image {\r\n         float: right;\r\n      }\r\n\r\n      &.dropdown-down {\r\n         background-color: #f8f8f8;\r\n\r\n         .dropdown-image-right {\r\n            width: 10px;\r\n            top: 0px;\r\n            left: 12px;\r\n         }\r\n      }\r\n\r\n      &.showsub {\r\n         .dropdown-image-right {\r\n            left: -24px;\r\n         }\r\n      }\r\n      &.showsub.dropdown-down {\r\n         .dropdown-image-right {\r\n            left: -6px;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         &.showsub {\r\n            .dropdown-image-right {\r\n               left: -14px;\r\n            }\r\n         }\r\n         &.showsub.dropdown-down {\r\n            .dropdown-image-right {\r\n               left: 4px;\r\n            }\r\n         }\r\n\r\n         .main-row-title {\r\n            a {\r\n               font-size: 14px;\r\n            }\r\n         }\r\n\r\n         &.wide {\r\n\r\n            .col-image {\r\n               margin-left: 12px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ListItem = ({\r\n   row,\r\n   i,\r\n   wide = false,\r\n   showSub = false,\r\n   toggleShowSub,\r\n   showSubOpen\r\n}) => (\r\n   <CustomGridRow\r\n      verticalAlign='middle'\r\n      className={`${wide ? `wide` : ``} ${\r\n         showSub && showSubOpen === i ? `dropdown-down` : ``\r\n      } ${showSub ? `showsub` : ``}`}\r\n      onClick={() => wide && toggleShowSub(i, row)}\r\n   >\r\n      <Grid.Column\r\n         computer={wide ? 15 : 16}\r\n         tablet={wide ? 14 : 16}\r\n         mobile={wide ? 14 : 16}\r\n      >\r\n         <Grid verticalAlign='middle'>\r\n            <Grid.Column className='col-image'>\r\n               <MainImage \r\n                  src={row[0]} \r\n                  size={wide ? `medium` : `tiny`}\r\n               />\r\n            </Grid.Column>\r\n            <Grid.Column className='main-row-title'>\r\n               contractId: <span className='color-black'>{row[1]}</span>\r\n               {row[2] != null && (\r\n                  <span className='font-small'>\r\n                     <br />\r\n                     amount:\r\n                     <span className='color-black'>{row[2]}Ⓝ</span>, publicKey:{' '}\r\n                     <span className='color-black'>{row[3]}</span>\r\n                  </span>\r\n               )}\r\n            </Grid.Column>\r\n         </Grid>\r\n      </Grid.Column>\r\n      {wide && (\r\n         <Grid.Column\r\n            computer={1}\r\n            tablet={2}\r\n            mobile={2}\r\n            textAlign='right'\r\n         >\r\n            <Image\r\n               src={showSub && showSubOpen === i ? ArrowBlkImage : ArrowRight}\r\n               className='dropdown-image dropdown-image-right'\r\n            />\r\n            {/* <span className='font-small'>{row[3]}</span> */}\r\n         </Grid.Column>\r\n      )}\r\n   </CustomGridRow>\r\n)\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FormButton from '../common/FormButton'\r\nimport ListItem from './ListItem'\r\n\r\nimport { Loader, Grid, Dimmer, Header, Image } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      margin-bottom: 20px;\r\n\r\n      .row:first-child {\r\n         padding-bottom: 0px;\r\n      }\r\n\r\n      .row:last-child {\r\n         padding: 14px 0 0 4px;\r\n         margin-left: 20px;\r\n         border-left: 4px solid #f8f8f8;\r\n      }\r\n\r\n      .dashboard-header {\r\n         padding: 14px 0 10px 0;\r\n      }\r\n\r\n      link.view-all,\r\n      button.view-all,\r\n      a.view-all {\r\n         background: #f8f8f8;\r\n         margin: 0;\r\n         padding: 10px 20px;\r\n         color: #0072ce;\r\n         font-weight: 600;\r\n         border-radius: 20px;\r\n         border: 2px solid #f8f8f8;\r\n\r\n         :hover {\r\n            background: #fff;\r\n         }\r\n      }\r\n\r\n      .column-icon {\r\n         width: 28px;\r\n         display: inline-block;\r\n         margin: -4px 10px 0 8px;\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardActivity = ({ loader, image, title, to, activity }) => (\r\n   <CustomGrid>\r\n      <Grid.Row>\r\n         <Grid.Column className='dashboard-header' textAlign='left' width={16}>\r\n            <Header className='h2'>\r\n               <Image className='column-icon' src={image} />\r\n               {title}\r\n            </Header>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Dimmer inverted active={loader}>\r\n         <Loader />\r\n      </Dimmer>\r\n\r\n      {activity.map((row, i) => (\r\n         <ListItem key={`d-${i}`} row={row} />\r\n      ))}\r\n\r\n      <Grid.Row>\r\n         <Grid.Column textAlign='left' width={16}>\r\n            <Link to={to}>\r\n               <FormButton color='gray-blue' size='small'>\r\n                  VIEW ALL\r\n               </FormButton>\r\n            </Link>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default DashboardActivity\r\n","import React from 'react'\r\n\r\nimport { Container, Grid, Segment } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& {\r\n      .page-title {\r\n         border-bottom: 2px solid #e6e6e6;\r\n         padding: 36px 0 36px 0;\r\n         word-wrap: break-word;\r\n         margin-bottom: 24px;\r\n\r\n         &.center {\r\n            border-bottom: 0;\r\n            margin-bottom: 0;\r\n         }\r\n         h1 {\r\n            line-height: 48px;\r\n         }\r\n         button {\r\n            margin-top: 0px;\r\n         }\r\n         .column {\r\n            padding-left: 0;\r\n         }\r\n         .add {\r\n            text-align: right;\r\n            padding-right: 0;\r\n         }\r\n      }\r\n      @media screen and (max-width: 991px) {\r\n         .page-title {\r\n            padding: 24px 0 12px 0;\r\n            text-align: center;\r\n\r\n            button {\r\n               margin-bottom: 12px;\r\n               margin-top: 12px;\r\n            }\r\n            .column {\r\n               padding: 0 0 12px 0;\r\n            }\r\n            .balance {\r\n               display: none;\r\n            }\r\n            .add {\r\n               text-align: center;\r\n               padding-bottom: 0px;\r\n\r\n               h1 {\r\n                  font-size: 12px !important;\r\n                  line-height: 18px !important;\r\n                  letter-spacing: 2px;\r\n                  text-transform: uppercase;\r\n                  padding-bottom: 0px;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         .title-section {\r\n            margin-left: 0;\r\n            margin-right: 0;\r\n\r\n            .page-title {\r\n               padding-top: 24px;\r\n               text-align: center;\r\n               margin-bottom: 12px;\r\n\r\n               .column {\r\n                  padding: 0 0 0 0;\r\n               }\r\n               .balance {\r\n                  display: none;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      @media screen and (max-width: 380px) {\r\n         h1 {\r\n            font-size: 36px !important;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst PageContainer = ({ children, title, additional, bottom, type }) => (\r\n   <CustomContainer>\r\n      <Grid className='title-section'>\r\n         {type === 'center'\r\n            ? (\r\n               <Grid.Row columns='1' className='page-title center'>\r\n                  <Grid.Column as='h1' textAlign='center'>\r\n                     {title}\r\n                  </Grid.Column>\r\n               </Grid.Row>\r\n            ) : (\r\n               <Grid.Row columns='2' className='page-title'>\r\n                  <Grid.Column as='h1' computer={11} tablet={16} mobile={16} verticalAlign='middle'>\r\n                     {title}\r\n                  </Grid.Column>\r\n                  <Grid.Column computer={5} tablet={16} mobile={16} className='add'>\r\n                     {additional}\r\n                  </Grid.Column>\r\n               </Grid.Row>\r\n            )}\r\n      </Grid>\r\n      {children}\r\n      <Segment basic textAlign='center'>\r\n         {bottom}\r\n      </Segment>\r\n   </CustomContainer>\r\n)\r\n\r\nexport default PageContainer\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl,\r\n   getAccountDetails\r\n} from '../../actions/account'\r\n\r\nimport DashboardSection from './DashboardSection'\r\nimport DashboardActivity from './DashboardActivity'\r\nimport PageContainer from '../common/PageContainer';\r\nimport FormButton from '../common/FormButton'\r\n\r\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\r\n\r\nimport TStakeImage from '../../images/icon-t-stake.svg'\r\nimport TTransferImage from '../../images/icon-t-transfer.svg'\r\nimport AppDefaultImage from '../../images/icon-app-default.svg'\r\n\r\nclass DashboardDetail extends Component {\r\n   state = {\r\n      loader: false,\r\n      notice: true,\r\n      activity: [],\r\n      authorizedApps: [],\r\n      newcontacts: []\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.props.history)\r\n      this.refreshAuthorizedApps()\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      false &&\r\n         setTimeout(() => {\r\n            this.setState(_ => ({\r\n               activity: [\r\n                  [\r\n                     TTransferImage,\r\n                     'Sent: 125 Ⓝ  to @jake.near',\r\n                     'Some details about this activity here',\r\n                     '3 min ago'\r\n                  ],\r\n                  [\r\n                     TStakeImage,\r\n                     'You Staked 10 tokens',\r\n                     'Some details about this activity here',\r\n                     '20 min ago'\r\n                  ],\r\n                  [\r\n                     TTransferImage,\r\n                     'Sent: 125 Ⓝ  to @vlad.near',\r\n                     'Some details about this activity here',\r\n                     '1 hr ago'\r\n                  ]\r\n               ],\r\n               authorizedApps: [\r\n                  [AppDefaultImage, 'NEAR Place', '', '3 hrs ago'],\r\n                  [AppDefaultImage, 'Cryptocats', '', '5 hrs ago'],\r\n                  [AppDefaultImage, 'Knights App', '', '2 days ago']\r\n               ],\r\n               newcontacts: [\r\n                  [\r\n                     AccountGreyImage,\r\n                     'Alex Skidanov ',\r\n                     '',\r\n                     'Connected 2 days ago'\r\n                  ],\r\n                  [AccountGreyImage, '@vlad.near', '', '2 days ago'],\r\n                  [\r\n                     AccountGreyImage,\r\n                     'Illia Polosukhin',\r\n                     '',\r\n                     'Connected 2 days ago'\r\n                  ]\r\n               ]\r\n               // loader: false\r\n            }))\r\n         }, 1000)\r\n   }\r\n\r\n   refreshAuthorizedApps = () => {\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      this.props.getAccountDetails().then(() => {\r\n         this.setState(() => ({\r\n            loader: false\r\n         }))\r\n      })\r\n   }\r\n\r\n   handleNotice = () => {\r\n      this.setState(state => ({\r\n         notice: !state.notice\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         loader,\r\n         notice,\r\n         activity,\r\n         newcontacts\r\n      } = this.state\r\n\r\n      const { authorizedApps, amountStr } = this.props\r\n\r\n      return (\r\n         <PageContainer\r\n            title={(\r\n               <Fragment>\r\n                  <span className='balance'>Balance: </span>\r\n                  <span className='color-black'>{amountStr}</span>\r\n                  <span className='near'>Ⓝ</span>\r\n               </Fragment>\r\n            )}\r\n            additional={(\r\n               <Link to='/send-money'>\r\n                  <FormButton color='green-white-arrow' >\r\n                     SEND MONEY\r\n                  </FormButton>\r\n               </Link>\r\n            )}\r\n         >\r\n            <DashboardActivity\r\n               loader={loader}\r\n               image={AuthorizedGreyImage}\r\n               title='Authorized Apps'\r\n               to='/authorized-apps'\r\n               activity={authorizedApps}\r\n            />\r\n            {false ? (\r\n               <DashboardSection\r\n                  notice={notice}\r\n                  handleNotice={this.handleNotice}\r\n               >\r\n                  <DashboardActivity\r\n                     loader={loader}\r\n                     image={activityGreyImage}\r\n                     title='Activity'\r\n                     to='/'\r\n                     activity={activity}\r\n                  />\r\n                  <DashboardActivity\r\n                     loader={loader}\r\n                     image={AuthorizedGreyImage}\r\n                     title='Authorized Apps'\r\n                     to='/authorized-apps'\r\n                     activity={authorizedApps}\r\n                  />\r\n                  <DashboardActivity\r\n                     loader={loader}\r\n                     image={ContactsGreyImage}\r\n                     title='New Contacts'\r\n                     to='/contacts'\r\n                     activity={newcontacts}\r\n                  />\r\n               </DashboardSection>\r\n            ) : null}\r\n         </PageContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl,\r\n   getAccountDetails\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   ...account,\r\n   authorizedApps: account.authorizedApps\r\n      ? account.authorizedApps.map(r => [\r\n           AppDefaultImage,\r\n           r.contractId,\r\n           r.amount,\r\n           r.publicKey\r\n        ])\r\n      : []\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(DashboardDetail))\r\n","import React from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\n\r\nconst RequestStatusBoxGrid = styled(Grid)`\r\n   &&& .alert-info {\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n      line-height: 64px;\r\n      margin: 36px 0 0 0;\r\n      padding-left: 30px;\r\n\r\n      &.problem {\r\n         color: #ff585d;\r\n      }\r\n      &.success {\r\n         color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      && {\r\n         padding-left: 0px;\r\n      }\r\n      &&& .alert-info {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .alert-info {\r\n         line-height: 20px;\r\n         font-size: 14px;\r\n         padding: 0px !important;\r\n         text-align: center;\r\n         margin: 24px 0 0 0;\r\n      }\r\n\r\n      && {\r\n         margin-top: -12px;\r\n      }\r\n  }\r\n`\r\n/**\r\n * Renders request status.\r\n *\r\n * @param requestStatus {object} request status, can be null in case not completed yet / no outgoing request\r\n * @param requestStatus.success {boolean} true if request was succesful\r\n * @param requestStatus.messageCode {string} localization code of status message to display\r\n */\r\nconst RequestStatusBox = ({ requestStatus }) => (\r\n   requestStatus ?\r\n      <RequestStatusBoxGrid>\r\n         <Grid.Column className={`alert-info ${requestStatus.success ? 'success' : 'problem'}`}>\r\n            {requestStatus.messageCode}\r\n         </Grid.Column>\r\n      </RequestStatusBoxGrid>\r\n      : null\r\n)\r\n\r\nexport default RequestStatusBox\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Responsive } from 'semantic-ui-react'\r\n\r\nimport RequestStatusBox from '../common/RequestStatusBox'\r\nimport { checkAccountAvailable, checkNewAccount } from '../../actions/account'\r\n\r\nimport ProblemsImage from '../../images/icon-problems.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomFormInput = styled(Form.Input)`\r\n   &&&& input {\r\n      width: 100%;\r\n      height: 64px;\r\n      border: 4px solid #f8f8f8;\r\n      padding: 0 0 0 20px;\r\n      font-size: 18px;\r\n      color: #4a4f54;\r\n      font-weight: 400;\r\n      background-color: #f8f8f8;\r\n      position: relative;\r\n      :focus {\r\n         border-color: #f8f8f8;\r\n         background-color: #fff;\r\n      }\r\n      :valid {\r\n         background-color: #fff;\r\n      }\r\n   }\r\n   &&&&& .spinner {\r\n      margin-right: 20px;\r\n      :before,\r\n      :after {\r\n         top: 28px;\r\n         width: 24px;\r\n         height: 24px;\r\n      }\r\n   }\r\n   &.problem > .input > input,\r\n   &.problem > .input > input:focus {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   &.success > .input > input,\r\n   &.success > .input > input:focus {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n`\r\n\r\nclass AccountFormAccountId extends Component {\r\n   state = {\r\n      accountId: this.props.defaultAccountId || ''\r\n   }\r\n\r\n   handleChangeAccountId = (e, { name, value }) => {\r\n      if (value.match(/[^a-zA-Z0-9@._-]/)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         [name]: value.trim().toLowerCase()\r\n      }))\r\n\r\n      this.props.handleChange(e, { name, value })\r\n\r\n      this.timeout && clearTimeout(this.timeout)\r\n\r\n      this.timeout = setTimeout(() => {\r\n         this.props.type === 'create'\r\n            ? this.props.checkNewAccount(value)\r\n            : this.props.checkAccountAvailable(value)\r\n      }, 500)\r\n   }\r\n\r\n   render () {\r\n      const { formLoader, requestStatus } = this.props\r\n      const { accountId } = this.state\r\n\r\n      return (\r\n         <Fragment>\r\n            <CustomFormInput\r\n               loading={formLoader}\r\n               className={`create ${\r\n                  requestStatus ? (requestStatus.success ? 'success' : 'problem') : ''\r\n               }`}\r\n               name='accountId'\r\n               value={accountId}\r\n               onChange={this.handleChangeAccountId}\r\n               placeholder='example: satoshi.near'\r\n               maxLength='32'\r\n               required\r\n               autoComplete='off'\r\n               autoCorrect='off'\r\n               autoCapitalize='off'\r\n               spellCheck='false'\r\n            />\r\n            <Responsive as={RequestStatusBox} maxWidth={767} requestStatus={requestStatus} />\r\n         </Fragment>\r\n      )\r\n   }\r\n}\r\n\r\nAccountFormAccountId.propTypes = {\r\n   formLoader: PropTypes.bool.isRequired,\r\n   handleChange: PropTypes.func.isRequired,\r\n   type: PropTypes.string,\r\n   defaultAccountId: PropTypes.string\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   checkAccountAvailable,\r\n   checkNewAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }, { match }) => ({\r\n   ...account,\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(AccountFormAccountId)\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Header } from 'semantic-ui-react'\r\n\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nimport FormButton from '../common/FormButton'\r\nimport AccountFormAccountId from './AccountFormAccountId'\r\n\r\nconst CreateAccountForm = ({\r\n   loader,\r\n   formLoader,\r\n   handleChange,\r\n   handleRecaptcha,\r\n   requestStatus\r\n}) => (\r\n   <Fragment>\r\n      <Header as='h3'>Choose a Username</Header>\r\n      <AccountFormAccountId\r\n         formLoader={formLoader}\r\n         handleChange={handleChange}\r\n         type='create'\r\n      />\r\n\r\n      {false ? (\r\n         <ReCAPTCHA\r\n            sitekey='6LfNjp8UAAAAAByZu30I-2-an14USj3yVbbUI3eN'\r\n            onChange={handleRecaptcha}\r\n         />\r\n      ) : null}\r\n      \r\n      <FormButton\r\n         type='submit'\r\n         color='blue'\r\n         disabled={!(requestStatus && requestStatus.success)}\r\n         sending={loader}\r\n      >\r\n         CREATE ACCOUNT\r\n      </FormButton>\r\n      <div className='recover'>\r\n         <div>Already have an account?</div>\r\n         <Link to='/recover-account'>Recover it here</Link>\r\n      </div>\r\n   </Fragment>\r\n)\r\n\r\nCreateAccountForm.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   formLoader: PropTypes.bool.isRequired,\r\n   handleChange: PropTypes.func.isRequired,\r\n   handleRecaptcha: PropTypes.func.isRequired,\r\n   requestStatus: PropTypes.object\r\n}\r\n\r\nexport default CreateAccountForm\r\n","import React from 'react'\r\nimport { List } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      margin: 36px 0 0 1rem;\r\n      padding-left: 30px;\r\n      border-left: 4px solid #f8f8f8;\r\n\r\n      .title {\r\n         letter-spacing: 2px;\r\n         font-weight: 600;\r\n         line-height: 20px;\r\n         color: #4a4f54;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n         margin: 36px 0 0 -1rem;\r\n         padding-left: 30px;\r\n         border-left: 4px solid #f8f8f8;\r\n\r\n         .title {\r\n            letter-spacing: 2px;\r\n            font-weight: 600;\r\n            line-height: 20px;\r\n            color: #4a4f54;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         font-size: 12px;\r\n         padding-left: 1rem;\r\n      }\r\n   }\r\n`\r\n\r\nconst AccountNote = () => (\r\n   <CustomList>\r\n      <List.Item className='title'>NOTE</List.Item>\r\n      <List.Item>\r\n         Your username can be 5-32 characters\r\n      </List.Item>\r\n      <List.Item>\r\n         long and contain any of the following:\r\n      </List.Item>\r\n      <List.Item>• Lowercase characters (a-z)</List.Item>\r\n      <List.Item>• Digits (0-9)</List.Item>\r\n      <List.Item>• Special characters (@._-)</List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default AccountNote\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Grid, Responsive } from 'semantic-ui-react'\r\n\r\nimport RequestStatusBox from '../common/RequestStatusBox'\r\nimport AccountNote from '../common/AccountNote'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomForm = styled(Form)`\r\n   &&& {\r\n      margin-left: -1rem;\r\n\r\n      h3.column {\r\n         padding-bottom: 0;\r\n      }\r\n      .username-row {\r\n         padding-bottom: 0px;\r\n         margin-left: -1rem;\r\n      }\r\n      .form-row {\r\n         margin-left: -1rem;\r\n      }\r\n      .recover {\r\n         margin-top: 36px;\r\n         color: #24272a;\r\n         line-height: 24px;\r\n         font-weight: 600;\r\n\r\n         a {\r\n            text-decoration: underline;\r\n\r\n            :hover {\r\n               text-decoration: none;\r\n            }\r\n         }\r\n      }\r\n      input {\r\n         width: 100%;\r\n         height: 64px;\r\n         border: 4px solid #f8f8f8;\r\n         padding: 0 0 0 20px;\r\n         font-size: 18px;\r\n         color: #4a4f54;\r\n         font-weight: 400;\r\n         background-color: #f8f8f8;\r\n         position: relative;\r\n         :focus {\r\n            border-color: #f8f8f8;\r\n            background-color: #fff;\r\n         }\r\n         :valid {\r\n            background-color: #fff;\r\n         }\r\n      }\r\n      .create {\r\n         position: relative;\r\n         margin-bottom: 0px;\r\n         .react-phone-number-input__country {\r\n            position: absolute;\r\n            top: 24px;\r\n            right: 22px;\r\n            z-index: 1;\r\n\r\n            &-select-arrow {\r\n               display: none;\r\n            }\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n         \r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0;\r\n         .username-row {\r\n            margin-left: 0;\r\n         }\r\n         .form-row {\r\n            padding-top: 6px;\r\n            margin-left: 0;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst AccountFormSection = ({ handleSubmit, requestStatus, location, children }) => (\r\n   <CustomForm autoComplete='off' onSubmit={handleSubmit}>\r\n      <Grid>\r\n         <Grid.Column computer={9} tablet={8} mobile={16}>\r\n            {children}\r\n         </Grid.Column>\r\n         <Grid.Column computer={7} tablet={8} mobile={16}>\r\n            <Responsive as={RequestStatusBox} minWidth={768} requestStatus={requestStatus} />\r\n            {location && <AccountNote />}\r\n         </Grid.Column>\r\n      </Grid>\r\n   </CustomForm>\r\n)\r\n\r\nAccountFormSection.propTypes = {\r\n   handleSubmit: PropTypes.func.isRequired,\r\n   requestStatus: PropTypes.object,\r\n   location: PropTypes.object,\r\n   children: PropTypes.element,\r\n}\r\n\r\nexport default AccountFormSection\r\n","import React from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\n\r\nconst DisclaimerGrid = styled(Grid)`\r\n   && .disclaimer {\r\n      margin-top: 100px;\r\n\r\n      > .column {\r\n         padding-left: 0px;\r\n         padding-right: 0px;\r\n      }\r\n   }\r\n   .disclaimer-info {\r\n      font-weight: 600;\r\n      letter-spacing: 2px;\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && .disclaimer {\r\n         margin-top: 50px;\r\n         font-size: 12px;\r\n         margin-left: 1rem;\r\n         margin-right: 1rem;\r\n      }\r\n   }\r\n`\r\n\r\nconst Disclaimer = () => (\r\n   <DisclaimerGrid>\r\n      <Grid.Row className='disclaimer border-top-bold'>\r\n         <Grid.Column computer={16} tablet={16} mobile={16}>\r\n            <span className='disclaimer-info'>DISCLAIMER: </span>\r\n            This is a developers&apos; preview Wallet. It should be used for\r\n            NEAR Protocol DevNet only. Learn more at{' '}\r\n            <a href='http://nearprotocol.com'>nearprotocol.com</a>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </DisclaimerGrid>\r\n)\r\n\r\nexport default Disclaimer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Grid, Header } from 'semantic-ui-react'\r\nimport { parse } from 'query-string'\r\n\r\nimport Disclaimer from '../common/Disclaimer'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&&& {\r\n      .page-title {\r\n         padding-right: 0px;\r\n         padding-top: 48px;\r\n         padding-bottom: 0px;\r\n\r\n         .column {\r\n            padding: 0 14px 48px 0;\r\n         }\r\n         h1 {\r\n            line-height: 48px;\r\n         }\r\n         h2 {\r\n            color: #4a4f54 !important;\r\n         }\r\n      }\r\n      \r\n      @media screen and (max-width: 767px) {\r\n         .page-title {\r\n            padding-top: 14px;\r\n            text-align: center;\r\n\r\n            .column {\r\n               padding: 0 0 6px 0;\r\n            }\r\n            h1 {\r\n               margin-bottom: 0px;\r\n            }\r\n            h2 {\r\n               font-size: 16px !important;\r\n               line-height: 22px !important;\r\n               color: #999 !important;\r\n               padding-bottom: 24px;\r\n            }\r\n            .column.add {\r\n               text-align: left;\r\n               padding-top: 0px !important;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n`\r\n\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nconst AccountFormContainer = ({ location, title, text, children }) => (\r\n   <CustomContainer>\r\n      <Grid stackable>\r\n        <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column computer={9} tablet={8} mobile={16}>\r\n               <Header as='h1'>{title}</Header>\r\n               <Header as='h2'>{text}</Header>\r\n               {location && parse(location.search).reset_accounts && (\r\n                  <Header as='h3' className='color-blue'>\r\n                     You have been redirected to this page because we had to reset the developer accounts. Please create a new account. We apologize for the inconveience.\r\n                  </Header>\r\n               )}\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n\r\n      <Disclaimer />\r\n   </CustomContainer>\r\n)\r\n\r\nAccountFormContainer.propTypes = {\r\n   location: PropTypes.object,\r\n   title: PropTypes.string,\r\n   text: PropTypes.string,\r\n   children: PropTypes.element,\r\n}\r\n\r\nexport default AccountFormContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport CreateAccountForm from './CreateAccountForm'\r\nimport AccountFormSection from './AccountFormSection'\r\nimport AccountFormContainer from './AccountFormContainer'\r\nimport { checkNewAccount, createNewAccount, clear } from '../../actions/account'\r\n\r\nclass CreateAccount extends Component {\r\n   state = {\r\n      loader: false,\r\n      accountId: ''\r\n   }\r\n\r\n   componentDidMount = () => {}\r\n\r\n   componentWillUnmount = () => {\r\n      this.props.clear()\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value\r\n      }))\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      const { accountId } = this.state\r\n\r\n      this.props.createNewAccount(accountId).then(({ error }) => {\r\n         if (error) return\r\n\r\n         let nextUrl = `/set-recovery/${accountId}`\r\n         setTimeout(() => {\r\n            this.props.history.push(nextUrl)\r\n         }, 200)\r\n      })\r\n      .finally(() => {\r\n         this.setState(() => ({\r\n            loader: false\r\n         }))\r\n      })\r\n   }\r\n\r\n   handleRecaptcha = value => {\r\n      console.log(value)\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n      const { requestStatus, formLoader } = this.props\r\n\r\n      return (\r\n         <AccountFormContainer \r\n            location={this.props.location}\r\n            title='Create Account'\r\n            text='Creating a NEAR account is easy. Just choose a username and you’re ready to go.'\r\n         >\r\n            <AccountFormSection \r\n               requestStatus={this.props.requestStatus}\r\n               handleSubmit={this.handleSubmit}\r\n               location={this.props.location}\r\n            >\r\n               <CreateAccountForm\r\n                  loader={loader} \r\n                  requestStatus={requestStatus}\r\n                  formLoader={formLoader}\r\n                  handleRecaptcha={this.handleRecaptcha}\r\n                  handleChange={this.handleChange}\r\n               />\r\n            </AccountFormSection>\r\n         </AccountFormContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   checkNewAccount,\r\n   createNewAccount,\r\n   clear\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   ...account\r\n})\r\n\r\nexport const CreateAccountWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(CreateAccount)\r\n","import React from 'react'\r\nimport { Segment } from 'semantic-ui-react'\r\n\r\nimport FormButton from '../common/FormButton'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomSegment = styled(Segment)`\r\n   &&& {\r\n      padding: 20px 0 0 0;\r\n      color: #24272a;\r\n      border-top: 4px solid #f8f8f8 !important;\r\n      margin-top: 48px;\r\n      line-height: 24px;\r\n   }\r\n`\r\n\r\nconst AccountSkipThisStep = ({ skipRecoverySetup }) => (\r\n   <CustomSegment basic>\r\n      <span className='font-bold'>Skip this step</span> if you want to backup your account keys manually. However, skipping this will make it impossible for us to assist you with account recovery in the future. \r\n      <FormButton\r\n         onClick={skipRecoverySetup}\r\n         color='link'\r\n      >\r\n         I choose to backup my account manually\r\n      </FormButton>\r\n   </CustomSegment>\r\n)\r\n\r\nexport default AccountSkipThisStep\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Header, Input } from 'semantic-ui-react'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nimport FormButton from '../common/FormButton'\r\nimport AccountSkipThisStep from '../common/AccountSkipThisStep'\r\n\r\nconst SetRecoveryInfoForm = ({\r\n   loader,\r\n   formLoader,\r\n   phoneNumber,\r\n   sentSms,\r\n   isLegit,\r\n   requestStatus,\r\n   handleChange,\r\n   skipRecoverySetup\r\n}) => (\r\n   <Fragment>\r\n      {!sentSms && (\r\n         <Fragment>\r\n            <Header as='h3'>Phone Number</Header>\r\n            <PhoneInput\r\n               className={`create ${\r\n                  requestStatus\r\n                     ? requestStatus.success\r\n                        ? 'success'\r\n                        : 'problem'\r\n                     : ''\r\n               } ${formLoader ? 'loading' : ''}`}\r\n               name='phoneNumber'\r\n               value={phoneNumber}\r\n               onChange={value =>\r\n                  handleChange(null, { name: 'phoneNumber', value })\r\n               }\r\n               placeholder='example: +1 555 123 4567'\r\n               required\r\n            />\r\n         </Fragment>\r\n      )}\r\n\r\n      {sentSms && (\r\n         <Fragment>\r\n            <Header as='h3'>Security Code from SMS</Header>\r\n            <Input\r\n               name='securityCode'\r\n               onChange={handleChange}\r\n               placeholder='example: 123456'\r\n            />\r\n\r\n         </Fragment>\r\n      )}\r\n\r\n      <FormButton\r\n         type='submit'\r\n         color='blue'\r\n         disabled={!isLegit}\r\n         sending={loader}\r\n      >\r\n         PROTECT ACCOUNT\r\n      </FormButton>\r\n\r\n      <AccountSkipThisStep skipRecoverySetup={skipRecoverySetup} />\r\n   </Fragment>\r\n)\r\n\r\nSetRecoveryInfoForm.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   formLoader: PropTypes.bool.isRequired,\r\n   phoneNumber: PropTypes.string,\r\n   sentSms: PropTypes.bool,\r\n   isLegitForm: PropTypes.func,\r\n   requestStatus: PropTypes.object,\r\n   handleChange: PropTypes.func.isRequired,\r\n   skipRecoverySetup: PropTypes.func,\r\n}\r\n\r\nexport default SetRecoveryInfoForm\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { isValidPhoneNumber } from 'react-phone-number-input'\r\n\r\nimport AccountFormSection from './AccountFormSection'\r\nimport AccountFormContainer from './AccountFormContainer'\r\nimport SetRecoveryInfoForm from './SetRecoveryInfoForm'\r\nimport { requestCode, setupAccountRecovery, redirectToApp, clear } from '../../actions/account';\r\n\r\nclass SetRecoveryInfo extends Component {\r\n   state = {\r\n      loader: false,\r\n      phoneNumber: '',\r\n      isLegit: false,\r\n   }\r\n\r\n   componentDidMount = () => {}\r\n\r\n   componentWillUnmount = () => {\r\n      this.props.clear()\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         isLegit: this.isLegitField(name, value)\r\n      }))\r\n   }\r\n\r\n   isLegitField(name, value) {\r\n      // TODO: Use some validation framework?\r\n      let validators = {\r\n         phoneNumber: isValidPhoneNumber,\r\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\r\n      }\r\n      return validators[name](value);\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.state.isLegit) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      if (!this.props.sentSms) {\r\n         this.props.requestCode(this.state.phoneNumber, this.props.accountId)\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  loader: false\r\n               }))\r\n            })\r\n      } else {\r\n         this.props.setupAccountRecovery(this.state.phoneNumber, this.props.accountId, this.state.securityCode)\r\n            .then(({error}) => {\r\n               if (error) return\r\n\r\n               this.props.redirectToApp()\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  loader: false\r\n               }))\r\n            })\r\n      }\r\n   }\r\n\r\n   skipRecoverySetup = e => {\r\n      e.preventDefault()\r\n      this.props.redirectToApp()\r\n   }\r\n\r\n   render() {\r\n      const combinedState = {\r\n         ...this.props,\r\n         ...this.state,\r\n         isLegit: this.state.isLegit && !this.props.formLoader\r\n      }\r\n      return (\r\n         <AccountFormContainer \r\n            title='Protect your Account'\r\n            text='Enter your phone number to make your account easy for you to recover in the future.'\r\n         >\r\n            <AccountFormSection handleSubmit={this.handleSubmit} requestStatus={this.props.requestStatus}>\r\n               <SetRecoveryInfoForm\r\n                  {...combinedState}\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleChange={this.handleChange}\r\n                  skipRecoverySetup={this.skipRecoverySetup}\r\n               />\r\n            </AccountFormSection>\r\n         </AccountFormContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   requestCode,\r\n   setupAccountRecovery,\r\n   redirectToApp,\r\n   clear\r\n}\r\n\r\nconst mapStateToProps = ({ account }, { match }) => ({\r\n   ...account,\r\n   accountId: match.params.accountId\r\n})\r\n\r\nexport const SetRecoveryInfoWithRouter = connect(mapStateToProps, mapDispatchToProps)(SetRecoveryInfo)\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Input, Header } from 'semantic-ui-react'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nimport FormButton from '../common/FormButton'\r\nimport AccountFormAccountId from './AccountFormAccountId'\r\n\r\nconst RecoverAccountForm = ({\r\n   loader,\r\n   formLoader,\r\n   phoneNumber,\r\n   sentSms,\r\n   requestStatus,\r\n   handleChange,\r\n   isLegitForm\r\n}) => (\r\n   <Fragment>\r\n      <Header as='h3'>Username</Header>\r\n      <AccountFormAccountId\r\n         formLoader={formLoader}\r\n         handleChange={handleChange}\r\n      />\r\n\r\n      {!sentSms && (\r\n         <Fragment>\r\n            <Header as='h3'>Phone Number</Header>\r\n            <PhoneInput\r\n               className={`create ${\r\n                  requestStatus\r\n                     ? requestStatus.success\r\n                        ? 'success'\r\n                        : 'problem'\r\n                     : ''\r\n               } ${formLoader ? 'loading' : ''}`}\r\n               name='phoneNumber'\r\n               value={phoneNumber}\r\n               onChange={value =>\r\n                  handleChange(null, { name: 'phoneNumber', value })\r\n               }\r\n               placeholder='example: +1 555 123 4567'\r\n               required\r\n            />\r\n         </Fragment>\r\n      )}\r\n\r\n      {sentSms && (\r\n         <Fragment>\r\n            <Header as='h3'>Security Code from SMS</Header>\r\n            <Input\r\n               name='securityCode'\r\n               onChange={handleChange}\r\n               placeholder='example: 123456'\r\n               required\r\n            />\r\n         </Fragment>\r\n      )}\r\n\r\n      <FormButton\r\n         type='submit'\r\n         color='blue'\r\n         disabled={!isLegitForm()}\r\n         sending={loader}\r\n      >\r\n         FIND MY ACCOUNT\r\n      </FormButton>\r\n   </Fragment>\r\n)\r\n\r\nRecoverAccountForm.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   formLoader: PropTypes.bool.isRequired,\r\n   phoneNumber: PropTypes.string,\r\n   sentSms: PropTypes.bool,\r\n   requestStatus: PropTypes.object,\r\n   handleChange: PropTypes.func.isRequired,\r\n   isLegitForm: PropTypes.func,\r\n}\r\n\r\nexport default RecoverAccountForm\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { isValidPhoneNumber } from 'react-phone-number-input'\r\n\r\nimport { requestCode, recoverAccount, redirectToApp, checkAccountAvailable, clear } from '../../actions/account'\r\n\r\nimport RecoverAccountForm from './RecoverAccountForm'\r\nimport AccountFormSection from './AccountFormSection'\r\nimport AccountFormContainer from './AccountFormContainer'\r\n\r\nclass RecoverAccount extends Component {\r\n   state = {\r\n      loader: false,\r\n      accountId: '',\r\n      phoneNumber: '',\r\n      isLegit: false,\r\n   }\r\n\r\n   componentDidMount = () => {}\r\n\r\n   componentWillUnmount = () => {\r\n      this.props.clear()\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState((state) => ({\r\n         [name]: value,\r\n         isLegit: name === 'accountId' ? state.isLegit : this.isLegitField(name, value)\r\n      }))\r\n   }\r\n\r\n   isLegitField(name, value) {\r\n      // TODO: Use some validation framework?\r\n      let validators = {\r\n         phoneNumber: isValidPhoneNumber,\r\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\r\n      }\r\n      return validators[name](value);\r\n   }\r\n\r\n   isLegitForm = () => this.props.requestStatus && this.props.requestStatus.success && this.state.isLegit\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.isLegitForm()) {\r\n         return false\r\n      }\r\n      \r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      const accountId = this.state.accountId // || this.props.accountId;\r\n      if (!this.props.sentSms) {\r\n         this.props.requestCode(this.state.phoneNumber, accountId)\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  loader: false\r\n               }))\r\n            })\r\n      } else {\r\n         this.props.recoverAccount(this.state.phoneNumber, accountId, this.state.securityCode)\r\n            .then(({ error }) => {\r\n               if (error) return;\r\n               this.props.redirectToApp()\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  loader: false\r\n               }))\r\n            })\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const combinedState = {\r\n         ...this.props,\r\n         ...this.state,\r\n         isLegit: this.state.isLegit && !this.props.formLoader\r\n      }\r\n\r\n      return (\r\n         <AccountFormContainer \r\n            title='Find your Account'\r\n            text='Enter your information associated with the account and we will send a recovery code.'\r\n         >\r\n            <AccountFormSection requestStatus={this.props.requestStatus} handleSubmit={this.handleSubmit.bind(this)}>\r\n               <RecoverAccountForm\r\n                  {...combinedState}\r\n                  handleChange={this.handleChange}\r\n                  isLegitForm={this.isLegitForm}\r\n               />\r\n            </AccountFormSection>\r\n         </AccountFormContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   requestCode, \r\n   recoverAccount, \r\n   redirectToApp,\r\n   checkAccountAvailable,\r\n   clear\r\n}\r\n\r\nconst mapStateToProps = ({ account }, { match }) => ({\r\n   ...account,\r\n})\r\n\r\nexport const RecoverAccountWithRouter = connect(\r\n   mapStateToProps, \r\n   mapDispatchToProps\r\n)(RecoverAccount)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport MainImage from '../common/MainImage'\r\n\r\nimport {\r\n   Container,\r\n   Loader,\r\n   Grid,\r\n   Dimmer,\r\n   Image,\r\n   List,\r\n   Segment\r\n} from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\nimport DenyImage from '../../images/icon-deny.svg'\r\nimport AppDefaultImage from '../../images/icon-app-default.svg'\r\nimport AuthorizeImage from '../../images/icon-authorize.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   && .title {\r\n      padding-top: 40px;\r\n   }\r\n\r\n   && .contract {\r\n      padding-bottom: 40px;\r\n   }\r\n\r\n   &&& .authorize {\r\n      margin-top: 40px;\r\n\r\n      .md {\r\n         > img {\r\n            margin-top: -40px;\r\n            padding: 0 24px;\r\n         }\r\n      }\r\n   }\r\n\r\n   && .cont {\r\n      background: #f8f8f8;\r\n      padding: 16px 0px;\r\n\r\n      > div {\r\n         padding: 20px 0 20px 50px;\r\n      }\r\n      img {\r\n         height: 24px;\r\n         margin-right: 6px;\r\n      }\r\n      div.item {\r\n         padding-top: 24px;\r\n\r\n         .content {\r\n            line-height: 24px;\r\n         }\r\n      }\r\n   }\r\n\r\n   .list-item {\r\n      background: url(${CheckBlueImage}) no-repeat left 24px;\r\n      background-size: 24px 24px;\r\n\r\n      > .content {\r\n         padding-left: 32px;\r\n      }\r\n   }\r\n\r\n   .list-item-deny {\r\n      background: url(${DenyImage}) no-repeat left 24px;\r\n      background-size: 24px 24px;\r\n\r\n      > .content {\r\n         padding-left: 32px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      && .cont {\r\n         > div {\r\n            padding: 20px 0 20px 20px;\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && .title {\r\n         padding-top: 0px;\r\n\r\n         h2 {\r\n            font-size: 18px !important;\r\n            line-height: 24px !important;\r\n         }\r\n      }\r\n\r\n      && .contract {\r\n         padding-top: 0px;\r\n         padding-bottom: 20px;\r\n      }\r\n\r\n      && .cont {\r\n         > div {\r\n            border: 0px;\r\n            padding: 10px 0 10px 0;\r\n\r\n            h3 {\r\n               font-size: 14px !important;\r\n            }\r\n         }\r\n\r\n         div.item {\r\n            padding-top: 24px;\r\n\r\n            .content {\r\n               font-size: 12px;\r\n               line-height: 26px;\r\n            }\r\n         }\r\n      }\r\n\r\n      &&& .authorize {\r\n         margin-top: 20px;\r\n      }\r\n   }\r\n`\r\n\r\nconst LoginContainer = ({ loader, children, appTitle }) => (\r\n   <CustomContainer>\r\n      <Dimmer.Dimmable as={Segment} basic>\r\n         <Grid>\r\n            <Dimmer inverted active={loader}>\r\n               <Loader />\r\n            </Dimmer>\r\n\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  <List horizontal className='authorize'>\r\n                     <List.Item>\r\n                        <MainImage\r\n                           src={AccountGreyImage} \r\n                           size='big'\r\n                        />\r\n                     </List.Item>\r\n                     <List.Item className='md'>\r\n                        <Image src={AuthorizeImage} />\r\n                     </List.Item>\r\n                     <List.Item>\r\n                        <MainImage\r\n                           src={AppDefaultImage} \r\n                           size='big'\r\n                        />\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row className='title'>\r\n               <Grid.Column\r\n                  as='h2'\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  <span className='font-bold'>{appTitle} </span> is requesting\r\n                  to use your NEAR account.\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row className='contract'>\r\n               <Grid.Column\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  Contract: @contractname.near\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  largeScreen={2}\r\n                  computer={1}\r\n                  mobile={16}\r\n                  only='large screen computer mobile'\r\n               />\r\n               <Grid.Column\r\n                  largeScreen={6}\r\n                  computer={7}\r\n                  tablet={8}\r\n                  mobile={8}\r\n                  className='cont'\r\n               >\r\n                  <List className='border-right-light'>\r\n                     <List.Item as='h3'>This allows:</List.Item>\r\n                     <List.Item className='list-item'>\r\n                        <List.Content className='color-black'>\r\n                           View your Account Name\r\n                        </List.Content>\r\n                     </List.Item>\r\n                     <List.Item className='list-item'>\r\n                        <List.Content className='color-black'>\r\n                           Write Chat messages with your name\r\n                        </List.Content>\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  largeScreen={6}\r\n                  computer={7}\r\n                  tablet={8}\r\n                  mobile={8}\r\n                  className='cont'\r\n               >\r\n                  <List>\r\n                     <List.Item as='h3'>Does not allow:</List.Item>\r\n                     <List.Item className='list-item-deny'>\r\n                        <List.Content className='color-black'>\r\n                           View your private account details\r\n                        </List.Content>\r\n                     </List.Item>\r\n                     <List.Item className='list-item-deny'>\r\n                        <List.Content className='color-black'>\r\n                           Buy, Sell, or Transfer on your behalf\r\n                        </List.Content>\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  largeScreen={2}\r\n                  computer={1}\r\n                  mobile={16}\r\n                  only='large screen computer mobile'\r\n               />\r\n            </Grid.Row>\r\n         </Grid>\r\n\r\n         {children}\r\n      </Dimmer.Dimmable>\r\n   </CustomContainer>\r\n)\r\n\r\nLoginContainer.propTypes = {\r\n   loader: PropTypes.bool,\r\n   children: PropTypes.element,\r\n   appTitle: PropTypes.string\r\n}\r\n\r\nexport default LoginContainer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, Segment, List, Form } from 'semantic-ui-react'\r\n\r\nimport FormButton from '../common/FormButton'\r\n\r\nimport AddBlueImage from '../../images/icon-add-blue.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\nimport ArrowUpImage from '../../images/icon-arrow-up.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& button {\r\n      width: 190px;\r\n      margin-top: 0px;\r\n      float: right;\r\n\r\n      :first-of-type {\r\n         float: left;\r\n      }\r\n   }\r\n\r\n   .segment {\r\n      width: 100%;\r\n      padding: 0px;\r\n      margin: 0px;\r\n   }\r\n\r\n   .dropdown-list {\r\n      width: 100%;\r\n      position: relative;\r\n      cursor: pointer;\r\n\r\n      .element {\r\n         width: 100%;\r\n         min-height: 64px;\r\n         border: solid 4px #24272a;\r\n         margin: 0px;\r\n         padding: 0px;\r\n\r\n         background: #fff;\r\n\r\n         :hover {\r\n            background: #f8f8f8;\r\n         }\r\n         .img {\r\n            float: left;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-color: #d8d8d8;\r\n            background-image: url(${AccountGreyImage});\r\n            background-position: center center;\r\n            background-repeat: no-repeat;\r\n            background-size: 36px 36px;\r\n         }\r\n         .name {\r\n            margin-top: 12px;\r\n            margin-left: 18px;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n            flex: 1;\r\n         }\r\n         .arrow {\r\n            float: right;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-image: url(${ArrowDownImage});\r\n            background-repeat: no-repeat;\r\n            background-position: center center;\r\n            background-size: 24px auto;\r\n\r\n            &.up {\r\n               background-image: url(${ArrowUpImage});\r\n            }\r\n         }\r\n      }\r\n      .trigger {\r\n         display: flex;\r\n      }\r\n      .dropdown {\r\n         .element {\r\n            margin-top: -4px;\r\n            display: flex;\r\n         }\r\n      }\r\n      .create-account {\r\n         width: 100%;\r\n         min-height: 64px;\r\n         border: solid 4px #24272a;\r\n         margin: 0px;\r\n         padding: 0px;\r\n         cursor: pointer;\r\n\r\n         background: #24272a;\r\n\r\n         :hover {\r\n         }\r\n         .img {\r\n            float: left;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-image: url(${AddBlueImage});\r\n            background-position: center center;\r\n            background-repeat: no-repeat;\r\n            background-size: 24px 24px;\r\n         }\r\n         .name {\r\n            float: left;\r\n            margin-top: 12px;\r\n            margin-left: 18px;\r\n         }\r\n         .arrow {\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         button,\r\n         .deny {\r\n            width: 140px;\r\n            border-radius: 35px;\r\n         }\r\n\r\n         .buttons,\r\n         .dropdown {\r\n            .column {\r\n               padding: 0px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst LoginForm = ({\r\n   dropdown,\r\n   account,\r\n   handleOnClick,\r\n   handleDeny,\r\n   handleAllow,\r\n   handleSelectAccount,\r\n   redirectCreateAccount,\r\n   buttonLoader\r\n}) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='dropdown'>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\r\n            <Segment className='dropdown-list' onClick={handleOnClick} basic>\r\n               <List verticalAlign='middle' className={`element trigger`}>\r\n                  <List.Item className='img' />\r\n                  <List.Item as='h3' className='name'>\r\n                     @{account.accountId}\r\n                  </List.Item>\r\n                  <List.Item className={`arrow ${dropdown ? 'up' : ''}`} />\r\n               </List>\r\n\r\n               <Segment basic className={`dropdown ${dropdown ? '' : 'hide'}`}>\r\n                  {Object.keys(account.accounts)\r\n                     .filter(a => a !== account.accountId)\r\n                     .map((account, i) => (\r\n                        <List\r\n                           key={`lf-${i}`}\r\n                           onClick={() => handleSelectAccount(account)}\r\n                           className='element'\r\n                        >\r\n                           <List.Item className='img' />\r\n                           <List.Item as='h3' className='name'>\r\n                              @{account}\r\n                           </List.Item>\r\n                        </List>\r\n                     ))}\r\n                  <List\r\n                     onClick={redirectCreateAccount}\r\n                     className='create-account'\r\n                  >\r\n                     <List.Item className='img' />\r\n                     <List.Item className='h3 name color-seafoam-blue'>\r\n                        Create New Account\r\n                     </List.Item>\r\n                  </List>\r\n               </Segment>\r\n            </Segment>\r\n         </Grid.Column>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n      </Grid.Row>\r\n      <Grid.Row className={`buttons ${dropdown ? 'hide' : ''}`}>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\r\n            <Form onSubmit={handleAllow}>\r\n               <input\r\n                  type='hidden'\r\n                  name='accountId'\r\n                  value={account.accountId}\r\n               />\r\n\r\n               <FormButton\r\n                  color='gray-white'\r\n                  onClick={handleDeny}\r\n               >\r\n                  DENY\r\n               </FormButton>\r\n\r\n               <FormButton\r\n                  type='submit'\r\n                  color='blue'\r\n                  sending={buttonLoader}\r\n               >\r\n                  ALLOW\r\n               </FormButton>\r\n            </Form>\r\n         </Grid.Column>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nLoginForm.propTypes = {\r\n   dropdown: PropTypes.bool.isRequired,\r\n   handleOnClick: PropTypes.func.isRequired,\r\n   handleDeny: PropTypes.func.isRequired,\r\n   handleSelectAccount: PropTypes.func.isRequired,\r\n   redirectCreateAccount: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(mapStateToProps)(LoginForm)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport LoginContainer from './LoginContainer'\r\nimport LoginForm from './LoginForm'\r\nimport { handleRefreshAccount, handleRefreshUrl, switchAccount, addAccessKey, clearAlert } from '../../actions/account'\r\n\r\nclass Login extends Component {\r\n   state = {\r\n      buttonLoader: false,\r\n      dropdown: false\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.props.history)\r\n   }\r\n\r\n   componentWillUnmount = () => {\r\n      this.props.clearAlert()\r\n   }\r\n\r\n   handleOnClick = () => {\r\n      this.setState({\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handleDeny = e => {\r\n      e.preventDefault();\r\n      if (this.props.account.url.failure_url) {\r\n         window.location.href = this.props.account.url.failure_url\r\n      }\r\n   }\r\n\r\n   handleAllow = () => {\r\n      this.setState(() => ({\r\n         buttonLoader: true\r\n      }))\r\n\r\n      this.props.addAccessKey(this.props.account.accountId, this.props.account.url.contract_id, this.props.account.url.public_key, this.props.account.url.success_url, this.props.account.url.app_title)\r\n         .then(({ error }) => {\r\n            if (error) return\r\n\r\n            let nextUrl = `/authorized-apps`\r\n            setTimeout(() => {\r\n               this.props.history.push(nextUrl)\r\n            }, 1500)\r\n         })\r\n         .finally(() => {\r\n            this.setState(() => ({\r\n               buttonLoader: false\r\n            }))\r\n         })\r\n   }\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.props.switchAccount(accountId)\r\n      this.props.handleRefreshAccount(this.props.history)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <LoginContainer\r\n            loader={account.loader}\r\n            appTitle={account.url && account.url.app_title}\r\n         >\r\n            {account.accountId && (\r\n               <LoginForm\r\n                  {...this.state}\r\n                  handleOnClick={this.handleOnClick}\r\n                  handleDeny={this.handleDeny}\r\n                  handleAllow={this.handleAllow}\r\n                  handleSelectAccount={this.handleSelectAccount}\r\n                  redirectCreateAccount={this.redirectCreateAccount}\r\n               />\r\n            )}\r\n         </LoginContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl,\r\n   switchAccount,\r\n   addAccessKey,\r\n   clearAlert\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const LoginWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Login))\r\n","import React from 'react'\r\n\r\nimport MainImage from '../common/MainImage'\r\n\r\nimport { List, Button } from 'semantic-ui-react'\r\n\r\nconst AuthorizedAppsDeauthorize = ({ showSubData, handleDeauthorize }) => (\r\n   <List>\r\n      <List.Item>\r\n         <List horizontal className='title'>\r\n            <List.Item className='image'>\r\n               <MainImage \r\n                  src={showSubData[0]} \r\n                  size='big'\r\n               />\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Header as='h2'>\r\n                  {showSubData[1]}\r\n               </List.Header>\r\n               <List.Item as='h5' className='color-blue'>\r\n                  <span className='color-black'>\r\n                     amount:\r\n                  </span>\r\n                  {showSubData[2]}Ⓝ\r\n               </List.Item>\r\n            </List.Item>\r\n         </List>\r\n      </List.Item>\r\n      <List.Item className='remove-connection'>\r\n         <Button onClick={handleDeauthorize}>\r\n            DEAUTHORIZE\r\n         </Button>\r\n      </List.Item>\r\n      {false && (\r\n         <List.Item className='authorized-transactions'>\r\n            <List.Item\r\n               as='h6'\r\n               className='authorized-transactions-title border-top'\r\n            >\r\n               AUTHORIZED TO\r\n            </List.Item>\r\n            <List.Item className='authorized-transactions-row color-black'>\r\n               View your Account Name\r\n            </List.Item>\r\n            <List.Item className='authorized-transactions-row color-black'>\r\n               Do something else on your behalf\r\n            </List.Item>\r\n         </List.Item>\r\n      )}\r\n      {false && (\r\n         <List.Item className='recent-transactions'>\r\n            <List.Item\r\n               as='h6'\r\n               className='recent-transactions-title border-top'\r\n            >\r\n               RECENT TRANSACTIONS\r\n            </List.Item>\r\n            <List.Item className='recent-transactions-row border-top'>\r\n               <List.Header>\r\n                  Another thing here\r\n               </List.Header>\r\n               <List.Item>3h ago</List.Item>\r\n            </List.Item>\r\n            <List.Item className='recent-transactions-row border-top'>\r\n               <List.Header>\r\n                  Another Thing Happened\r\n               </List.Header>\r\n               <List.Item>3d ago</List.Item>\r\n            </List.Item>\r\n            <List.Item className='recent-transactions-row border-top'>\r\n               <List.Header>\r\n                  In-app purchase: 20 Ⓝ\r\n               </List.Header>\r\n               <List.Item>1w ago</List.Item>\r\n            </List.Item>\r\n            <List.Item className='recent-transactions-row border-top'>\r\n               <List.Header>Staked: 10 Ⓝ</List.Header>\r\n               <List.Item>2w ago</List.Item>\r\n            </List.Item>\r\n            <List.Item className='recent-transactions-row border-top'>\r\n               <List.Header>Authorized</List.Header>\r\n               <List.Item>2w ago</List.Item>\r\n            </List.Item>\r\n         </List.Item>\r\n      )}\r\n   </List>\r\n)\r\n\r\nexport default AuthorizedAppsDeauthorize\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MainImage from '../common/MainImage'\r\n\r\nimport { List, Button } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nconst ContactsRemove = () => (\r\n   <List>\r\n      <List.Item>\r\n         <List horizontal className='title'>\r\n            <List.Item>\r\n               <MainImage \r\n                  src={AccountGreyImage} \r\n                  size='medium'\r\n               />\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Header as='h2'>\r\n                  Alex Skidanov\r\n               </List.Header>\r\n               <List.Item as='h5'>@alex.near</List.Item>\r\n            </List.Item>\r\n         </List>\r\n      </List.Item>\r\n      <List.Item className='remove-connection'>\r\n         <Button>REMOVE CONNECTION</Button>\r\n      </List.Item>\r\n      <List.Item className='recent-transactions'>\r\n         <List.Item\r\n            as='h6'\r\n            className='recent-transactions-title border-top'\r\n         >\r\n            RECENT TRANSACTIONS\r\n         </List.Item>\r\n         <List.Item className='recent-transactions-row border-top'>\r\n            <List.Header>You sent 20 Ⓝ</List.Header>\r\n            <List.Item>3h ago</List.Item>\r\n         </List.Item>\r\n         <List.Item className='recent-transactions-row border-top'>\r\n            <List.Header>Alex sent you 1020 Ⓝ</List.Header>\r\n            <List.Item>3d ago</List.Item>\r\n         </List.Item>\r\n         <List.Item className='recent-transactions-row border-top'>\r\n            <List.Header>\r\n               You and Alex played NEAR Chess\r\n            </List.Header>\r\n            <List.Item>1w ago</List.Item>\r\n         </List.Item>\r\n      </List.Item>\r\n      <List.Item className='send-money border-top'>\r\n         <Button as={Link} to='/send-money/marcin'>\r\n            SEND MONEY\r\n         </Button>\r\n      </List.Item>\r\n   </List>\r\n)\r\n\r\nexport default ContactsRemove\r\n","import React from 'react'\r\n\r\nimport AuthorizedAppsDeauthorize from '../authorized-apps/AuthorizedAppsDeauthorize'\r\nimport ContactsRemove from '../contacts/ContactsRemove'\r\n\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nimport CloseImage from '../../images/icon-close.svg'\r\nimport MTransactionImage from '../../images/icon-m-transaction.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      height: 100%;\r\n      padding: 0 0;\r\n\r\n      > .item {\r\n         padding: 18px 20px;\r\n      }\r\n      .img {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 20px;\r\n         right: 20px;\r\n         padding: 0px;\r\n\r\n         img {\r\n            cursor: pointer;\r\n         }\r\n      }\r\n      .text {\r\n         margin: 0 10% 0 0;\r\n         color: #24272a;\r\n         float: left;\r\n\r\n         .header {\r\n            font-family: 'benton-sans', sans-serif;\r\n         }\r\n         .content {\r\n            color: #999999;\r\n            padding-top: 12px;\r\n            line-height: 20px;\r\n         }\r\n      }\r\n      .remove-connection {\r\n         > button {\r\n            width: 100%;\r\n            background-color: #ff585d;\r\n            border: 2px solid #ff585d;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n            margin-top: 12px;\r\n\r\n            :hover {\r\n               background: #fff;\r\n               color: #ff585d;\r\n            }\r\n         }\r\n      }\r\n      .recent-transactions {\r\n         background-color: #f8f8f8;\r\n         margin: 0 0 0 0;\r\n      }\r\n      .recent-transactions-title {\r\n         padding: 0 0 0 24px;\r\n         background: url(${MTransactionImage}) no-repeat left 2px;\r\n         background-size: 12px auto;\r\n      }\r\n      .recent-transactions-row {\r\n         margin: 0 0 0 24px;\r\n         padding: 12px 0;\r\n         border-bottom: 2px solid #e6e6e6;\r\n      }\r\n      .recent-transactions-row:last-child {\r\n         border-bottom: 0px solid #e6e6e6;\r\n      }\r\n      .authorized-transactions {\r\n         background-color: #fff;\r\n         margin: 0 0 0 0;\r\n         padding-top: 0px;\r\n      }\r\n      .authorized-transactions-title {\r\n         padding: 12px 0 0 24px;\r\n         background: url(${MTransactionImage}) no-repeat left 14px;\r\n         background-size: 12px auto;\r\n      }\r\n      .authorized-transactions-row {\r\n         margin: 0 0 0 24px;\r\n         padding: 12px 0 0 32px;\r\n         background: url(${CheckBlueImage}) no-repeat left 14px;\r\n         line-height: 32px;\r\n      }\r\n      .authorized-transactions-row:last-child {\r\n         border-bottom: 0px solid #e6e6e6;\r\n      }\r\n      .send-money {\r\n         > .button {\r\n            width: 100%;\r\n            background-color: #5ace84;\r\n            border: 2px solid #5ace84;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               background-color: #fff;\r\n               color: #5ace84;\r\n            }\r\n         }\r\n      }\r\n      @media screen and (max-width: 991px) {\r\n         .img {\r\n            top: 6px;\r\n            right: 6px;\r\n         }\r\n         .title {\r\n            .item {\r\n               margin-left: 0;\r\n               text-align: center;\r\n            }\r\n         }\r\n         .image {\r\n            width: 100%;\r\n\r\n            > div {\r\n               margin: 0 auto;\r\n            }\r\n         }\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         border: 0px;\r\n         position: absolute;\r\n         min-height: 300px;\r\n         top: -80px;\r\n\r\n         .img {\r\n            top: 0;\r\n            right: 2px;\r\n         }\r\n         > .item {\r\n            padding: 0px;\r\n\r\n            h2 {\r\n               font-size: 40px !important;\r\n            }\r\n            > .list {\r\n               padding: 0;\r\n            }\r\n            .title {\r\n               width: 100%;\r\n               padding-bottom: 12px;\r\n               \r\n               > .item {\r\n                  width: 100%;\r\n                  text-align: center;\r\n                  margin-left: 0;\r\n               }\r\n               .image {\r\n                  > div {\r\n                     margin: 0 auto;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n         .remove-connection {\r\n            padding-top: 12px;\r\n            border-top: 4px solid #e6e6e6;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst PaginationShowSubBox = ({ toggleCloseSub, subPage, showSubData, handleDeauthorize }) => (\r\n   <CustomList className='box'>\r\n      <List.Item className='img'>\r\n         <Image\r\n            onClick={() => toggleCloseSub()}\r\n            src={CloseImage}\r\n         />\r\n      </List.Item>\r\n      <List.Item>\r\n         {subPage === 'authorized-apps' && showSubData ? (\r\n            <AuthorizedAppsDeauthorize \r\n               showSubData={showSubData}\r\n               handleDeauthorize={handleDeauthorize}\r\n            />\r\n         ) : (\r\n            <ContactsRemove\r\n               showSubData={showSubData}\r\n               handleDeauthorize={handleDeauthorize}\r\n            />\r\n         )}\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default PaginationShowSubBox\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Image, List } from 'semantic-ui-react'\r\n\r\nimport ArrowLeftImage from '../../images/icon-arrow-left.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationTabList = styled(List)`\r\n   .ui.button {\r\n      background: #f8f8f8;\r\n      color: #0072ce;\r\n      height: 36px;\r\n      font-weight: 500;\r\n      padding-left: 1em;\r\n      padding-right: 1em;\r\n\r\n      &.active {\r\n         background: #999999;\r\n         color: #ffffff;\r\n      }\r\n\r\n      :hover {\r\n         background: #999999;\r\n         color: #ffffff;\r\n      }\r\n   }\r\n\r\n   .ui.image {\r\n      width: 0.5em;\r\n      padding-bottom: 0px;\r\n   }\r\n`\r\n\r\nconst LEFT_PAGE = 'LEFT'\r\nconst RIGHT_PAGE = 'RIGHT'\r\n\r\nconst range = (from, to, step = 1) => {\r\n   let i = from\r\n   const range = []\r\n\r\n   while (i <= to) {\r\n      range.push(i)\r\n      i += step\r\n   }\r\n\r\n   return range\r\n}\r\n\r\nexport class PaginationTab extends Component {\r\n   static propTypes = {\r\n      totalRecords: PropTypes.number.isRequired,\r\n      pageLimit: PropTypes.number,\r\n      pageNeighbors: PropTypes.number,\r\n      onPageChanged: PropTypes.func,\r\n      initialPage: PropTypes.number.isRequired\r\n   }\r\n\r\n   static defaultProps = {\r\n      pageLimit: 10,\r\n      pageNeighbors: 1,\r\n      onPageChange: () => {},\r\n      initialPage: 0\r\n   }\r\n\r\n   state = {\r\n      currentPage: null\r\n   }\r\n\r\n   getTotalPages() {\r\n      return Math.ceil(this.props.totalRecords / this.props.pageLimit)\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ currentPage: this.props.initialPage + 1 })\r\n   }\r\n\r\n   gotoPage = page => {\r\n      const currentPage = this.props.onPageChanged(page) + 1\r\n      this.setState({ currentPage })\r\n   }\r\n\r\n   handleClick = (page, evt) => {\r\n      evt.preventDefault()\r\n      this.gotoPage(page)\r\n      evt.target.blur()\r\n   }\r\n\r\n   handleMoveLeft = evt => {\r\n      evt.preventDefault()\r\n      this.gotoPage(this.state.currentPage - this.props.pageNeighbors * 2 - 1)\r\n      evt.target.blur()\r\n   }\r\n\r\n   handleMoveRight = evt => {\r\n      evt.preventDefault()\r\n      this.gotoPage(this.state.currentPage + this.props.pageNeighbors * 2 + 1)\r\n      evt.target.blur()\r\n   }\r\n\r\n   fetchPageNumbers = () => {\r\n      const totalPages = this.getTotalPages()\r\n      const currentPage = this.state.currentPage\r\n      const pageNeighbors = this.props.pageNeighbors\r\n\r\n      const totalNumbers = pageNeighbors * 2 + 3\r\n      const totalBlocks = totalNumbers + 2\r\n\r\n      if (totalPages > totalBlocks) {\r\n         let pages = []\r\n\r\n         const leftBound = currentPage - pageNeighbors\r\n         const rightBound = currentPage + pageNeighbors\r\n         const beforeLastPage = totalPages - 1\r\n\r\n         const startPage = leftBound > 2 ? leftBound : 2\r\n         const endPage =\r\n            rightBound < beforeLastPage ? rightBound : beforeLastPage\r\n\r\n         pages = range(startPage, endPage)\r\n\r\n         const pagesCount = pages.length\r\n         const singleSpillOffset = totalNumbers - pagesCount - 1\r\n\r\n         const leftSpill = startPage > 2\r\n         const rightSpill = endPage < beforeLastPage\r\n\r\n         const leftSpillPage = LEFT_PAGE\r\n         const rightSpillPage = RIGHT_PAGE\r\n\r\n         if (leftSpill && !rightSpill) {\r\n            const extraPages = range(\r\n               startPage - singleSpillOffset,\r\n               startPage - 1\r\n            )\r\n            pages = [leftSpillPage, ...extraPages, ...pages]\r\n         } else if (!leftSpill && rightSpill) {\r\n            const extraPages = range(endPage + 1, endPage + singleSpillOffset)\r\n            pages = [...pages, ...extraPages, rightSpillPage]\r\n         } else if (leftSpill && rightSpill) {\r\n            pages = [leftSpillPage, ...pages, rightSpillPage]\r\n         }\r\n\r\n         return [1, ...pages, totalPages]\r\n      }\r\n\r\n      return range(1, totalPages)\r\n   }\r\n\r\n   render() {\r\n      if (!this.props.totalRecords) return null\r\n      if (this.totalPages === 1) return null\r\n\r\n      const pages = this.fetchPageNumbers()\r\n      return (\r\n         <PaginationTabList horizontal className='PaginationTab'>\r\n            {pages.map((page, index) => {\r\n               if (page === LEFT_PAGE)\r\n                  return (\r\n                     <List.Item key={index}>\r\n                        <Button circular onClick={this.handleMoveLeft}>\r\n                           <Image src={ArrowLeftImage} />\r\n                        </Button>\r\n                     </List.Item>\r\n                  )\r\n\r\n               if (page === RIGHT_PAGE)\r\n                  return (\r\n                     <List.Item key={index}>\r\n                        <Button circular onClick={this.handleMoveRight}>\r\n                           ...\r\n                        </Button>\r\n                     </List.Item>\r\n                  )\r\n\r\n               return (\r\n                  <List.Item key={index}>\r\n                     <Button\r\n                        circular\r\n                        active={this.state.currentPage === page}\r\n                        onClick={e => this.handleClick(page, e)}\r\n                     >\r\n                        {page}\r\n                     </Button>\r\n                  </List.Item>\r\n               )\r\n            })}\r\n         </PaginationTabList>\r\n      )\r\n   }\r\n}\r\n","import React from 'react'\r\n\r\nimport { Button, List } from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationPagingList = styled(List)`\r\n   && .paging-dropdown-tr {\r\n      width: 66px;\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n\r\n      border-radius: 18px;\r\n      background-position: 38px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 12px auto;\r\n      padding: 0 20px 0 0;\r\n\r\n      line-height: 32px;\r\n   }\r\n\r\n   && .paging-dropdown {\r\n      padding-top: 0px;\r\n      width: 66px;\r\n      min-height: 30px;\r\n\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 6px;\r\n\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 7px;\r\n      }\r\n\r\n      & > .item > .content {\r\n         font-size: 14px;\r\n         line-height: 18px;\r\n         font-weight: 600;\r\n         padding-left: 6px;\r\n      }\r\n   }\r\n\r\n   &&& .filter-by {\r\n      padding-left: 10px;\r\n      padding-right: 20px;\r\n   }\r\n`\r\n\r\nconst pagingTypes = [10, 20, 50, 100]\r\n\r\nconst PaginationFilter = ({\r\n   handleOnClickPaging,\r\n   pagingValue,\r\n   pagingDropdown,\r\n   handlePagingDropdownClick\r\n}) => (\r\n   <PaginationPagingList horizontal className='border-right-light'>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClickPaging}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='paging-dropdown-tr'\r\n            style={{ backgroundImage: ` url(${ArrowDown})` }}\r\n         >\r\n            {pagingValue}\r\n         </Button>\r\n\r\n         <List\r\n            selection\r\n            verticalAlign='middle'\r\n            className={`paging-dropdown ${pagingDropdown ? '' : 'hide'}`}\r\n         >\r\n            {pagingTypes.map((type, i) => (\r\n               <List.Item\r\n                  key={`page-${i}`}\r\n                  onClick={() => handlePagingDropdownClick(type)}\r\n               >\r\n                  <List.Content verticalAlign='middle'>{type}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n      <List.Item as='h6' className='filter-by'>\r\n         PER PAGE\r\n      </List.Item>\r\n   </PaginationPagingList>\r\n)\r\n\r\nexport default PaginationFilter\r\n","import React from 'react'\r\n\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nimport MSearchImage from '../../images/icon-m-search.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst SearchForm = styled(Form)`\r\n   float: right;\r\n\r\n   &&&& .search input {\r\n      width: 360px;\r\n\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      border-radius: 25px;\r\n      padding-left: 40px;\r\n\r\n      font-size: 14px;\r\n\r\n      background-color: #f8f8f8;\r\n      background-image: url(${MSearchImage});\r\n      background-position: 12px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 14px auto;\r\n   }\r\n`\r\n\r\nconst Search = ({ handleSubmit, handleChange, search }) => (\r\n   <SearchForm onSubmit={handleSubmit}>\r\n      <Form.Input\r\n         className='search'\r\n         name='search'\r\n         value={search}\r\n         onChange={handleChange}\r\n         placeholder='Search transactions and receipts...'\r\n      />\r\n   </SearchForm>\r\n)\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nimport { Button, List } from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationFilterList = styled(List)`\r\n   && .sortby-dropdown-tr {\r\n      width: 210px;\r\n      line-height: 32px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n      border-radius: 18px;\r\n      background-position: 180px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 12px auto;\r\n      background-image: url(${ArrowDown});\r\n      text-align: left;\r\n      padding-top: 0px;\r\n      padding-bottom: 0px;\r\n      letter-spacing: 1.8px;\r\n   }\r\n\r\n   && .sortby-dropdown {\r\n      padding-top: 0px;\r\n      width: 210px;\r\n      min-height: 30px;\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 2px;\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 10px;\r\n      }\r\n\r\n      .item {\r\n         height: 36px !important;\r\n\r\n         img {\r\n            width: 18px !important;\r\n            margin: 0 10px !important;\r\n         }\r\n         .content {\r\n            margin: 2px 0 0 0 !important;\r\n         }\r\n      }\r\n   }\r\n\r\n   &&& .sortby {\r\n      padding-left: 10px;\r\n      padding-right: 0px;\r\n   }\r\n`\r\n\r\nconst PaginationFilter = ({\r\n   filterTypesByType,\r\n   handleOnClick,\r\n   handleDropdownClick,\r\n   dropdown\r\n}) => (\r\n   <PaginationFilterList horizontal>\r\n      <List.Item as='h6' className='sortby'>\r\n         SORT BY\r\n      </List.Item>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClick}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='sortby-dropdown-tr'\r\n         >\r\n            RECENTLY ADDED\r\n         </Button>\r\n\r\n         <List\r\n            selection\r\n            verticalAlign='middle'\r\n            className={`sortby-dropdown ${dropdown ? '' : 'hide'}`}\r\n         >\r\n            {filterTypesByType.map((type, i) => (\r\n               <List.Item\r\n                  key={`sortby-${i}`}\r\n                  onClick={() => handleDropdownClick(type.img)}\r\n               >\r\n                  <List.Content as='h6'>{type.name}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n   </PaginationFilterList>\r\n)\r\n\r\nexport default PaginationFilter\r\n","import React, { Component } from 'react'\r\n\r\nimport { Grid, List } from 'semantic-ui-react'\r\n\r\nimport TransactionFilter from '../../images/icon-m-filter.svg'\r\n\r\nimport PaginationShowSubBox from './PaginationSubBox'\r\nimport { PaginationTab } from './PaginationTab'\r\nimport PaginationPaging from './PaginationPaging'\r\nimport PaginationSummary from './PaginationSummary'\r\nimport Search from '../common/Search'\r\n\r\nimport PaginationSortBy from './PaginationSortBy'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationBlockGrid = styled(Grid)`\r\n   &&& {\r\n      border-bottom: 2px solid #e6e6e6;\r\n      padding-bottom: 1rem;\r\n\r\n      .list-item {\r\n         > .row {\r\n            border-top: 1px solid #e6e6e6;\r\n\r\n            :first-of-type {\r\n               border-top: 0;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   & > .row:first-child {\r\n      ${'' /* min-height: 70px; */}\r\n      padding-top: 0px;\r\n   }\r\n\r\n   &&& .pagination-block-paging {\r\n      padding: 0px;\r\n   }\r\n\r\n   &&& .pagination-block-top {\r\n      padding-left: 0px;\r\n\r\n      &-paging-summary {\r\n         padding-left: 20px;\r\n      }\r\n\r\n      &-search {\r\n         padding: 0px;\r\n      }\r\n\r\n      &-paging {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   &&& .show-sub {\r\n      padding: 0 0 0 0;\r\n      margin-top: -16px;\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      \r\n   }\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         padding-bottom: 0;\r\n         margin-top: 0px;\r\n         \r\n         .mobile-hide {\r\n            display: none;\r\n         }\r\n         .main-image {\r\n            display: block;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nclass PaginationBlock extends Component {\r\n   static defaultProps = {\r\n      onPageChanged: () => {}\r\n   }\r\n\r\n   state = {\r\n      search: '',\r\n      dropdown: false,\r\n      dropdownType: this.props.type\r\n         ? this.props.filterTypes[this.props.type].img\r\n         : TransactionFilter,\r\n      pagingDropdown: false,\r\n      pagingValue: 10,\r\n\r\n      buttonRadio: false\r\n   }\r\n\r\n   handleOnClick = () => {\r\n      this.setState({\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handleOnClickPaging = () => {\r\n      this.setState({\r\n         pagingDropdown: !this.state.pagingDropdown\r\n      })\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({ [name]: value }))\r\n   }\r\n\r\n   handleSubmit = () => {\r\n      console.log('not ready yet')\r\n   }\r\n\r\n   handleDropdownClick = dropdownType => {\r\n      this.setState({\r\n         dropdownType,\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handlePagingDropdownClick = pagingValue => {\r\n      this.setState({\r\n         pagingValue,\r\n         pagingDropdown: !this.state.pagingDropdown\r\n      })\r\n\r\n      this.props.onPageChanged(1, pagingValue)\r\n   }\r\n\r\n   handleTabChange(pageNumber) {\r\n      // this.setState({\r\n      //    pageNumber: pageNumber,\r\n      //    loader: true,\r\n      // })\r\n      // this.updateBlock(pageNumber)\r\n      // return pageNumber\r\n   }\r\n\r\n   buttonRadioClick = () => {\r\n      this.setState(state => ({\r\n         buttonRadio: !state.buttonRadio\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         filterTypes,\r\n         type,\r\n         pageNumber = 0,\r\n         showSub = false,\r\n         subPage,\r\n         showSubData,\r\n         toggleCloseSub,\r\n         handleDeauthorize\r\n      } = this.props\r\n\r\n      const {\r\n         dropdownType,\r\n         dropdown,\r\n         search,\r\n         pagingValue,\r\n         pagingDropdown\r\n      } = this.state\r\n\r\n      const {\r\n         totalRecords = 1100,\r\n         pageLimit = 10,\r\n         initialPage = 0,\r\n         onPageChanged = () => {},\r\n         pageNeighbors = 1\r\n      } = this.props\r\n\r\n      const filterTypesByType = type ? [filterTypes[type]] : filterTypes\r\n\r\n      return (\r\n         <PaginationBlockGrid\r\n            stackable\r\n            columns={2}\r\n         >\r\n            {false && (\r\n               <Grid.Row className='border-bottom-light'>\r\n                  <Grid.Column\r\n                     width={10}\r\n                     verticalAlign='middle'\r\n                     className='pagination-block-top'\r\n                  >\r\n                     <PaginationSortBy\r\n                        filterTypesByType={filterTypesByType}\r\n                        handleOnClick={this.handleOnClick}\r\n                        dropdownType={dropdownType}\r\n                        handleDropdownClick={this.handleDropdownClick}\r\n                        dropdown={dropdown}\r\n                     />\r\n                  </Grid.Column>\r\n                  <Grid.Column\r\n                     width={6}\r\n                     textAlign='right'\r\n                     floated='right'\r\n                     verticalAlign='middle'\r\n                     className='pagination-block-top-search'\r\n                  >\r\n                     <Search\r\n                        handleSubmit={this.handleSubmit}\r\n                        handleChange={this.handleChange}\r\n                        search={search}\r\n                     />\r\n                  </Grid.Column>\r\n               </Grid.Row>\r\n            )}\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  computer={showSub ? 10 : 16}\r\n                  className={showSub ? `mobile-hide` : ``}\r\n               >\r\n                  <Grid className='list-item'>{this.props.children}</Grid>\r\n               </Grid.Column>\r\n\r\n               <Grid.Column\r\n                  computer={6}\r\n                  className={`show-sub ${showSub ? `` : `hide`}`}\r\n               >\r\n                  <PaginationShowSubBox\r\n                     toggleCloseSub={toggleCloseSub}\r\n                     subPage={subPage}\r\n                     showSubData={showSubData}\r\n                     handleDeauthorize={handleDeauthorize}\r\n                  />\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            {false && (\r\n               <Grid.Row className='border-top-light'>\r\n                  <Grid.Column\r\n                     width={8}\r\n                     verticalAlign='middle'\r\n                     className='pagination-block-top-paging'\r\n                  >\r\n                     <List horizontal verticalAlign='middle'>\r\n                        <List.Item width={6}>\r\n                           <PaginationPaging\r\n                              handleOnClickPaging={this.handleOnClickPaging}\r\n                              pagingValue={pagingValue}\r\n                              pagingDropdown={pagingDropdown}\r\n                              handlePagingDropdownClick={\r\n                                 this.handlePagingDropdownClick\r\n                              }\r\n                           />\r\n                        </List.Item>\r\n                        <List.Item\r\n                           width={6}\r\n                           as='h6'\r\n                           className='pagination-block-top-paging-summary'\r\n                        >\r\n                           <PaginationSummary\r\n                              pageNumber={pageNumber}\r\n                              pageLimit={pageLimit}\r\n                              totalRecords={totalRecords}\r\n                           />\r\n                        </List.Item>\r\n                     </List>\r\n                  </Grid.Column>\r\n                  <Grid.Column\r\n                     width={8}\r\n                     className='pagination-block-paging'\r\n                     textAlign='right'\r\n                  >\r\n                     <PaginationTab\r\n                        totalRecords={totalRecords}\r\n                        pageLimit={pageLimit}\r\n                        initialPage={initialPage}\r\n                        onPageChanged={onPageChanged}\r\n                        pageNeighbors={pageNeighbors}\r\n                     />\r\n                  </Grid.Column>\r\n               </Grid.Row>\r\n            )}\r\n         </PaginationBlockGrid>\r\n      )\r\n   }\r\n}\r\n\r\nexport default PaginationBlock\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport PaginationBlock from '../pagination/PaginationBlock'\r\nimport ListItem from '../dashboard/ListItem'\r\nimport PageContainer from '../common/PageContainer';\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nclass Contacts extends Component {\r\n   state = {\r\n      loader: false,\r\n      showSub: false,\r\n      showSubOpen: 0,\r\n      activity: [],\r\n      filterTypes: [\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' }\r\n      ]\r\n   }\r\n\r\n   toggleShowSub = i => {\r\n      i = i == null ? this.state.showSubOpen : i\r\n\r\n      this.setState(state => ({\r\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\r\n         showSubOpen: i\r\n      }))\r\n   }\r\n\r\n   toggleCloseSub = () => {\r\n      this.setState(() => ({\r\n         showSub: false,\r\n         showSubOpen: 0,\r\n         showSubData: []\r\n      }))\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', '']\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\r\n\r\n      return (\r\n         <PageContainer\r\n            title='Contacts'\r\n            additional={<h1>203<span className='color-brown-grey'> total</span></h1>}\r\n         >\r\n            <PaginationBlock\r\n               filterTypes={filterTypes}\r\n               showSub={showSub}\r\n               toggleShowSub={this.toggleShowSub}\r\n               toggleCloseSub={this.toggleCloseSub}\r\n            >\r\n               {activity.map((row, i) => (\r\n                  <ListItem\r\n                     key={`c-${i}`}\r\n                     row={row}\r\n                     i={i}\r\n                     wide={true}\r\n                     showSub={showSub}\r\n                     toggleShowSub={this.toggleShowSub}\r\n                     showSubOpen={showSubOpen}\r\n                  />\r\n               ))}\r\n            </PaginationBlock>\r\n         </PageContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nexport const ContactsWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Contacts))\r\n","import React from 'react'\r\nimport { Segment, Header } from 'semantic-ui-react'\r\n\r\nimport FormButton from '../common/FormButton'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomSegment = styled(Segment)`\r\n   &&& {\r\n      max-width: 700px;\r\n      button {\r\n         margin-bottom: 36px;\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         max-width: 100%;\r\n         margin-top: 24px;\r\n         text-align: center;\r\n      }\r\n   }\r\n`\r\n\r\nconst AuthorizedAppsEmpty = () => (\r\n   <CustomSegment basic>\r\n      <Header as='h2'>You have not connected your NEAR Wallet to any applications. When you do, you can manage them here.</Header>\r\n      <Header as='h2'>See what's been built with NEAR:</Header>\r\n      <a href='https://builtwithnear.com/' target='_blank' rel=\"noopener noreferrer\">\r\n         <FormButton color='blue'>BROWSE APPS</FormButton>\r\n      </a>\r\n   </CustomSegment>\r\n)\r\n\r\nexport default AuthorizedAppsEmpty\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl,\r\n   getAccountDetails,\r\n   removeAccessKey\r\n} from '../../actions/account'\r\n\r\nimport AuthorizedAppsEmpty from './AuthorizedAppsEmpty'\r\nimport PaginationBlock from '../pagination/PaginationBlock'\r\nimport ListItem from '../dashboard/ListItem'\r\nimport PageContainer from '../common/PageContainer';\r\n\r\nimport AppDefaultImage from '../../images/icon-app-default.svg'\r\n\r\nclass AuthorizedApps extends Component {\r\n   state = {\r\n      loader: true,\r\n      showSub: false,\r\n      showSubOpen: 0,\r\n      showSubData: [],\r\n      authorizedApps: [],\r\n      filterTypes: [\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' }\r\n      ]\r\n   }\r\n\r\n   toggleShowSub = (i, row) => {\r\n      i = i == null ? this.state.showSubOpen : i\r\n\r\n      this.setState(state => ({\r\n         showSub: true,\r\n         showSubOpen: i,\r\n         showSubData: row\r\n      }))\r\n   }\r\n\r\n   toggleCloseSub = () => {\r\n      this.setState(() => ({\r\n         showSub: false,\r\n         showSubOpen: 0,\r\n         showSubData: []\r\n      }))\r\n   }\r\n\r\n   handleDeauthorize = () => {\r\n      const publicKey = this.state.showSubData[3]\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      this.props.removeAccessKey(publicKey).then(() => {\r\n         this.toggleCloseSub()\r\n         this.refreshAuthorizedApps()\r\n      })\r\n   }\r\n\r\n   refreshAuthorizedApps = () => {\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      this.props.getAccountDetails().then(() => {\r\n         this.setState(() => ({\r\n            loader: false\r\n         }))\r\n      })\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.props.history)\r\n      this.refreshAuthorizedApps()\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         filterTypes,\r\n         showSub,\r\n         showSubOpen,\r\n         showSubData\r\n      } = this.state\r\n\r\n      const { authorizedApps } = this.props\r\n\r\n      return (\r\n         <PageContainer\r\n            title='Authorized Apps'\r\n            additional={(\r\n               <h1>\r\n                  {authorizedApps && authorizedApps.length}\r\n                  <span className='color-brown-grey'> total</span>\r\n               </h1>\r\n            )}\r\n         >\r\n            <PaginationBlock\r\n               filterTypes={filterTypes}\r\n               showSub={showSub}\r\n               showSubData={showSubData}\r\n               toggleShowSub={this.toggleShowSub}\r\n               toggleCloseSub={this.toggleCloseSub}\r\n               subPage='authorized-apps'\r\n               handleDeauthorize={this.handleDeauthorize}\r\n            >\r\n               {authorizedApps && (authorizedApps.length \r\n                  ? authorizedApps.map((row, i) => (\r\n                     <ListItem\r\n                        key={`a-${i}`}\r\n                        row={row}\r\n                        i={i}\r\n                        wide={true}\r\n                        showSub={showSub}\r\n                        toggleShowSub={this.toggleShowSub}\r\n                        showSubOpen={showSubOpen}\r\n                     />\r\n                  )) : <AuthorizedAppsEmpty />)}\r\n            </PaginationBlock>\r\n         </PageContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl,\r\n   getAccountDetails,\r\n   removeAccessKey\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   ...account,\r\n   authorizedApps: account.authorizedApps\r\n      ? account.authorizedApps.map(r => [\r\n           AppDefaultImage,\r\n           r.contractId,\r\n           r.amount,\r\n           r.publicKey\r\n        ])\r\n      : null\r\n})\r\n\r\nexport const AuthorizedAppsWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(AuthorizedApps))\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { Segment, Form } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomDiv = styled(`div`)`\r\n   &&&&& {\r\n      > .field {\r\n         margin-bottom: 0px;\r\n      }\r\n      \r\n      input {\r\n         height: 80px;\r\n         border: 0px;\r\n         font-family: Bw Seido Round;\r\n         font-size: ${props => props.fontSize};\r\n         font-weight: 500;\r\n         line-height: 80px;\r\n         color: #4a4f54;\r\n         text-align: center;\r\n         padding: 0px;\r\n         \r\n         :focus::-webkit-input-placeholder { color: transparent; }\r\n         :focus:-moz-placeholder { color: transparent; }\r\n         :focus::-moz-placeholder { color: transparent; }\r\n         :focus:-ms-input-placeholder { color: transparent; }\r\n\r\n         -moz-appearance: textfield;\r\n\r\n         ::-webkit-outer-spin-button,\r\n         ::-webkit-inner-spin-button {\r\n            -webkit-appearance: none;\r\n            margin: 0;\r\n         }\r\n      }\r\n      .alert-info {\r\n         font-weight: 600;\r\n         margin: 0 0 0 0;\r\n         padding: 8px 0;\r\n         line-height: 34px;\r\n         font-size: 14px;\r\n         text-align: center;\r\n         &.problem {\r\n            color: #ff585d;\r\n         }\r\n         &.success {\r\n            color: #6ad1e3;\r\n         }\r\n         &.segment {\r\n            padding: 0px !important;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nclass SendMoneyAmountInput extends Component {\r\n   state = {\r\n      amount: `${this.props.defaultAmount}` || '',\r\n      amountStatus: ''\r\n   }\r\n\r\n   handleChangeAmount = (e, { name, value }) => {\r\n      const amountStatus = !Number.isInteger(Number(value))\r\n         ? 'Please enter a whole number.'\r\n         : value > Number(this.props.amount)\r\n            ? 'Not enough tokens.' \r\n            : ''\r\n\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         amountStatus\r\n      }))\r\n\r\n      this.props.handleChange(e, { name, value })\r\n      this.props.handleChange(e, { name: 'amountStatus', value: amountStatus })\r\n   }\r\n\r\n   render () {\r\n      const { amount, amountStatus } = this.state\r\n      const fontSize = amount.length > 11 ? 32 : amount.length > 8 ? 38 : amount.length > 5 ? 50 : 72\r\n\r\n      return (\r\n         <CustomDiv fontSize={`${fontSize}px`}>\r\n            <Form.Input\r\n               type='number'\r\n               pattern='[0-9]*'\r\n               name='amount'\r\n               value={amount}\r\n               onChange={this.handleChangeAmount}\r\n               placeholder='0'\r\n               step='1'\r\n               min='1'\r\n            />\r\n            {amountStatus && (\r\n               <Segment basic textAlign='center' className='alert-info problem'>\r\n                  {amountStatus}\r\n               </Segment>\r\n            )}\r\n         </CustomDiv>\r\n      )\r\n   }\r\n}\r\n\r\nSendMoneyAmountInput.propTypes = {\r\n   handleChange: PropTypes.func.isRequired,\r\n   amount: PropTypes.string\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nconst mapStateToProps = ({ account }, { match }) => ({\r\n   ...account,\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(SendMoneyAmountInput)\r\n","import React from 'react'\r\n\r\nimport {\r\n   Header,\r\n   TextArea,\r\n   List,\r\n   Form,\r\n   Dimmer,\r\n   Loader,\r\n   Responsive\r\n} from 'semantic-ui-react'\r\n\r\nimport MainImage from '../common/MainImage'\r\nimport FormButton from '../common/FormButton'\r\nimport RequestStatusBox from '../common/RequestStatusBox'\r\nimport AccountFormAccountId from '../accounts/AccountFormAccountId'\r\nimport SendMoneyAmountInput from './SendMoneyAmountInput'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&&&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin: 24px auto 0 auto;\r\n\r\n      form {\r\n         h3 {\r\n            margin-bottom: 13px;\r\n            text-align: left;\r\n         }\r\n         .alert-info {\r\n            margin: 0 0 0 0;\r\n            padding: 8px 0;\r\n            line-height: 34px;\r\n            font-size: 14px;\r\n         }\r\n         .main-image > div {\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n         }\r\n         .amount {\r\n            margin-top: 12px;\r\n            margin-bottom: 0px;\r\n            padding-top: 36px;\r\n         }\r\n         .add-note {\r\n            > textarea {\r\n               width: 100%;\r\n               border: 0px;\r\n               padding: 12px;\r\n               :focus {\r\n                  border: 0px;\r\n               }\r\n            }\r\n         }\r\n         .send-money {\r\n            margin-top: 24px;\r\n            margin-bottom: 6px;\r\n         }\r\n      }\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         padding: 0px;\r\n         width: 100%;\r\n         text-align: center;\r\n         margin-left: auto;\r\n         margin-right: auto;\r\n         border: 0px;\r\n         form {\r\n            .add-note {\r\n               margin-left: -1rem;\r\n               margin-right: -1rem;\r\n               > textarea {\r\n                  width: 100%;\r\n                  height: 98px;\r\n                  border: 0px;\r\n                  padding: 12px;\r\n                  background: #f8f8f8;\r\n                  :focus {\r\n                     border: 0px;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyFirstStep = ({\r\n   handleNextStep,\r\n   handleChange,\r\n   note,\r\n   loader,\r\n   paramAccountId,\r\n   accountId,\r\n   isLegitForm,\r\n   formLoader,\r\n   requestStatus,\r\n   amount\r\n}) => (\r\n   <CustomList className='box'>\r\n      <Form autoComplete='off'>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         {paramAccountId ? (\r\n            <List.Item>\r\n               <List.Content className='main-image'>\r\n                  <MainImage \r\n                     src={AccountGreyImage} \r\n                     size='medium'\r\n                  />\r\n               </List.Content>\r\n               <List.Content as='h2'>{accountId}</List.Content>\r\n               <List.Content>@{accountId}</List.Content>\r\n            </List.Item>\r\n         ) : (\r\n            <List.Item>\r\n               <List.Content>\r\n                  <Header as='h3'>Enter a username to send:</Header>\r\n                  <AccountFormAccountId\r\n                     formLoader={formLoader}\r\n                     handleChange={handleChange}\r\n                     defaultAccountId={accountId}\r\n                  />\r\n                  <Responsive as={RequestStatusBox} minWidth={768} requestStatus={requestStatus} />\r\n               </List.Content>\r\n            </List.Item>\r\n         )}\r\n         <List.Item className='amount border-top'>\r\n            <SendMoneyAmountInput \r\n               handleChange={handleChange} \r\n               defaultAmount={amount}\r\n            />\r\n         </List.Item>\r\n         {false ? (\r\n            <List.Item className='add-note border-bottom border-top'>\r\n               <TextArea\r\n                  name='note'\r\n                  value={note}\r\n                  onChange={handleChange}\r\n                  placeholder='Add a note...'\r\n               />\r\n            </List.Item>\r\n         ) : null}\r\n         <List.Item className='send-money'>\r\n            <FormButton\r\n               onClick={handleNextStep}\r\n               color='green'\r\n               disabled={!isLegitForm()}\r\n            >\r\n               SEND MONEY\r\n            </FormButton>\r\n         </List.Item>\r\n      </Form>\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneyFirstStep\r\n","import React from 'react'\r\n\r\nimport { List, Header } from 'semantic-ui-react'\r\n\r\nimport MainImage from '../common/MainImage'\r\nimport FormButton from '../common/FormButton'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin: 24px auto 0 auto;\r\n\r\n      \r\n      .main-image > div {\r\n         margin-left: auto;\r\n         margin-right: auto;\r\n      }\r\n      .amount {\r\n         margin-top: 0;\r\n         margin-bottom: 0px;\r\n         padding-top: 0px;\r\n         padding-bottom: 24px;\r\n\r\n         font-family: Bw Seido Round;\r\n         font-size: ${props => props.fontSize}px;\r\n         font-weight: 500;\r\n         line-height: 60px;\r\n         color: #4a4f54;\r\n         word-break: break-all;\r\n      }\r\n      .to {\r\n         width: 40px;\r\n         background: #fff;\r\n         margin: -20px auto 12px auto;\r\n      }\r\n\r\n      .with-note {\r\n         padding-top: 12px;\r\n\r\n         .expand-note {\r\n            color: #0072ce;\r\n            cursor: pointer;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               text-decoration: underline;\r\n            }\r\n         }\r\n      }\r\n\r\n      .goback {\r\n         font-weight: 600;\r\n         margin-top: 12px;\r\n         padding-top: 24px;\r\n\r\n         button.link {\r\n            background-color: transparent;\r\n            border: none;\r\n            cursor: pointer;\r\n            text-decoration: none;\r\n            display: inline;\r\n            margin: 0;\r\n            padding: 0;\r\n            color: #0072ce;\r\n\r\n            :hover,\r\n            :focus {\r\n               text-decoration: underline;\r\n               color: #0072ce;\r\n            }\r\n         }\r\n      }\r\n\r\n      .send-money {\r\n         padding-top: 0px;\r\n         padding-bottom: 0px;\r\n         margin-top: 24px;\r\n         margin-bottom: 12px;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         .to {\r\n            margin: -20px auto 12px auto;\r\n         }\r\n\r\n         &&& {\r\n            padding: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n\r\n            border: 0px;\r\n\r\n            .amount {\r\n               font-size: 48px !important;\r\n               padding-top: 0px;\r\n            }\r\n            .send-money {\r\n               padding-top: 14px;\r\n               padding-bottom: 14px;\r\n               margin-top: 14px;\r\n               margin-bottom: 14px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneySecondStep = ({\r\n   handleNextStep,\r\n   handleExpandNote,\r\n   handleGoBack,\r\n   expandNote,\r\n   note,\r\n   amount,\r\n   accountId,\r\n   loader\r\n}) => (\r\n   <CustomList className='box' fontSize={amount.toString().length > 8 ? 34 : 48}>\r\n      <List.Item as='h2' >You are sending</List.Item>\r\n      <List.Item className='amount border-bottom'>\r\n         {amount.toLocaleString('en', {useGrouping:true})}\r\n         <span>Ⓝ</span>\r\n      </List.Item>\r\n      <List.Item className='to'>\r\n         <Header as='h2'>to</Header>\r\n      </List.Item>\r\n      <List.Item className='main-image'>\r\n         <MainImage\r\n            src={AccountGreyImage} \r\n            size='medium'\r\n         />\r\n      </List.Item>\r\n      <List.Item as='h2'>{accountId}</List.Item>\r\n      <List.Item>@{accountId}</List.Item>\r\n      {note && (\r\n         <List.Item className='with-note '>\r\n            with note:\r\n            <br />\r\n            {expandNote ? (\r\n               <span className='color-black'>{note}</span>\r\n            ) : (\r\n               <span className='expand-note' onClick={handleExpandNote}>\r\n                  Expand note\r\n               </span>\r\n            )}\r\n         </List.Item>\r\n      )}\r\n      <List.Item className='send-money border-top'>\r\n         <FormButton\r\n            onClick={handleNextStep}\r\n            color='green'\r\n            disabled={loader}\r\n            sending={loader}\r\n         >\r\n            CONFIRM & SEND\r\n         </FormButton>\r\n      </List.Item>\r\n      <List.Item>Once confirmed, this is not undoable.</List.Item>\r\n      <List.Item className='goback border-top'>\r\n         <FormButton\r\n            onClick={handleGoBack}\r\n            color='link bold'\r\n            disabled={loader}\r\n         >\r\n            Need to edit? Go Back\r\n         </FormButton>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneySecondStep\r\n","import React from 'react'\r\n\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nimport MainImage from '../common/MainImage'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport SendImage from '../../images/icon-send.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      margin-top: 12px;\r\n\r\n      .send-money img {\r\n         width: 24px;\r\n      }\r\n      .main-image > div {\r\n         margin-left: auto;\r\n         margin-right: auto;\r\n      }\r\n      .amount {\r\n         margin-top: 32px;\r\n         margin-bottom: 0px;\r\n         padding-top: 12px;\r\n         padding-bottom: 24px;\r\n      }\r\n      .with-note {\r\n         padding-top: 24px;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         &&& {\r\n            padding: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n\r\n            border: 0px;\r\n\r\n            .send-money img {\r\n               margin-top: 12px;\r\n            }\r\n            .amount {\r\n               padding-top: 0px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyThirdStep = ({ note, amount, accountId }) => (\r\n   <CustomList>\r\n      <List.Item className='send-money'>\r\n         <Image src={SendImage} />\r\n      </List.Item>\r\n      <List.Item as='h2' className='amount'>\r\n         {amount.toLocaleString('en', {useGrouping:true})}\r\n         <span>Ⓝ</span> was sent to:\r\n      </List.Item>\r\n      <List.Item className='main-image'>\r\n         <MainImage\r\n            src={AccountGreyImage} \r\n            size='medium'\r\n         />\r\n      </List.Item>\r\n      <List.Item as='h2'>{accountId}</List.Item>\r\n      <List.Item>@{accountId}</List.Item>\r\n      {note && (\r\n         <List.Item className='with-note'>\r\n            <span className='font-bold'>with note:</span>\r\n            <br />\r\n            {note}\r\n         </List.Item>\r\n      )}\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneyThirdStep\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl, checkAccountAvailable, clear } from '../../actions/account'\r\n\r\nimport PageContainer from '../common/PageContainer';\r\nimport FormButton from '../common/FormButton'\r\nimport SendMoneyFirstStep from './SendMoneyFirstStep'\r\nimport SendMoneySecondStep from './SendMoneySecondStep'\r\nimport SendMoneyThirdStep from './SendMoneyThirdStep'\r\n\r\nclass SendMoney extends Component {\r\n   state = {\r\n      loader: false,\r\n      step: 1,\r\n      note: '',\r\n      expandNote: false,\r\n      paramAccountId: false,\r\n      accountId: '',\r\n      amount: '',\r\n      amountStatus: ''\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.props.history)\r\n\r\n      const paramId = this.props.match.params.id\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      if (paramId) {\r\n         this.props.checkAccountAvailable(paramId).then(({ error }) => {\r\n            this.setState(() => ({\r\n               loader: false,\r\n               accountId: paramId\r\n            }))\r\n\r\n            if (error) return\r\n\r\n            this.setState(() => ({\r\n               paramAccountId: true\r\n            }))\r\n         })\r\n      } else {\r\n         this.setState(() => ({\r\n            loader: false\r\n         }))\r\n      }\r\n   }\r\n\r\n   componentWillUnmount = () => {\r\n      this.props.clear()\r\n   }\r\n\r\n   handleGoBack = () => {\r\n      this.setState(() => ({\r\n         step: 1\r\n      }))\r\n   }\r\n\r\n   handleCancelTransfer = () => {\r\n      this.props.clear()\r\n\r\n      this.setState(() => ({\r\n         step: 1,\r\n         note: '',\r\n         amount: '',\r\n         accountId: '',\r\n         successMessage: false,\r\n         paramAccountId: false,\r\n      }))\r\n\r\n      this.props.history.push('/send-money')\r\n   }\r\n\r\n   handleNextStep = (e) => {\r\n      e.preventDefault()\r\n      const { step, accountId, amount} = this.state;\r\n\r\n      if (step === 2) {\r\n         this.setState(() => ({\r\n            loader: true\r\n         }))\r\n\r\n         this.wallet.sendMoney(accountId, amount)\r\n            .then(() => {\r\n               this.props.handleRefreshAccount(this.props.history)\r\n\r\n               this.setState(state => ({\r\n                  step: state.step + 1\r\n               }))\r\n            })\r\n            .catch(console.error)\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  loader: false\r\n               }))\r\n            })\r\n         return;\r\n      }\r\n\r\n      this.setState(state => ({\r\n         step: state.step + 1,\r\n         amount: +state.amount\r\n      }))\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value\r\n      }))\r\n   }\r\n\r\n   handleExpandNote = () => {\r\n      this.setState(() => ({\r\n         expandNote: true\r\n      }))\r\n   }\r\n\r\n   isLegitForm = () => {\r\n      const { paramAccountId, amount, amountStatus } = this.state\r\n      const { requestStatus } = this.props\r\n\r\n      return paramAccountId\r\n      ? ((amount) > 0 && amountStatus === '')\r\n      : (requestStatus && requestStatus.success && (amount) > 0 && amountStatus === '')\r\n   }\r\n\r\n   render() {\r\n      const { step, loader } = this.state\r\n      const { formLoader, requestStatus } = this.props\r\n\r\n      return (\r\n         <PageContainer\r\n            title={step === 3 ? `Success!` : `Send Money`}\r\n            bottom={step === 2 && (\r\n               <FormButton\r\n                  onClick={this.handleCancelTransfer}\r\n                  color='link gray bold'\r\n                  disabled={loader}\r\n               >\r\n                  Cancel Transfer\r\n               </FormButton>\r\n            )}\r\n            type='center'\r\n         >\r\n            {step === 1 && (\r\n               <SendMoneyFirstStep\r\n                  handleNextStep={this.handleNextStep}\r\n                  handleChange={this.handleChange}\r\n                  isLegitForm={this.isLegitForm}\r\n                  formLoader={formLoader}\r\n                  requestStatus={requestStatus}\r\n                  {...this.state}\r\n               />\r\n            )}\r\n            {step === 2 && (\r\n               <SendMoneySecondStep\r\n                  handleNextStep={this.handleNextStep}\r\n                  handleExpandNote={this.handleExpandNote}\r\n                  handleGoBack={this.handleGoBack}\r\n                  {...this.state}\r\n               />\r\n            )}\r\n            {step === 3 && <SendMoneyThirdStep {...this.state} />}\r\n         </PageContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl,\r\n   checkAccountAvailable,\r\n   clear\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   ...account\r\n})\r\n\r\nexport const SendMoneyWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(SendMoney))\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Popup, Grid, Image } from 'semantic-ui-react'\r\n\r\nimport MainImage from '../common/MainImage'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport LockImage from '../../images/icon-lock.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      .row {\r\n         padding-top: 12px;\r\n         padding-bottom: 12px;\r\n\r\n         .edit-link {\r\n            font-weight: 600;\r\n         }\r\n         .title {\r\n            font-weight: 600;\r\n            color: #24272a;\r\n         }\r\n      }\r\n\r\n      .locked {\r\n         float: right;\r\n         border: 0px;\r\n         padding: 1px 7px;\r\n         width: 32px;\r\n         height: 32px;\r\n         background: #f8f8f8;\r\n         border-radius: 32px;\r\n\r\n         img {\r\n            padding-top: 4px;\r\n         }\r\n      }\r\n\r\n      .row-title {\r\n         margin-top: 20px;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0px;\r\n         margin-right: 0px;\r\n\r\n         .column {\r\n            padding-left: 0px;\r\n            padding-right: 0px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileDetails = ({ account }) => (\r\n   <CustomGrid>\r\n      <Grid.Row>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            PROFILE\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' as='h6' textAlign='center' only='tablet'>\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Username\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            @{account.accountId}\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column computer='2' tablet='2' mobile='3' textAlign='right'>\r\n            <Popup\r\n               trigger={\r\n                  <div className='locked'>\r\n                     <Image src={LockImage} align='left' />\r\n                  </div>\r\n               }\r\n               hoverable\r\n               position='left center'\r\n            >\r\n               <Popup.Header>Why is this locked?</Popup.Header>\r\n               <Popup.Content>\r\n                  Your username is your unique identifier in the system and cannot be changed\r\n                  cause data and asset ownership is tied to it.\r\n                  However you are welcome to <Link to=\"/create\">create another account</Link> with desired name\r\n                  and transfer assets as needed.\r\n                  {` `}\r\n                  {false ?\r\n                  <a href='/'>Learn more</a>\r\n                  : null }\r\n               </Popup.Content>\r\n            </Popup>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      {false ? <div>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Full Name\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            Evgeny Kuzyakov\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Photo\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            <MainImage \r\n               src={AccountGreyImage} \r\n               size='huge'\r\n            />\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className='border-top-bold row-title'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            CONTACT INFORMATION\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            computer='4'\r\n            tablet='4'\r\n            as='h6'\r\n            textAlign='center'\r\n            only='tablet'\r\n         >\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Email\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            email@website.com\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Phone\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            000-000-0000\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Address\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            1234 N. West Ave., San Francisco, CA 98562\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className='border-top-bold row-title'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            FINANCIAL INFORMATION\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            computer='4'\r\n            tablet='4'\r\n            as='h6'\r\n            textAlign='center'\r\n            only='tablet'\r\n         >\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      </div> : null }\r\n\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Balance\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            {account.amount} Ⓝ\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Only Me\r\n         </Grid.Column>\r\n         <Grid.Column as=\"div\">\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default ProfileDetails\r\n","import React from 'react'\r\n\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nconst ProfileSection = ({ children }) => (\r\n   <Grid columns={2} stackable>\r\n      <Grid.Column computer={10}>{children[0]}</Grid.Column>\r\n      <Grid.Column computer={6}>\r\n         {children[1]}\r\n         {children[2]}\r\n      </Grid.Column>\r\n   </Grid>\r\n)\r\n\r\nexport default ProfileSection\r\n","import React from 'react'\r\n\r\nimport { List, Button, Image } from 'semantic-ui-react'\r\n\r\nimport KeysGreyImage from '../../images/icon-keys-grey.svg'\r\nimport DocGreyImage from '../../images/icon-doc-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      margin-top: -1rem;\r\n      padding: 14px 4px 14px 14px;\r\n\r\n      .keys {\r\n         img {\r\n            width: 24px;\r\n            margin-top: 2px;\r\n         }\r\n      }\r\n      .account {\r\n         margin-top: 12px;\r\n\r\n         &-name {\r\n            margin-top: 12px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n         }\r\n         img {\r\n            width: 18px;\r\n            margin-top: 8px;\r\n            margin-right: 20px;\r\n         }\r\n         .download {\r\n            margin: 0px;\r\n         }\r\n         button {\r\n            width: 130px;\r\n            background-color: #0072ce;\r\n            border: 2px solid #0072ce;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n            margin-left: 20px;\r\n\r\n            :hover {\r\n               background-color: #fff;\r\n               color: #0072ce;\r\n            }\r\n         }\r\n         .account-name {\r\n            color: #24272a;\r\n            font-weight: 600;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n         &&& {\r\n            .account {\r\n               .download {\r\n                  float: none;\r\n                  margin: 0 0 0 16px;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         &&& {\r\n            margin-top: 20px;\r\n\r\n            .account {\r\n               button {\r\n                  margin-left: 8px;\r\n               }\r\n               .download {\r\n                  float: right;\r\n                  margin: 0 0 0 0;\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileYourKeys = () => (\r\n   <CustomList className='box'>\r\n      <List.Item className='keys'>\r\n         <List.Icon as={Image} src={KeysGreyImage} />\r\n         <List.Content as='h2'>Your Keys</List.Content>\r\n      </List.Item>\r\n      <List.Item className='account'>\r\n         <List.Content floated='right' className='download'>\r\n            <Button>DOWNLOAD</Button>\r\n         </List.Content>\r\n         <List.Content>\r\n            <Image align='left' src={DocGreyImage} />\r\n         </List.Content>\r\n         <List.Content className='account-name'>\r\n            @eugenethedream.key\r\n         </List.Content>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default ProfileYourKeys\r\n","import React from 'react'\r\n\r\nimport { List } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 8px 0 8px 20px;\r\n      margin-left: 28px;\r\n      margin-top: 20px;\r\n      border-left: 4px solid #f8f8f8;\r\n\r\n      .header {\r\n         line-height: 28px;\r\n      }\r\n      .content {\r\n         line-height: 20px;\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0px;\r\n         border-left: 0px;\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileNotice = () => (\r\n   <CustomList>\r\n      <List.Item>\r\n         <List.Header>Never give your keys away</List.Header>\r\n         <List.Content>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\r\n            sit amet pretium mi, a molestie est.\r\n            <a href='/'>Learn more</a>\r\n         </List.Content>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default ProfileNotice\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport PageContainer from '../common/PageContainer';\r\nimport ProfileDetails from './ProfileDetails'\r\nimport ProfileSection from './ProfileSection'\r\nimport ProfileYourKeys from './ProfileYourKeys'\r\nimport ProfileNotice from './ProfileNotice'\r\n\r\nclass Profile extends Component {\r\n   state = {\r\n      loader: false\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <PageContainer\r\n            title={`Account: @${account.accountId ? account.accountId : ``}`}\r\n         >\r\n            <ProfileSection>\r\n               <ProfileDetails account={this.props.account} />\r\n               { false ?\r\n               <ProfileYourKeys />\r\n               : null }\r\n               { false ?\r\n               <ProfileNotice />\r\n               : null }\r\n            </ProfileSection>\r\n         </PageContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const ProfileWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Profile))\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  \r\n  * {\r\n   box-sizing: inherit;\r\n   }\r\n\r\n   #root {\r\n      min-height: 100vh;\r\n      position: relative;\r\n   }\r\n   html {\r\n      box-sizing: border-box;\r\n      min-height: 100vh;\r\n      height: auto !important;\r\n\r\n      body {\r\n         margin: 0;\r\n         padding: 0;\r\n         min-height: 100vh !important;\r\n\r\n         position: relative;\r\n         color: #999;\r\n         font-family: \"benton-sans\",sans-serif;\r\n         font-weight: 500;\r\n         font-size: 14px !important;\r\n      }\r\n   }\r\n\r\n\r\n   \r\n\r\n   .App {\r\n      min-height: 100vh;\r\n\r\n      .main {\r\n         padding-bottom: 200px;\r\n      }\r\n   }\r\n\r\n   a {\r\n      color: #0072ce;\r\n   }\r\n   a:hover {\r\n      color: #0072ce;\r\n      text-decoration: underline;\r\n   }\r\n\r\n   h1, .h1 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 48px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 100px;\r\n      color: #24272a;\r\n   }\r\n   h2, .h2 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 24px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 1.33;\r\n      color: #24272a !important;\r\n      margin: 0px;\r\n   }\r\n   h3, .h3 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 18px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 24px !important;\r\n      color: #24272a !important;\r\n      margin: 0px;\r\n   }\r\n   h4, .h4 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      line-height: 1.33;\r\n      color: #24272a;\r\n      margin: 0px;\r\n   }\r\n\r\n   h5, .h5 {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 13px !important;\r\n      line-height: 26px;\r\n      font-weight: 500;\r\n      color: #999999 !important;\r\n      margin: 0px;\r\n      letter-spacing: 1.8px;\r\n   }\r\n\r\n   h6, .h6 {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 12px !important;\r\n      line-height: 18px;\r\n      font-weight: 600;\r\n      color: #999999;\r\n      margin: 0px !important;\r\n      letter-spacing: 1.5px !important;\r\n   }\r\n\r\n\r\n\r\n   .font-small {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 12px !important;\r\n      color: #999 !important;\r\n      font-weight: 500 !important;\r\n\r\n      a {\r\n         font-family: \"benton-sans\",sans-serif !important;\r\n         font-size: 12px !important;\r\n         color: #999 !important;\r\n         font-weight: 500 !important;\r\n      }\r\n\r\n      a:hover {\r\n         color: #999 !important;\r\n      }\r\n   }\r\n\r\n   .ui.form input[type=text] {\r\n      font-family: \"benton-sans\",sans-serif;\r\n      font-size: 16px;\r\n   }\r\n\r\n\r\n   .font-bold {\r\n      font-weight: 600;\r\n   }\r\n\r\n\r\n   .color-seafoam-blue {\r\n      color: #6ad1e3 !important;\r\n   }\r\n   .color-blue {\r\n      color: #0072ce !important;\r\n   }\r\n   .color-brown-grey {\r\n      color: #999;\r\n   }\r\n   .color-charcoal-grey {\r\n      color: #4a4f54 !important;\r\n   }\r\n   .color-black {\r\n      color: #24272a !important;\r\n\r\n      :hover {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n   .ui.popup > .header {\r\n      font-weight: 600 !important;\r\n      color: #24272a !important;\r\n   }\r\n\r\n   .border-bottom {\r\n      border-bottom: 2px solid #f8f8f8 !important;\r\n   }\r\n   .border-bottom-bold {\r\n      border-bottom: 4px solid #e6e6e6 !important;\r\n   }\r\n   .border-bottom-light {\r\n      border-bottom: 1px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-top {\r\n      border-top: 2px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-top-bold {\r\n      border-top: 4px solid #e6e6e6 !important;\r\n   }\r\n   .border-top-light {\r\n      border-top: 1px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-left-bold {\r\n      border-left: 4px solid #f8f8f8 !important;\r\n   }\r\n\r\n\r\n   .border-right {\r\n      border-right: 2px solid #e6e6e6;\r\n   }\r\n   .border-right-light {\r\n      border-right: 1px solid #e6e6e6;\r\n   }\r\n   .background-lg {\r\n      background: #f8f8f8;\r\n   }\r\n\r\n\r\n   .button {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n   }\r\n\r\n\r\n   .box {\r\n      border: 4px solid #e6e6e6;\r\n      border-radius: 8px;\r\n      margin-bottom: 0px;\r\n      position: relative;\r\n      min-height: 100px;\r\n      position: relative;\r\n\r\n      .row {\r\n         padding: 0px !important;\r\n      }\r\n      .column {\r\n         word-wrap: break-word;\r\n      }\r\n      .segment {\r\n         padding: 30px 0 20px 0 !important;\r\n      }\r\n      .list {\r\n         > .item {\r\n            > img {\r\n               top: -4px;\r\n               margin: 0 10px;\r\n            }\r\n            > img.transarrow {\r\n               width: 11px !important;\r\n            }\r\n         }\r\n         > h5.item {\r\n            top: -4px;\r\n         }\r\n      } \r\n   }\r\n\r\n\r\n   .copy-image {\r\n      width: 18px !important;\r\n      margin: 0px 10px 0 0px !important;\r\n      top: -4px !important;\r\n   }\r\n\r\n\r\n   .balance-image {\r\n      font-size: 20px !important;\r\n      font-weight: 100 !important;\r\n\r\n      &-big {\r\n         font-size: 32px !important;\r\n         font-weight: 100 !important;\r\n      }\r\n   }\r\n   \r\n\r\n   .transactions-block .item {\r\n      margin-left: 10px !important;\r\n   }\r\n\r\n\r\n   .hide {\r\n      display: none !important;\r\n   }\r\n\r\n\r\n   .App-section {\r\n      width: 860px;\r\n      margin: auto;\r\n      margin-top: 10px;\r\n      margin-bottom: 20px;\r\n   }\r\n\r\n   .App-error-message {\r\n      width: 100%;\r\n      text-align: center;\r\n      display: inline-block;\r\n      margin: auto;\r\n   }\r\n\r\n   .ui.list .list>.item .header, .ui.list>.item .header {\r\n      font-family: \"benton-sans\",sans-serif;\r\n      \r\n   }\r\n   .ui.popup>.header, .ui.popup {\r\n      color: #999;\r\n      font-family: \"benton-sans\",sans-serif;\r\n      font-weight: 500;\r\n      font-size: 14px !important;\r\n   }\r\n   .ui.popup {\r\n      border: 1px solid #eee;\r\n   }\r\n   .ui.left.center.popup:before {\r\n      box-shadow: 1px -1px 0 0 #eee;\r\n   }\r\n   .ui.bottom.right.popup:before {\r\n      box-shadow: -1px -1px 0 0 #eee;\r\n   }\r\n\r\n\r\n   @media screen and (max-width: 767px) {\r\n      h1, .h1 {\r\n         font-size: 38px !important;\r\n         font-weight: 500;\r\n         line-height: 50px;\r\n         color: #24272a;\r\n      }\r\n      h2, .h2 {\r\n         font-size: 24px !important;\r\n         font-weight: 600;\r\n         line-height: 1.33;\r\n         margin: 0px;\r\n      }\r\n      h3, .h3 {\r\n         font-size: 16px !important;\r\n         font-weight: 500;\r\n         line-height: 1.33;\r\n         margin: 0px;\r\n      }\r\n      \r\n\r\n      .box .column {\r\n         padding: 16px 10px !important;\r\n      }\r\n\r\n      .App {\r\n         .main {\r\n            padding-bottom: 300px;\r\n         }\r\n      }\r\n   }\r\n`\r\n","import React, { Component } from 'react'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\n\r\nimport '../index.css'\r\n\r\nimport ResponsiveContainer from './responsive/ResponsiveContainer'\r\nimport Footer from './common/Footer'\r\nimport DashboardDetailWithRouter from './dashboard/DashboardDetail'\r\nimport { CreateAccountWithRouter } from './accounts/CreateAccount'\r\nimport { SetRecoveryInfoWithRouter } from './accounts/SetRecoveryInfo'\r\nimport { RecoverAccountWithRouter } from './accounts/RecoverAccount'\r\nimport { LoginWithRouter } from './login/Login'\r\nimport { ContactsWithRouter } from './contacts/Contacts'\r\nimport { AuthorizedAppsWithRouter } from './authorized-apps/AuthorizedApps'\r\nimport { SendMoneyWithRouter } from './send-money/SendMoney'\r\nimport { ProfileWithRouter } from './profile/Profile'\r\n\r\nimport { ThemeProvider } from 'styled-components'\r\nimport GlobalStyle from './GlobalStyle'\r\nconst theme = {}\r\n\r\n// const PATH_PREFIX = process.env.PUBLIC_URL\r\n\r\nclass Routing extends Component {\r\n   render() {\r\n      return (\r\n         <div className='App'>\r\n            <GlobalStyle />\r\n\r\n            <ConnectedRouter \r\n               // basename={PATH_PREFIX}  \r\n               history={this.props.history}\r\n            >\r\n               <ThemeProvider theme={theme}>\r\n                  <ResponsiveContainer>\r\n                     <Switch>\r\n                        <Route\r\n                           exact\r\n                           path='/'\r\n                           component={DashboardDetailWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/create'\r\n                           component={CreateAccountWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/set-recovery/:accountId'\r\n                           component={SetRecoveryInfoWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/recover-account'\r\n                           component={RecoverAccountWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/login'\r\n                           component={LoginWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/contacts'\r\n                           component={ContactsWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/authorized-apps'\r\n                           component={AuthorizedAppsWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/send-money/:id?'\r\n                           component={SendMoneyWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/profile'\r\n                           component={ProfileWithRouter}\r\n                        />\r\n\r\n                        <Route component={DashboardDetailWithRouter} />\r\n                     </Switch>\r\n                     <Footer />\r\n                  </ResponsiveContainer>\r\n               </ThemeProvider>\r\n            </ConnectedRouter>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Routing\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport createRootReducer from './reducers'\r\nimport createMiddleware from './middleware'\r\n\r\nimport Routing from './components/Routing'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst store = createStore(createRootReducer(history), createMiddleware(history))\r\n\r\nReactDOM.render(\r\n   <Provider store={store}>\r\n      <Routing history={history} />\r\n   </Provider>,\r\n   document.getElementById('root')\r\n)\r\nserviceWorker.unregister()\r\n","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport account from './account'\r\n\r\nexport default (history) => combineReducers({\r\n   account,\r\n   router: connectRouter(history)\r\n})\r\n","import * as nearlib from 'nearlib'\r\nimport sendJson from 'fetch-send-json'\r\nimport * as b58 from 'b58'\r\nimport sha256 from 'js-sha256';\r\n\r\nconst WALLET_CREATE_NEW_ACCOUNT_URL = `/create/`\r\n\r\nconst NETWORK_ID = process.env.REACT_APP_NETWORK_ID || 'default'\r\nconst ACCOUNT_HELPER_URL = process.env.REACT_APP_ACCOUNT_HELPER_URL || ' https://near-contract-helper.onrender.com'\r\nconst CONTRACT_CREATE_ACCOUNT_URL = `${ACCOUNT_HELPER_URL}/account`\r\nconst NODE_URL = process.env.REACT_APP_NODE_URL || 'https://rpc.nearprotocol.com'\r\nconst HELPER_KEY = process.env.REACT_APP_ACCOUNT_HELPER_KEY || '22skMptHjFWNyuEWY22ftn2AbLPSYpmYwGJRGwpNHbTV'\r\n\r\nconst KEY_UNIQUE_PREFIX = '_4:'\r\nconst KEY_WALLET_ACCOUNTS = KEY_UNIQUE_PREFIX + 'wallet:accounts_v2'\r\nconst KEY_ACTIVE_ACCOUNT_ID = KEY_UNIQUE_PREFIX + 'wallet:active_account_id_v2'\r\n\r\nconst ACCOUNT_ID_REGEX = /^[a-z0-9@._-]{5,32}$/\r\n\r\nexport class Wallet {\r\n   constructor() {\r\n      this.key_store = new nearlib.keyStores.BrowserLocalStorageKeyStore()\r\n      this.connection = nearlib.Connection.fromConfig({\r\n         networkId: NETWORK_ID,\r\n         provider: { type: 'JsonRpcProvider', args: { url: NODE_URL + '/' } },\r\n         signer: { type: 'InMemorySigner', keyStore: this.key_store }\r\n      })\r\n      this.accounts = JSON.parse(\r\n         localStorage.getItem(KEY_WALLET_ACCOUNTS) || '{}'\r\n      )\r\n      this.accountId = localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID) || ''\r\n   }\r\n\r\n   save() {\r\n      localStorage.setItem(KEY_ACTIVE_ACCOUNT_ID, this.accountId)\r\n      localStorage.setItem(KEY_WALLET_ACCOUNTS, JSON.stringify(this.accounts))\r\n   }\r\n\r\n   getAccountId() {\r\n      return this.accountId\r\n   }\r\n\r\n   selectAccount(accountId) {\r\n      if (!(accountId in this.accounts)) {\r\n         return false\r\n      }\r\n      this.accountId = accountId\r\n      this.save()\r\n   }\r\n\r\n   isLegitAccountId(accountId) {\r\n      return ACCOUNT_ID_REGEX.test(accountId)\r\n   }\r\n\r\n   async sendMoney(receiverId, amount) {\r\n      await this.getAccount(this.accountId).sendMoney(receiverId, amount)\r\n   }\r\n\r\n   redirectToCreateAccount(options = {}, history) {\r\n      const param = {\r\n         next_url: window.location.search\r\n      }\r\n      if (options.reset_accounts) {\r\n         param.reset_accounts = true\r\n      }\r\n      //  let url = WALLET_CREATE_NEW_ACCOUNT_URL + \"?\" + $.param(param)\r\n      let url =\r\n         WALLET_CREATE_NEW_ACCOUNT_URL +\r\n         '?' +\r\n         Object.keys(param).map(\r\n            (p, i) =>\r\n               `${i ? '&' : ''}${encodeURIComponent(p)}=${encodeURIComponent(\r\n                  param[p]\r\n               )}`\r\n         )\r\n      history ? history.push(url) : window.location.replace(url)\r\n   }\r\n\r\n   isEmpty() {\r\n      return !this.accounts || !Object.keys(this.accounts).length\r\n   }\r\n\r\n   redirectIfEmpty(history) {\r\n      if (this.isEmpty()) {\r\n         this.redirectToCreateAccount({}, history)\r\n      }\r\n   }\r\n\r\n   async loadAccount(accountId) {\r\n      if (!(accountId in this.accounts)) {\r\n         throw new Error('Account ' + accountId + \" doesn't exist.\")\r\n      }\r\n      return await this.getAccount(this.accountId).state()\r\n   }\r\n\r\n   async getAccountDetails() {\r\n      if (!this.accountId) return null\r\n      return await this.getAccount(this.accountId).getAccountDetails(localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID))\r\n   }\r\n\r\n   async removeAccessKey(publicKey) {\r\n      return await this.getAccount(this.accountId).removeKey(publicKey)\r\n   }\r\n\r\n   async checkAccountAvailable(accountId) {\r\n      if (!this.isLegitAccountId(accountId)) {\r\n         throw new Error('Invalid username.')\r\n      }  \r\n      if (accountId !== this.accountId) {\r\n         return await this.getAccount(accountId).state()\r\n      } else {\r\n         throw new Error('You are logged into account ' + accountId + ' .')\r\n      }\r\n   }\r\n\r\n   async checkNewAccount(accountId) {\r\n      if (!this.isLegitAccountId(accountId)) {\r\n         throw new Error('Invalid username.')\r\n      }\r\n      if (accountId in this.accounts) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let remoteAccount = null\r\n      try {\r\n         remoteAccount = await this.getAccount(accountId).state()\r\n      } catch (e) {\r\n         return true\r\n      }\r\n      if (!!remoteAccount) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n   }\r\n\r\n   async createNewAccount(accountId) {\r\n      this.checkNewAccount()\r\n\r\n      const keyPair = nearlib.KeyPair.fromRandom('ed25519')\r\n      await sendJson('POST', CONTRACT_CREATE_ACCOUNT_URL, {\r\n         newAccountId: accountId,\r\n         newAccountPublicKey: keyPair.getPublicKey()\r\n      })\r\n      await this.saveAndSelectAccount(accountId, keyPair);\r\n   }\r\n\r\n   async saveAndSelectAccount(accountId, keyPair) {\r\n      await this.key_store.setKey(NETWORK_ID, accountId, keyPair)\r\n      this.accounts[accountId] = true\r\n      this.accountId = accountId\r\n      this.save()\r\n   }\r\n\r\n   async addAccessKey(accountId, contractId, publicKey, successUrl, app_title) {\r\n      return await this.getAccount(this.accountId).addKey(\r\n         publicKey,\r\n         contractId,\r\n         '', // methodName\r\n         '', // fundingOwner\r\n         0 // fundingAmount\r\n      )\r\n   }\r\n\r\n   clearState() {\r\n      this.accounts = {}\r\n      this.accountId = ''\r\n      this.save()\r\n   }\r\n\r\n   getAccount(accountId) {\r\n      return new nearlib.Account(this.connection, accountId)\r\n   }\r\n\r\n   requestCode(phoneNumber, accountId) {\r\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/requestCode`)\r\n   }\r\n\r\n   async validateCode(phoneNumber, accountId, postData) {\r\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/validateCode`, postData)\r\n   }\r\n\r\n   async setupAccountRecovery(phoneNumber, accountId, securityCode) {\r\n      const account = this.getAccount(accountId)\r\n      const state = await account.state()\r\n      if (!state.public_keys.some(key => b58.encode(Buffer.from(key)) === HELPER_KEY)) {\r\n         await account.addKey(HELPER_KEY)\r\n      }\r\n\r\n      const hash =  Uint8Array.from(sha256.array(Buffer.from(securityCode)));\r\n      const { signature } = await this.connection.signer.signHash(hash, accountId, NETWORK_ID)\r\n      await this.validateCode(phoneNumber, accountId, { securityCode, signature: Buffer.from(signature).toString('base64') })\r\n   }\r\n\r\n   async recoverAccount(phoneNumber, accountId, securityCode) {\r\n      const keyPair = nearlib.KeyPair.fromRandom('ed25519')\r\n      await this.validateCode(phoneNumber, accountId, { securityCode, publicKey: keyPair.publicKey })\r\n      await this.saveAndSelectAccount(accountId, keyPair)\r\n   }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/icon-close.5c3cedcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-down.fcefbf0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-send.f7a4807a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-app-default.11c1df80.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-check-blue.6dc3bbf5.svg\";"],"sourceRoot":""}