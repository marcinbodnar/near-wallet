{"version":3,"sources":["images/wallet.png","images/icon-account.svg","images/icon-recent.svg","images/icon-arrow-right.svg","images/icon-m-transaction.svg","images/icon-contacts.svg","images/icon-authorized.svg","images/icon-logout.svg","images/icon-activity.svg","images/icon-mobile-menu.svg","images/icon-help.svg","images/near.svg","images/footer-nearkat.svg","images/icon-t-contract.svg","images/icon-arrow-grn.svg","images/icon-arrow-blk.svg","images/icon-authorized-grey.svg","images/icon-account-grey.svg","images/near_logo.svg","images/icon-deny.svg","images/icon-authorize.svg","images/icon-add-blue.svg","utils/wallet.js","images/icon-arrow-up.svg","images/icon-m-filter.svg","images/icon-arrow-left.svg","images/icon-m-search.svg","images/icon-lock.svg","images/icon-keys-grey.svg","images/icon-doc-grey.svg","images/icon-check-blue.svg","images/icon-activity-grey.svg","images/icon-contacts-grey.svg","images/icon-t-stake.svg","images/icon-t-transfer.svg","actions/account.js","reducers/account.js","middleware/index.js","components/responsive/PopupMenuTrigger.js","components/responsive/MobileView.js","components/responsive/DesktopPopup.js","components/responsive/DesktopView.js","components/responsive/ResponsiveContainer.js","components/common/Footer.js","components/dashboard/DashboardOtherAssets.js","components/dashboard/DashboardContainer.js","components/dashboard/DashboardNotice.js","components/dashboard/ListItem.js","components/dashboard/DashboardActivity.js","components/dashboard/DashboardDetail.js","components/accounts/CreateAccountSection.js","components/accounts/CreateAccoungFormInput.js","components/accounts/CreateAccountForm.js","components/common/Disclaimer.js","components/accounts/NearInfo.js","components/accounts/CreateAccountContainer.js","components/accounts/CreateAccount.js","components/common/RequestStatusBox.js","components/accounts/AccountFormSection.js","components/accounts/SetRecoveryInfoForm.js","components/accounts/SetRecoveryInfoContainer.js","components/accounts/SetRecoveryInfo.js","components/accounts/RecoverAccountForm.js","components/accounts/RecoverAccountContainer.js","components/accounts/RecoverAccount.js","components/login/LoginContainer.js","components/login/LoginForm.js","components/login/Login.js","components/pagination/PaginationTab.js","components/pagination/PaginationPaging.js","components/common/Search.js","components/pagination/PaginationSortBy.js","components/pagination/PaginationBlock.js","components/contacts/ContactsContainer.js","components/contacts/Contacts.js","components/authorized-apps/AuthorizedAppsContainer.js","components/authorized-apps/AuthorizedApps.js","components/send-money/SendMoneyContainer.js","components/send-money/SendMoneyFirstStep.js","components/send-money/SendMoneySecondStep.js","components/send-money/SendMoneyThirdStep.js","components/send-money/SendMoney.js","components/profile/ProfileContainer.js","components/profile/ProfileDetails.js","components/profile/ProfileSection.js","components/profile/ProfileYourKeys.js","components/profile/ProfileNotice.js","components/profile/Profile.js","components/GlobalStyle.js","components/Routing.js","serviceWorker.js","index.js","reducers/index.js","images/icon-arrow-down.svg","images/icon-problems.svg","images/icon-close.svg","images/icon-send.svg","images/icon-app-default.svg"],"names":["module","exports","__webpack_require__","p","ACCOUNT_HELPER_URL","CONTRACT_CREATE_ACCOUNT_URL","concat","NODE_URL","KEY_WALLET_ACCOUNTS","KEY_UNIQUE_PREFIX","KEY_WALLET_TOKENS","KEY_ACTIVE_ACCOUNT_ID","ACCOUNT_ID_REGEX","Wallet","Object","z_WWW_toptal_Near_Protocol_wallet_3_fork_fork_authorized_apps_near_wallet_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","key_store","nearlib","BrowserLocalStorageKeystore","near","Near","createDefaultConfig","account","Account","nearClient","accounts","JSON","parse","localStorage","getItem","tokens","accountId","z_WWW_toptal_Near_Protocol_wallet_3_fork_fork_authorized_apps_near_wallet_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","setItem","stringify","save","app_url","app_title","contract_id","token","possible","i","charAt","Math","floor","random","length","isLegitAccountId","account_id","test","_sendTransaction","z_WWW_toptal_Near_Protocol_wallet_3_fork_fork_authorized_apps_near_wallet_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","z_WWW_toptal_Near_Protocol_wallet_3_fork_fork_authorized_apps_near_wallet_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","senderId","receiverId","methodName","amount","args","wrap","_context","prev","next","scheduleFunctionCall","abrupt","sent","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","options","undefined","history","param","next_url","window","location","search","reset_accounts","url","WALLET_CREATE_NEW_ACCOUNT_URL","keys","map","encodeURIComponent","push","replace","isEmpty","redirectToCreateAccount","_loadAccount","_callee2","_context2","Error","viewAccount","_x6","_x7","_getAccountDetails","_callee3","_context3","authorizedApps","contractId","publicKey","transactions","_removeAccessKey","_callee4","_context4","getAccountDetails","_x8","_checkAccount","_callee5","_context5","_x9","_checkNewAccount","_callee6","remoteAccount","_context6","t0","_x10","_createNewAccount","_callee7","keyPair","_this","_context7","KeyPair","fromRandomSeed","Promise","resolve","reject","data","newAccountId","newAccountPublicKey","getPublicKey","xhr","XMLHttpRequest","open","setRequestHeader","onload","status","setKey","catch","console","log","responseText","send","_x11","_addAccessKey","_callee8","successUrl","addAccessKeyResponse","result","parsedUrl","redirectUrl","_context8","addAccessKey","waitForTransactionResult","URL","searchParams","set","href","_x12","_x13","_x14","_x15","addEventListener","receiveMessage","bind","_processTransactionMessage","_callee9","action","app_data","hash","signature","_context9","parseInt","sendTransaction","signer","signHash","_x16","_x17","phoneNumber","sendJson","_validateCode","_callee10","securityCode","_ref","_context10","getKey","SimpleKeyStoreSigner","signBuffer","Buffer","from","_x18","_x19","_x20","event","e","request_id","reply","d","source","postMessage","origin","processTransactionMessage","then","success","error","REFRESH_ACCOUNT","LOADER_ACCOUNT","REFRESH_URL","handleRefreshAccount","wallet","dispatch","getState","redirectIfEmpty","getAccountId","type","loader","loadAccount","v","authToken","newAccessToken","stake","nonce","code_hash","message","indexOf","clearState","handleRefreshUrl","title","success_url","failure_url","public_key","createActions","REQUEST_CODE","requestCode","successCode","errorCode","VALIDATE_CODE","validateCode","initialState","formLoader","sentSms","requestResultReducer","handleActions","defineProperty","combineActions","state","_ref2","payload","meta","objectSpread","requestStatus","messageCode","reducer","_ref3","ready","reduceReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","readyStatePromise","store","makeAction","newAction","assign","CustomDiv","styled","_templateObject","PopupMenuTrigger","handleClick","_ref$dropdown","dropdown","react_default","createElement","onClick","className","style","float","Image","src","AccountGreyImage","MobileMenuImage","CloseImage","ArrowDownImage","Loader","active","inline","size","CustomResponsive","Responsive","MobileView_templateObject","getWidth","onlyTablet","minWidth","innerWidth","MobileView","handleDropdown","setState","handleSelectAccount","selectAccount","props","redirectCreateAccount","_this2","maxWidth","Segment","basic","Menu","borderless","react_router_dom","to","LogoImage","responsive_PopupMenuTrigger","Item","RecentImage","SendImage","List","as","filter","Button","children","Component","defaultProps","mapDispatchToProps","connect","withRouter","CustomPopup","Popup","DesktopPopup_templateObject","DesktopPopup","handleToggle","popupOpen","trigger","position","Icon","AccountImage","Content","Link","DesktopView_templateObject","DesktopView","activeItem","hideFixedMenu","fixed","showFixedMenu","handleItemClick","name","DesktopView_CustomResponsive","onlyComputer","Visibility","once","onBottomPassed","onBottomPassedReverse","HelpImage","responsive_DesktopPopup","ResponsiveContainer","react","responsive_DesktopView","responsive_MobileView","FooterGrid","Grid","Footer_templateObject","columns","Column","textAlign","verticalAlign","widescreen","largeScreen","computer","tablet","mobile","Group","LogoFooterImage","only","floated","NearkatImage","DashboardOtherAssets_templateObject","TContractImage","CustomContainer","Container","DashboardContainer_templateObject","ArrowGrnImage","ArrowRightImage","DashboardContainer","Row","DashboardNotice_templateObject","CustomGridRow","ListItem_templateObject","ListItem","row","_ref$wide","wide","_ref$showSub","showSub","toggleShowSub","showSubOpen","align","ArrowBlkImage","ArrowRight","CustomGrid","DashboardActivity_templateObject","DashboardActivity","image","activity","DashboardActivity_CustomGrid","width","Header","Dimmer","inverted","dashboard_ListItem","DashboardDetail","notice","newcontacts","refreshAuthorizedApps","response","r","AppDefaultImage","handleNotice","_this$state","dashboard_DashboardContainer","dashboard_DashboardActivity","AuthorizedGreyImage","CreateAccountSection_templateObject","CreateAccountSection","successMessage","errorMessage","CreateAccountSection_CustomGrid","CustomFormInput","Form","Input","CreateAccoungFormInput_templateObject","ProblemsImage","CheckBlueImage","CreateAccoungFormInput","handleChangeAccountId","loading","onChange","placeholder","required","AccountForm","CreateAccountForm_templateObject","CreateAccountForm","handleSubmit","handleRecaptcha","autoComplete","onSubmit","accounts_CreateAccoungFormInput","onlyMobile","lib_es","sitekey","disabled","DisclaimerGrid","Disclaimer_templateObject","Disclaimer","CustomList","NearInfo_templateObject","NearInfo","NearInfo_CustomList","NearLogoImage","CreateAccountContainer_templateObject","CreateAccountContainer","CreateAccountContainer_CustomContainer","stackable","accounts_NearInfo","common_Disclaimer","CreateAccount","componentDidMount","timeout","clearTimeout","setTimeout","checkNewAccount","finally","preventDefault","createNewAccount","accounts_CreateAccountContainer","accounts_CreateAccountSection","accounts_CreateAccountForm","CreateAccountWithRouter","RequestStatusBoxGrid","RequestStatusBox_templateObject","RequestStatusBox","AccountFormSection","common_RequestStatusBox","RecoveryInfoForm","SetRecoveryInfoForm_templateObject","SetRecoveryInfoForm","isLegit","handleChange","Field","react_phone_number_input","SetRecoveryInfoContainer_templateObject","SetRecoveryInfoContainer","SetRecoveryInfoContainer_CustomContainer","SetRecoveryInfo","isLegitField","nextUrl","isValidPhoneNumber","trim","match","combinedState","accounts_SetRecoveryInfoContainer","accounts_AccountFormSection","accounts_SetRecoveryInfoForm","SetRecoveryInfoWithRouter","_ref4","_ref5","params","RecoverAccountForm_templateObject","RecoverAccountForm","RecoverAccountForm_RecoveryInfoForm","RecoverAccountContainer_templateObject","RecoverAccountContainer","RecoverAccountContainer_CustomContainer","RecoverAccount","accounts_RecoverAccountContainer","accounts_RecoverAccountForm","RecoverAccountWithRouter","LoginContainer_templateObject","DenyImage","LoginContainer","appTitle","LoginContainer_CustomContainer","Dimmable","horizontal","AuthorizeImage","LoginForm_templateObject","ArrowUpImage","AddBlueImage","handleOnClick","handleDeny","handleAllow","LoginForm_CustomGrid","Login","login_LoginContainer","login_LoginForm","LoginWithRouter","PaginationTabList","PaginationTab_templateObject","LEFT_PAGE","RIGHT_PAGE","range","step","_Component","PaginationTab","_getPrototypeOf2","classCallCheck","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","call","currentPage","gotoPage","page","onPageChanged","evt","target","blur","handleMoveLeft","pageNeighbors","handleMoveRight","fetchPageNumbers","totalPages","getTotalPages","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","inherits","createClass","ceil","totalRecords","pageLimit","initialPage","index","circular","ArrowLeftImage","onPageChange","PaginationPaging_templateObject","Search_templateObject","MSearchImage","PaginationSortBy_templateObject","ArrowDown","PaginationBlockGrid","PaginationBlock_templateObject","MTransactionImage","PaginationBlock","dropdownType","filterTypes","img","TransactionFilter","pagingDropdown","pagingValue","buttonRadio","handleOnClickPaging","handleDropdownClick","handlePagingDropdownClick","buttonRadioClick","pageNumber","_this$props","_this$props$showSub","subPage","showSubData","toggleCloseSub","handleDeauthorize","_this$props2","backgroundColor","ContactsContainer_templateObject","ContactsContainer","ContactsContainer_CustomContainer","Contacts","_","_this3","contacts_ContactsContainer","pagination_PaginationBlock","ContactsWithRouter","AuthorizedAppsContainer_templateObject","AuthorizedAppsContainer","total","AuthorizedAppsContainer_CustomContainer","AuthorizedApps","removeAccessKey","authorized_apps_AuthorizedAppsContainer","AuthorizedAppsWithRouter","SendMoneyContainer_templateObject","SendMoneyContainer","SendMoneyContainer_CustomContainer","SendMoneyFirstStep_templateObject","SendMoneyFirstStep","handleNextStep","note","paramAccountId","SendMoneyFirstStep_CustomList","min","parseFloat","SendMoneySecondStep_templateObject","SendMoneySecondStep","handleExpandNote","expandNote","SendMoneySecondStep_CustomList","SendMoneyThirdStep_templateObject","SendMoneyThirdStep","SendMoneyThirdStep_CustomList","SendMoney","checkAccount","paramId","id","send_money_SendMoneyContainer","send_money_SendMoneyFirstStep","send_money_SendMoneySecondStep","send_money_SendMoneyThirdStep","SendMoneyWithRouter","ProfileContainer_templateObject","ProfileContainer","ProfileContainer_CustomContainer","ProfileDetails_templateObject","ProfileDetails","ProfileDetails_CustomGrid","LockImage","hoverable","ProfileSection","ProfileYourKeys_templateObject","ProfileNotice_templateObject","Profile","profile_ProfileContainer","profile_ProfileSection","profile_ProfileDetails","ProfileWithRouter","createGlobalStyle","GlobalStyle_templateObject","theme","Routing","GlobalStyle","esm","styled_components_browser_esm","responsive_ResponsiveContainer","react_router","exact","path","component","DashboardDetailWithRouter","Footer","Boolean","hostname","createBrowserHistory","basename","process","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","createMiddleware","ReactDOM","render","es","components_Routing","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.9df28f41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallet.89d47110.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-account.ab010182.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-recent.83086272.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-right.2c9f3083.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-transaction.23b32201.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts.f6e4afac.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized.2f2edb66.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-logout.9cae8fb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity.b48f419e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-mobile-menu.1acfd8f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-help.f6c0707a.svg\";","module.exports = __webpack_public_path__ + \"static/media/near.584de59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/footer-nearkat.3083dec6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-contract.35047442.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-grn.eaf2a8e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-blk.79cca70c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized-grey.4d2fc992.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-account-grey.4d7da491.svg\";","module.exports = __webpack_public_path__ + \"static/media/near_logo.f25a0b86.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-deny.6946f17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorize.377da011.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-add-blue.be7039c5.svg\";","import nearlib from 'nearlib'\r\nimport sendJson from 'fetch-send-json'\r\n\r\nconst WALLET_CREATE_NEW_ACCOUNT_URL = `/create/`\r\n\r\nconst ACCOUNT_HELPER_URL = 'https://studio.nearprotocol.com/contract-api'\r\nconst CONTRACT_CREATE_ACCOUNT_URL = `${ACCOUNT_HELPER_URL}/account`\r\nconst NODE_URL = 'https://studio.nearprotocol.com/devnet'\r\n\r\nconst KEY_UNIQUE_PREFIX = '_4:'\r\nconst KEY_WALLET_ACCOUNTS = KEY_UNIQUE_PREFIX + 'wallet:accounts_v2'\r\nconst KEY_WALLET_TOKENS = KEY_UNIQUE_PREFIX + 'wallet:tokens_v2'\r\nconst KEY_ACTIVE_ACCOUNT_ID = KEY_UNIQUE_PREFIX + 'wallet:active_account_id_v2'\r\n\r\nconst ACCOUNT_ID_REGEX = /^[a-z0-9@._-]{5,32}$/\r\n\r\nexport class Wallet {\r\n   constructor() {\r\n      this.key_store = new nearlib.BrowserLocalStorageKeystore()\r\n      this.near = nearlib.Near.createDefaultConfig(NODE_URL)\r\n      this.account = new nearlib.Account(this.near.nearClient)\r\n      this.accounts = JSON.parse(\r\n         localStorage.getItem(KEY_WALLET_ACCOUNTS) || '{}'\r\n      )\r\n      this.tokens = JSON.parse(localStorage.getItem(KEY_WALLET_TOKENS) || '{}')\r\n      this.accountId = localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID) || ''\r\n   }\r\n\r\n   save() {\r\n      localStorage.setItem(KEY_ACTIVE_ACCOUNT_ID, this.accountId)\r\n      localStorage.setItem(KEY_WALLET_ACCOUNTS, JSON.stringify(this.accounts))\r\n      localStorage.setItem(KEY_WALLET_TOKENS, JSON.stringify(this.tokens))\r\n   }\r\n\r\n   getAccountId() {\r\n      return this.accountId\r\n   }\r\n\r\n   selectAccount(accountId) {\r\n      if (!(accountId in this.accounts)) {\r\n         return false\r\n      }\r\n      this.accountId = accountId\r\n      this.save()\r\n   }\r\n\r\n   newAccessToken(app_url, app_title, contract_id) {\r\n      var token = ''\r\n      var possible =\r\n         'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n\r\n      for (var i = 0; i < 32; i++) {\r\n         token += possible.charAt(Math.floor(Math.random() * possible.length))\r\n      }\r\n\r\n      if (!this.isLegitAccountId(contract_id)) {\r\n         contract_id = ''\r\n      }\r\n\r\n      this.tokens[token] = {\r\n         app_url,\r\n         app_title,\r\n         contract_id,\r\n         account_id: this.accountId\r\n      }\r\n      this.save()\r\n      return token\r\n   }\r\n\r\n   isLegitAccountId(accountId) {\r\n      return ACCOUNT_ID_REGEX.test(accountId)\r\n   }\r\n\r\n   async sendTransaction(senderId, receiverId, methodName, amount, args) {\r\n      return await this.near.scheduleFunctionCall(\r\n         amount,\r\n         senderId,\r\n         receiverId,\r\n         methodName,\r\n         args || {}\r\n      )\r\n   }\r\n\r\n   redirectToCreateAccount(options = {}, history) {\r\n      const param = {\r\n         next_url: window.location.search\r\n      }\r\n      if (options.reset_accounts) {\r\n         param.reset_accounts = true\r\n      }\r\n      //  let url = WALLET_CREATE_NEW_ACCOUNT_URL + \"?\" + $.param(param)\r\n      let url =\r\n         WALLET_CREATE_NEW_ACCOUNT_URL +\r\n         '?' +\r\n         Object.keys(param).map(\r\n            (p, i) =>\r\n               `${i ? '&' : ''}${encodeURIComponent(p)}=${encodeURIComponent(\r\n                  param[p]\r\n               )}`\r\n         )\r\n      history ? history.push(url) : window.location.replace(url)\r\n   }\r\n\r\n   isEmpty() {\r\n      return !this.accounts || !Object.keys(this.accounts).length\r\n   }\r\n\r\n   redirectIfEmpty(history) {\r\n      if (this.isEmpty()) {\r\n         this.redirectToCreateAccount({}, history)\r\n      }\r\n   }\r\n\r\n   async loadAccount(accountId, history) {\r\n      if (!(accountId in this.accounts)) {\r\n         throw new Error('Account ' + accountId + \" doesn't exist.\")\r\n      }\r\n      return await this.near.nearClient.viewAccount(accountId)\r\n   }\r\n\r\n   async getAccountDetails() {\r\n      // return await this.account.getAccountDetails(this.accountId)\r\n\r\n      return {\r\n         authorizedApps: [\r\n            {\r\n               contractId: 'studio-znshwhk6i',\r\n               amount: 100,\r\n               publicKey: '85Th4x9hCpgQ5vFZbMZ76RhsQpyAFeMsnnouxMbNfCKS'\r\n            },\r\n            {\r\n               contractId: 'studio-ee4arncdv',\r\n               amount: 200,\r\n               publicKey: 'DcXCBrXq77PHEuMVLChshGPtUCfUEjJHGuZ9hHos6VEp'\r\n            },\r\n            {\r\n               contractId: 'studio-znshwhk6i',\r\n               amount: 100,\r\n               publicKey: '85Th4x9hCpgQ5vFZbMZ76RhsQpyAFeMsnnouxMbNfCKS'\r\n            },\r\n            {\r\n               contractId: 'studio-ee4arncdv',\r\n               amount: 200,\r\n               publicKey: 'DcXCBrXq77PHEuMVLChshGPtUCfUEjJHGuZ9hHos6VEp'\r\n            },\r\n            {\r\n               contractId: 'studio-znshwhk6i',\r\n               amount: 100,\r\n               publicKey: '85Th4x9hCpgQ5vFZbMZ76RhsQpyAFeMsnnouxMbNfCKS'\r\n            },\r\n            {\r\n               contractId: 'studio-ee4arncdv',\r\n               amount: 200,\r\n               publicKey: 'DcXCBrXq77PHEuMVLChshGPtUCfUEjJHGuZ9hHos6VEp'\r\n            },\r\n            {\r\n               contractId: 'studio-znshwhk6i',\r\n               amount: 100,\r\n               publicKey: '85Th4x9hCpgQ5vFZbMZ76RhsQpyAFeMsnnouxMbNfCKS'\r\n            },\r\n            {\r\n               contractId: 'studio-ee4arncdv',\r\n               amount: 200,\r\n               publicKey: 'DcXCBrXq77PHEuMVLChshGPtUCfUEjJHGuZ9hHos6VEp'\r\n            }\r\n         ],\r\n         transactions: []\r\n      }\r\n   }\r\n\r\n   async removeAccessKey(publicKey) {\r\n      return await this.account.getAccountDetails(this.accountId, publicKey)\r\n   }\r\n\r\n   async checkAccount(accountId) {\r\n      if (accountId !== this.accountId) {\r\n         return await this.near.nearClient.viewAccount(accountId)\r\n      } else {\r\n         throw new Error('You are logged into account ' + accountId + ' .')\r\n      }\r\n   }\r\n\r\n   async checkNewAccount(accountId) {\r\n      if (accountId in this.accounts) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let remoteAccount = null\r\n      try {\r\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\r\n      } catch (e) {\r\n         // expected\r\n      }\r\n      if (!!remoteAccount) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n   }\r\n\r\n   async createNewAccount(accountId) {\r\n      if (accountId in this.accounts) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let remoteAccount = null\r\n      try {\r\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\r\n      } catch (e) {\r\n         // expected\r\n      }\r\n      if (!!remoteAccount) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let keyPair = await nearlib.KeyPair.fromRandomSeed()\r\n      return await new Promise((resolve, reject) => {\r\n         let data = JSON.stringify({\r\n            newAccountId: accountId,\r\n            newAccountPublicKey: keyPair.getPublicKey()\r\n         })\r\n\r\n         let xhr = new XMLHttpRequest()\r\n         xhr.open('POST', CONTRACT_CREATE_ACCOUNT_URL)\r\n         xhr.setRequestHeader('Content-Type', 'application/json')\r\n         xhr.onload = () => {\r\n            if (xhr.status === 200) {\r\n               this.key_store.setKey(accountId, keyPair).catch(console.log)\r\n               this.accounts[accountId] = true\r\n               this.accountId = accountId\r\n               this.save()\r\n               resolve(xhr)\r\n            } else if (xhr.status !== 200) {\r\n               reject(xhr.responseText)\r\n            }\r\n         }\r\n         xhr.send(data)\r\n      })\r\n   }\r\n\r\n   async addAccessKey(accountId, contractId, publicKey, successUrl) {\r\n      const addAccessKeyResponse = await this.account.addAccessKey(\r\n         accountId,\r\n         publicKey,\r\n         contractId,\r\n         '', // methodName\r\n         '', // fundingOwner\r\n         0 // fundingAmount\r\n      )\r\n      try {\r\n         const result = await this.near.waitForTransactionResult(\r\n            addAccessKeyResponse\r\n         )\r\n         const parsedUrl = new URL(successUrl)\r\n         parsedUrl.searchParams.set('account_id', accountId)\r\n         parsedUrl.searchParams.set('public_key', publicKey)\r\n         const redirectUrl = parsedUrl.href\r\n         if (result.status === 'Completed') {\r\n            window.location.href = redirectUrl\r\n         }\r\n      } catch (e) {\r\n         // TODO: handle errors\r\n         console.log('Error on adding access key ', e)\r\n      }\r\n   }\r\n\r\n   subscribeForMessages() {\r\n      //  window.addEventListener(\"message\", $.proxy(this.receiveMessage, this), false);\r\n      window.addEventListener('message', this.receiveMessage.bind(this), false)\r\n   }\r\n\r\n   clearState() {\r\n      this.accounts = {}\r\n      this.tokens = {}\r\n      this.accountId = ''\r\n      this.save()\r\n   }\r\n\r\n   async processTransactionMessage(action, data) {\r\n      let token = data['token'] || ''\r\n      if (!(token in this.tokens)) {\r\n         // Unknown token.\r\n         throw new Error('The token ' + token + ' is not found ')\r\n      }\r\n      let app_data = this.tokens[token]\r\n      let accountId = app_data['account_id']\r\n      if (!(accountId in this.accounts)) {\r\n         // Account is no longer authorized.\r\n         throw new Error(\r\n            'The account ' + accountId + ' is not part of the wallet anymore.'\r\n         )\r\n      }\r\n      let contract_id = app_data['contract_id']\r\n      let receiverId = data['receiver_id'] || contract_id\r\n      if (receiverId !== contract_id || !this.isLegitAccountId(receiverId)) {\r\n         // Bad receiver account ID or it doesn't match contract id.\r\n         throw new Error(\r\n            \"Bad receiver's account ID ('\" +\r\n               receiverId +\r\n               \"') or it doesn't match the authorized contract id\"\r\n         )\r\n      }\r\n      let amount = parseInt(data['amount']) || 0\r\n      if (amount !== 0) {\r\n         // Automatic authorization denied since for amounts greater than 0.\r\n         throw new Error('Transaction amount should be 0.')\r\n      }\r\n      let methodName = data['methodName'] || ''\r\n      if (!methodName) {\r\n         // Method name can't be empty since the amount is 0.\r\n         throw new Error(\"Method name can't be empty since the amount is 0\")\r\n      }\r\n      let args = data['args'] || {}\r\n      if (action === 'send_transaction') {\r\n         // Sending the transaction on behalf of the accountId\r\n         return await this.sendTransaction(\r\n            accountId,\r\n            receiverId,\r\n            methodName,\r\n            amount,\r\n            args\r\n         )\r\n      } else if (action === 'sign_transaction') {\r\n         // Signing the provided hash of the transaction. It's a security issue here.\r\n         // In the future we would sign the transaction above and don't depend on the given hash.\r\n         let hash = data['hash'] || ''\r\n         let signature = await this.near.nearClient.signer.signHash(\r\n            hash,\r\n            accountId\r\n         )\r\n         return signature\r\n      } else {\r\n         throw new Error('Unknown action')\r\n      }\r\n   }\r\n\r\n   requestCode(phoneNumber, accountId) {\r\n      return sendJson(\r\n         'POST',\r\n         `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/requestCode`\r\n      )\r\n   }\r\n\r\n   async validateCode(phoneNumber, accountId, securityCode) {\r\n      const key = this.key_store.getKey(accountId)\r\n      const signer = new nearlib.SimpleKeyStoreSigner(this.key_store)\r\n      const { signature } = key\r\n         ? signer.signBuffer(Buffer.from(securityCode), accountId)\r\n         : undefined\r\n      return sendJson(\r\n         'POST',\r\n         `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/validateCode`,\r\n         { securityCode, signature }\r\n      )\r\n   }\r\n\r\n   receiveMessage(event) {\r\n      let data\r\n      try {\r\n         data = JSON.parse(event.data)\r\n      } catch (e) {\r\n         // Silently dying.\r\n         return\r\n      }\r\n      const action = data['action'] || ''\r\n      if (action !== 'send_transaction' && action !== 'sign_transaction') {\r\n         // Unknown action, skipping silently.\r\n         return\r\n      }\r\n      const request_id = data['request_id'] || ''\r\n\r\n      let reply = d => event.source.postMessage(JSON.stringify(d), event.origin)\r\n\r\n      this.processTransactionMessage(action, data)\r\n         .then(result => {\r\n            console.log('Wallet: OK ' + action)\r\n            reply({\r\n               success: true,\r\n               request_id,\r\n               result\r\n            })\r\n         })\r\n         .catch(error => {\r\n            console.error('Wallet: failed to ' + action, error)\r\n            reply({\r\n               success: false,\r\n               request_id,\r\n               error\r\n            })\r\n         })\r\n   }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-up.b5be78eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-filter.1f33be14.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-left.5e7a861f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-search.2cea301b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lock.255000ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-keys-grey.a339e56f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-doc-grey.888e4b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-check-blue.6dc3bbf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity-grey.c5c92b3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts-grey.c7048ab4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-stake.cc91ad52.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-transfer.f726da93.svg\";","import { parse } from 'query-string'\r\nimport { createActions } from 'redux-actions';\r\nimport { Wallet } from '../utils/wallet';\r\n\r\nexport const REFRESH_ACCOUNT = 'REFRESH_ACCOUNT'\r\nexport const LOADER_ACCOUNT = 'LOADER_ACCOUNT'\r\nexport const REFRESH_URL = 'REFRESH_URL'\r\n\r\nexport function handleRefreshAccount(wallet, history) {\r\n   return (dispatch, getState) => {\r\n      wallet.redirectIfEmpty(history)\r\n      const accountId = wallet.getAccountId()\r\n\r\n      dispatch({\r\n         type: LOADER_ACCOUNT,\r\n         loader: true\r\n      })\r\n\r\n      wallet\r\n         .loadAccount(accountId, history)\r\n         .then(v => {\r\n            dispatch({\r\n               type: REFRESH_ACCOUNT,\r\n               data: {\r\n                  accountId: accountId,\r\n                  authToken: wallet.newAccessToken(\r\n                     getState().account.url.app_title,\r\n                     getState().account.url.app_url,\r\n                     getState().account.url.contract_id\r\n                  ),\r\n                  amount: v['amount'] || 0,\r\n                  stake: v['stake'],\r\n                  nonce: v['nonce'],\r\n                  code_hash: v['code_hash'],\r\n                  accounts: wallet.accounts\r\n               }\r\n            })\r\n\r\n            dispatch({\r\n               type: LOADER_ACCOUNT,\r\n               loader: false\r\n            })\r\n         })\r\n         .catch(e => {\r\n            console.log(e)\r\n\r\n            if (e.message && e.message.indexOf('is not valid') !== -1) {\r\n               // We have an account in the storage, but it doesn't exist on blockchain. We probably nuked storage so just redirect to create account\r\n               wallet.clearState()\r\n               wallet.redirectToCreateAccount(\r\n                  {\r\n                     reset_accounts: true\r\n                  },\r\n                  history\r\n               )\r\n            }\r\n         })\r\n   }\r\n}\r\n\r\nexport function handleRefreshUrl(location) {\r\n   return dispatch => {\r\n      dispatch({\r\n         type: REFRESH_URL,\r\n         url: {\r\n            app_title: parse(location.search).title || '',\r\n            app_url: parse(location.search).app_url || '',\r\n            contract_id: parse(location.search).contract_id || '',\r\n            success_url: parse(location.search).success_url || '',\r\n            failure_url: parse(location.search).failure_url || '',\r\n            public_key: parse(location.search).public_key || ''\r\n         }\r\n      })\r\n   }\r\n}\r\n\r\nconst wallet = new Wallet()\r\n\r\nexport const { requestCode, validateCode } = createActions({\r\n   REQUEST_CODE: [\r\n      wallet.requestCode.bind(wallet),\r\n      () => ({ successCode: 'account.requestCode.success', errorCode: 'account.requestCode.error' })\r\n   ],\r\n   VALIDATE_CODE: [\r\n      wallet.validateCode.bind(wallet),\r\n      () => ({ successCode: 'account.validateCode.success', errorCode: 'account.validateCode.error' })\r\n   ]\r\n})\r\n\r\n\r\n\r\n\r\n","import { handleActions, combineActions } from 'redux-actions'\r\nimport {\r\n   REFRESH_ACCOUNT,\r\n   LOADER_ACCOUNT,\r\n   REFRESH_URL,\r\n   requestCode,\r\n   validateCode\r\n} from '../actions/account'\r\nimport reduceReducers from 'reduce-reducers';\r\n\r\nconst initialState = {\r\n   formLoader: false,\r\n   sentSms: false\r\n}\r\n\r\nconst loaderReducer = (state, { ready }) => {\r\n   if (typeof ready === 'undefined') {\r\n      return state\r\n   }\r\n   return { ...state, formLoader: !ready }\r\n}\r\n\r\nconst requestResultReducer = handleActions({\r\n   [combineActions(requestCode, validateCode)]: (state, { error, payload, meta }) => ({\r\n      ...state,\r\n      requestStatus: !!payload || error ? {\r\n         success: !error,\r\n         messageCode: error ? payload.messageCode || meta.errorCode : meta.successCode \r\n      } : undefined\r\n   })\r\n}, initialState)\r\n\r\nconst reducer = handleActions({\r\n   [requestCode]: (state, { error, ready }) => {\r\n      if (ready && !error) {\r\n         return { ...state, sentSms: true }\r\n      }\r\n      return state\r\n   },\r\n}, initialState)\r\n\r\n// TODO: Migrate everything to redux-actions\r\nfunction account(state = {}, action) {\r\n   switch (action.type) {\r\n      case REFRESH_ACCOUNT:\r\n         return {\r\n            ...state,\r\n            ...action.data\r\n         }\r\n      case LOADER_ACCOUNT: {\r\n         return {\r\n            ...state,\r\n            loader: action.loader\r\n         }\r\n      }\r\n      case REFRESH_URL: {\r\n         return {\r\n            ...state,\r\n            url: action.url\r\n         }\r\n      }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport default reduceReducers(\r\n   initialState,\r\n   loaderReducer,\r\n   requestResultReducer,\r\n   reducer,\r\n   account)\r\n\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware, compose } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n/**\r\n * Lets you dispatch special actions with a { promise } field.\r\n *\r\n * This middleware will turn them into a single action at the beginning,\r\n * and a single success (or failure) action when the `promise` resolves.\r\n *\r\n * For convenience, `dispatch` will return the promise so the caller can wait.\r\n */\r\nconst readyStatePromise = store => next => action => {\r\n    if (!action.payload || !action.payload.then) {\r\n      return next(action)\r\n    }\r\n  \r\n    function makeAction(ready, data) {\r\n      const newAction = Object.assign({}, action)\r\n      delete newAction.payload\r\n      return Object.assign(newAction, { ready }, data)\r\n    }\r\n  \r\n    next(makeAction(false))\r\n    return action.payload.then(\r\n      payload => next(makeAction(true, { payload })),\r\n      error => next(makeAction(true, { error: true, payload: error }))\r\n    )\r\n  }\r\n\r\nexport default (history) => composeEnhancers(\r\n    applyMiddleware(\r\n        routerMiddleware(history),\r\n        readyStatePromise,\r\n        thunk))\r\n","import React from 'react'\r\n\r\nimport { Image, Loader } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport MobileMenuImage from '../../images/icon-mobile-menu.svg'\r\nimport CloseImage from '../../images/icon-close.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomDiv = styled('div')`\r\n   overflow: hidden;\r\n   width: 100%;\r\n   cursor: pointer;\r\n   font-family: 'benton-sans', sans-serif;\r\n   font-weight: 600;\r\n   > div {\r\n      .account-img {\r\n         width: 36px;\r\n         height: 36px;\r\n         background: #4a4f54;\r\n         padding-right: 0px;\r\n         padding-left: 6px;\r\n         border-radius: 18px;\r\n         margin-top: 16px;\r\n         margin-right: 10px;\r\n         > img {\r\n            width: 24px;\r\n            height: 24px;\r\n            margin-top: 5px;\r\n         }\r\n      }\r\n      .overflow {\r\n         overflow: hidden;\r\n      }\r\n      .account-arrow {\r\n         float: right;\r\n         padding-right: 14px;\r\n         padding-left: 14px;\r\n         padding-top: 24px;\r\n         img {\r\n            width: 20px;\r\n         }\r\n         &.desktop {\r\n            padding-top: 32px;\r\n            padding-right: 26px;\r\n            img {\r\n               width: 12px;\r\n            }\r\n         }\r\n      }\r\n      .account-tokens {\r\n         float: right;\r\n         line-height: 29px;\r\n         font-size: 14px;\r\n         color: #fff;\r\n         margin: 21px 0 0 10px;\r\n         height: 28px;\r\n         background: #111314;\r\n         border-radius: 14px;\r\n         padding: 0 10px;\r\n         letter-spacing: normal;\r\n         max-width: 140px;\r\n         :hover {\r\n            color: #fff;\r\n         }\r\n         > div {\r\n            display: flex;\r\n            > div {\r\n               text-overflow: ellipsis;\r\n               overflow: hidden;\r\n\r\n               &.near {\r\n                  text-overflow: initial;\r\n               }\r\n            }\r\n         }\r\n         .near {\r\n            font-size: 18px;\r\n            padding-left: 4px;\r\n            font-weight: 500;\r\n         }\r\n      }\r\n      .account-name {\r\n         overflow: hidden;\r\n         padding-right: 0px;\r\n         text-align: right;\r\n         padding-left: 0px;\r\n         line-height: 72px;\r\n         > div {\r\n            font-size: 14px;\r\n            letter-spacing: normal;\r\n            padding-left: 0px;\r\n            padding-right: 0px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            color: #fff;\r\n            :hover {\r\n               color: #fff;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst PopupMenuTrigger = ({ account, handleClick, type, dropdown = false }) => (\r\n   <CustomDiv onClick={handleClick}>\r\n      <div>\r\n         {type === 'desktop' && (\r\n            <div className='account-img' style={{ float: 'left' }}>\r\n               <Image src={AccountGreyImage} />\r\n            </div>\r\n         )}\r\n         <div className={`account-arrow ${type}`}>\r\n            {type === 'mobile' && (\r\n               <Image src={dropdown ? MobileMenuImage : CloseImage} />\r\n            )}\r\n            {type === 'desktop' && <Image src={ArrowDownImage} />}\r\n         </div>\r\n         <div className='overflow'>\r\n            <div className='account-tokens'>\r\n               {account.loader || !account.accountId ? (\r\n                  <Loader active inline size='mini' />\r\n               ) : (\r\n                  <div>\r\n                     <div>{account.amount} </div>\r\n                     <div className='near'>Ⓝ</div>\r\n                  </div>\r\n               )}\r\n            </div>\r\n            <div className='account-name'>\r\n               {account.loader || !account.accountId ? (\r\n                  <Loader active inline size='mini' />\r\n               ) : (\r\n                  <div>@{account.accountId}</div>\r\n               )}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </CustomDiv>\r\n)\r\n\r\nexport default PopupMenuTrigger\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport {\r\n   Image,\r\n   Menu,\r\n   Responsive,\r\n   Segment,\r\n   List,\r\n   Button\r\n} from 'semantic-ui-react'\r\n\r\nimport PopupMenuTrigger from './PopupMenuTrigger'\r\n\r\nimport SendImage from '../../images/icon-send.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\r\nimport LogoutImage from '../../images/icon-logout.svg'\r\nimport LogoImage from '../../images/wallet.png'\r\nimport AccountGreyImage from '../../images/icon-account.svg'\r\nimport RecentImage from '../../images/icon-recent.svg'\r\nimport ActivityImage from '../../images/icon-activity.svg'\r\n\r\nimport { handleRefreshAccount } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomResponsive = styled(Responsive)`\r\n   &&& {\r\n      padding-bottom: 240px;\r\n      .navbar {\r\n         padding: 0px;\r\n         &-main {\r\n            background-color: #24272a;\r\n            height: 72px;\r\n            border-radius: 0;\r\n            margin-bottom: 0;\r\n            .mainlogo {\r\n               float: left;\r\n               padding: 4px 10px 0px 0px;\r\n               div {\r\n                  width: 50px;\r\n                  overflow: hidden;\r\n                  > img.image {\r\n                     width: 160px;\r\n                     max-width: none;\r\n                  }\r\n               }\r\n            }\r\n            .trigger {\r\n               width: 100%;\r\n               overflow: hidden;\r\n            }\r\n         }\r\n         &-sub {\r\n            margin: 0px;\r\n            padding: 0px;\r\n            background-color: #24272a;\r\n            &.hide {\r\n               display: none;\r\n            }\r\n            .main {\r\n               font-family: 'benton-sans', sans-serif;\r\n               font-weight: 400;\r\n               font-size: 14px;\r\n               padding: 18px 6px;\r\n               margin: 0 1rem;\r\n               border-top: 1px solid #4a4f54;\r\n               &.border {\r\n                  border-bottom: 1px solid #4a4f54;\r\n               }\r\n               a {\r\n                  color: #fff;\r\n                  letter-spacing: 2px;\r\n               }\r\n               img {\r\n                  margin-top: -4px;\r\n                  width: 24px;\r\n                  margin-right: 20px;\r\n                  display: inline-block !important;\r\n               }\r\n            }\r\n            .sub {\r\n               padding: 10px 1rem 0 1rem;\r\n               .item {\r\n                  font-family: 'benton-sans', sans-serif;\r\n                  font-weight: 400;\r\n                  font-size: 14px;\r\n                  padding: 8px 9px;\r\n                  a {\r\n                     color: #8fd6bd;\r\n                     letter-spacing: 2px;\r\n                  }\r\n                  img {\r\n                     margin-top: -2px;\r\n                     width: 18px;\r\n                     margin-right: 22px;\r\n                     display: inline-block !important;\r\n                  }\r\n               }\r\n            }\r\n            .switch-account {\r\n               background: #000;\r\n               padding: 0 1rem;\r\n               padding: 20px;\r\n               .item {\r\n                  padding: 0 10px;\r\n               }\r\n               h6.item {\r\n                  padding-bottom: 10px;\r\n                  border: 0px;\r\n               }\r\n               .account-title {\r\n                  height: 40px;\r\n                  line-height: 40px;\r\n                  color: #fff;\r\n                  font-weight: 500;\r\n                  border-bottom: 1px solid #323434;\r\n                  letter-spacing: normal;\r\n                  text-overflow: ellipsis;\r\n                  overflow: hidden;\r\n               }\r\n               button {\r\n                  width: 100%;\r\n                  border-radius: 30px;\r\n                  background: #24272a;\r\n                  color: #6ad1e3;\r\n                  :hover {\r\n                     background: #fff;\r\n                     color: #6ad1e3;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst getWidth = () => {\r\n   const isSSR = typeof window === 'undefined'\r\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\nclass MobileView extends Component {\r\n   static propTypes = {\r\n      children: PropTypes.node\r\n   }\r\n\r\n   static defaultProps = {\r\n      children: ''\r\n   }\r\n\r\n   state = {\r\n      dropdown: true\r\n   }\r\n\r\n   handleDropdown = () =>\r\n      this.setState(state => ({\r\n         dropdown: !state.dropdown\r\n      }))\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n      this.handleDropdown()\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet = new Wallet()\r\n      this.handleDropdown()\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { dropdown } = this.state\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <CustomResponsive\r\n            getWidth={getWidth}\r\n            maxWidth={Responsive.onlyTablet.maxWidth}\r\n         >\r\n            <Segment basic className='navbar'>\r\n               <Menu className='navbar-main' borderless>\r\n                  <div className='mainlogo'>\r\n                     <Link to='/'>\r\n                        <div>\r\n                           <Image src={LogoImage} />\r\n                        </div>\r\n                     </Link>\r\n                  </div>\r\n\r\n                  {account.accountId && (\r\n                     <div className='trigger'>\r\n                        <PopupMenuTrigger\r\n                           account={account}\r\n                           handleClick={this.handleDropdown}\r\n                           type='mobile'\r\n                           dropdown={dropdown}\r\n                        />\r\n                     </div>\r\n                  )}\r\n               </Menu>\r\n               <Segment\r\n                  basic\r\n                  className={`navbar-sub ${dropdown ? `hide` : ``}`}\r\n               >\r\n                  <Menu.Menu>\r\n                     <Menu.Item className='main'>\r\n                        <Link to='/' onClick={this.handleDropdown}>\r\n                           <Image src={RecentImage} />\r\n                           SUMMARY\r\n                        </Link>\r\n                     </Menu.Item>\r\n                     {false ? (\r\n                        <Menu.Item className='main'>\r\n                           <Link to='/activity' onClick={this.handleDropdown}>\r\n                              <Image src={ActivityImage} />\r\n                              ACTIVITY\r\n                           </Link>\r\n                        </Menu.Item>\r\n                     ) : null}\r\n                     <Menu.Item className='main border'>\r\n                        <Link to='/send-money' onClick={this.handleDropdown}>\r\n                           <Image src={SendImage} />\r\n                           SEND MONEY\r\n                        </Link>\r\n                     </Menu.Item>\r\n\r\n                     <Menu.Menu className='sub'>\r\n                        <Menu.Item>\r\n                           <Link to='/profile' onClick={this.handleDropdown}>\r\n                              <Image src={AccountGreyImage} />\r\n                              Profile\r\n                           </Link>\r\n                        </Menu.Item>\r\n                        {false ? (\r\n                           <Menu.Item>\r\n                              <Link\r\n                                 to='/contacts'\r\n                                 onClick={this.handleDropdown}\r\n                              >\r\n                                 <Image src={ContactsGreyImage} />\r\n                                 Contacts\r\n                              </Link>\r\n                           </Menu.Item>\r\n                        ) : null}\r\n                        {false ? (\r\n                           <Menu.Item>\r\n                              <Link\r\n                                 to='/authorized-apps'\r\n                                 onClick={this.handleDropdown}\r\n                              >\r\n                                 <Image src={AuthorizedGreyImage} />\r\n                                 Authorized Apps\r\n                              </Link>\r\n                           </Menu.Item>\r\n                        ) : null}\r\n                        {false ? (\r\n                           <Menu.Item>\r\n                              <Link to='/' onClick={this.handleDropdown}>\r\n                                 <Image src={LogoutImage} />\r\n                                 Logout\r\n                              </Link>\r\n                           </Menu.Item>\r\n                        ) : null}\r\n                     </Menu.Menu>\r\n                     <Segment basic className='switch-account'>\r\n                        <List>\r\n                           <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\r\n\r\n                           {account.accounts &&\r\n                              Object.keys(account.accounts)\r\n                                 .filter(a => a !== account.accountId)\r\n                                 .map((account, i) => (\r\n                                    <List.Item\r\n                                       as='a'\r\n                                       key={`mf-${i}`}\r\n                                       onClick={() =>\r\n                                          this.handleSelectAccount(account)\r\n                                       }\r\n                                       className='account-title'\r\n                                    >\r\n                                       @{account}\r\n                                    </List.Item>\r\n                                 ))}\r\n                        </List>\r\n                        <Button onClick={this.redirectCreateAccount}>\r\n                           CREATE NEW ACCOUNT\r\n                        </Button>\r\n                     </Segment>\r\n                  </Menu.Menu>\r\n               </Segment>\r\n            </Segment>\r\n\r\n            {this.props.children}\r\n         </CustomResponsive>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(MobileView))\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Image, Segment, List, Button, Popup } from 'semantic-ui-react'\r\n\r\nimport PopupMenuTrigger from './PopupMenuTrigger'\r\n\r\nimport AccountImage from '../../images/icon-account.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\r\nimport LogoutImage from '../../images/icon-logout.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomPopup = styled(Popup)`\r\n   &&& {\r\n      padding: 0px;\r\n      right: 12px !important;\r\n      top: 50px !important;\r\n      position: fixed !important;\r\n\r\n      .account-dropdown {\r\n         width: 290px;\r\n         min-height: 100px;\r\n         background-color: #f8f8f8;\r\n\r\n         padding: 20px;\r\n\r\n         .item {\r\n            color: #999999;\r\n         }\r\n\r\n         .submenu {\r\n            margin: -20px;\r\n            padding: 20px;\r\n            background: #fff;\r\n\r\n            .icon {\r\n               width: 20px;\r\n            }\r\n            .content {\r\n               line-height: 26px;\r\n               padding-left: 10px;\r\n            }\r\n            .item {\r\n               margin: 4px 0;\r\n            }\r\n         }\r\n\r\n         .switch-account {\r\n            margin-top: 40px;\r\n            margin-bottom: 0px;\r\n         }\r\n\r\n         &-scroll {\r\n            max-height: 226px;\r\n            overflow-y: auto;\r\n            width: 270px;\r\n            margin-top: 0px;\r\n\r\n            > .item {\r\n               width: 250px;\r\n               margin: 0px;\r\n               padding: 0px;\r\n\r\n               :hover {\r\n                  text-decoration: underline;\r\n               }\r\n               ::before {\r\n                  display: none;\r\n               }\r\n               ::after {\r\n                  display: none;\r\n               }\r\n            }\r\n         }\r\n\r\n         h6 {\r\n            padding-bottom: 6px;\r\n         }\r\n         .account-title {\r\n            height: 40px;\r\n            line-height: 40px;\r\n            color: #4a4f54;\r\n            font-weight: 500;\r\n            border-bottom: 2px solid #e6e6e6;\r\n            letter-spacing: normal;\r\n\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n         }\r\n         button {\r\n            width: 100%;\r\n            border-radius: 30px;\r\n            background: #fff;\r\n            color: #6ad1e3;\r\n\r\n            :hover {\r\n               background: #6ad1e3;\r\n               color: #fff;\r\n            }\r\n         }\r\n      }\r\n\r\n      :hover {\r\n         .account-dropdown {\r\n            display: block;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DesktopPopup = ({\r\n   account,\r\n   handleSelectAccount,\r\n   redirectCreateAccount,\r\n   handleToggle,\r\n   popupOpen\r\n}) => (\r\n   <CustomPopup\r\n      trigger={\r\n         <PopupMenuTrigger\r\n            account={account}\r\n            handleClick={handleToggle}\r\n            type='desktop'\r\n         />\r\n      }\r\n      position='right center'\r\n      open={popupOpen}\r\n   >\r\n      <Segment basic className='account-dropdown'>\r\n         <List className='submenu'>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={AccountImage} />\r\n               <List.Content as={Link} to='/profile' onClick={handleToggle}>\r\n                  Profile\r\n               </List.Content>\r\n            </List.Item>\r\n            {false ? (\r\n               <List.Item>\r\n                  <List.Icon as={Image} src={ContactsGreyImage} />\r\n                  <List.Content as={Link} to='/contacts' onClick={handleToggle}>\r\n                     Contacts\r\n                  </List.Content>\r\n               </List.Item>\r\n            ) : null}\r\n            {false ? (\r\n               <List.Item>\r\n                  <List.Icon as={Image} src={AuthorizedGreyImage} />\r\n                  <List.Content\r\n                     as={Link}\r\n                     to='authorized-apps'\r\n                     onClick={handleToggle}\r\n                  >\r\n                     Authorized Apps\r\n                  </List.Content>\r\n               </List.Item>\r\n            ) : null}\r\n            {false ? (\r\n               <List.Item>\r\n                  <List.Icon as={Image} src={LogoutImage} />\r\n                  <List.Content as={Link} to='/logout' onClick={handleToggle}>\r\n                     Logout\r\n                  </List.Content>\r\n               </List.Item>\r\n            ) : null}\r\n         </List>\r\n         <List className='switch-account'>\r\n            <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\r\n         </List>\r\n         <List className='account-dropdown-scroll'>\r\n            {account.accounts &&\r\n               Object.keys(account.accounts)\r\n                  .filter(a => a !== account.accountId)\r\n                  .map((account, i) => (\r\n                     <List.Item\r\n                        as='a'\r\n                        key={`mf-${i}`}\r\n                        onClick={() => handleSelectAccount(account)}\r\n                        className='account-title'\r\n                     >\r\n                        @{account}\r\n                     </List.Item>\r\n                  ))}\r\n         </List>\r\n         <Button onClick={redirectCreateAccount}>CREATE NEW ACCOUNT</Button>\r\n      </Segment>\r\n   </CustomPopup>\r\n)\r\n\r\nexport default DesktopPopup\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport DesktopPopup from './DesktopPopup'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { Image, Responsive, Segment, Visibility } from 'semantic-ui-react'\r\n\r\nimport LogoImage from '../../images/wallet.png'\r\nimport HelpImage from '../../images/icon-help.svg'\r\nimport ActivityImage from '../../images/icon-activity.svg'\r\nimport RecentImage from '../../images/icon-recent.svg'\r\nimport SendImage from '../../images/icon-send.svg'\r\n\r\nimport { handleRefreshAccount } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomResponsive = styled(Responsive)`\r\n   padding-bottom: 180px;\r\n   .spacer {\r\n      height: 72px;\r\n   }\r\n   &&& .navbar {\r\n      width: 100%;\r\n      background-color: #24272a;\r\n      height: 72px;\r\n      border-radius: 0;\r\n      position: fixed;\r\n      top: 0px;\r\n      .left {\r\n         float: left;\r\n      }\r\n      .right {\r\n         float: right;\r\n      }\r\n      .overflow {\r\n         overflow: hidden;\r\n      }\r\n      .devider {\r\n         float: left;\r\n         width: 2px;\r\n         height: 40px;\r\n         background: #5d5f60;\r\n         padding: 0px;\r\n         margin: 16px 28px 0 0;\r\n      }\r\n      .help {\r\n         float: left;\r\n         margin-top: 22px;\r\n         margin-right: 28px;\r\n      }\r\n      &-icon {\r\n         height: 24px;\r\n         display: inline-block;\r\n      }\r\n      .mainlogo {\r\n         float: left;\r\n         padding-right: 6px;\r\n         img {\r\n            height: 72px;\r\n         }\r\n      }\r\n      .item {\r\n         float: left;\r\n         color: white;\r\n         font-family: 'benton-sans', sans-serif;\r\n         font-weight: 600;\r\n         font-size: 14px;\r\n         padding-left: 0px;\r\n         padding-right: 30px;\r\n         letter-spacing: 2px;\r\n         line-height: 72px;\r\n         img {\r\n            margin-right: 10px;\r\n         }\r\n         a {\r\n            color: #fff;\r\n         }\r\n         a:hover {\r\n            color: #6ad1e3;\r\n            text-decoration: none;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst getWidth = () => {\r\n   const isSSR = typeof window === 'undefined'\r\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\nclass DesktopView extends Component {\r\n   static propTypes = {\r\n      children: PropTypes.node\r\n   }\r\n\r\n   static defaultProps = {\r\n      children: ''\r\n   }\r\n\r\n   state = {\r\n      activeItem: 'home',\r\n      popupOpen: false\r\n   }\r\n\r\n   hideFixedMenu = () => this.setState({ fixed: false })\r\n\r\n   showFixedMenu = () => this.setState({ fixed: true })\r\n\r\n   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n      this.setState(() => ({\r\n         popupOpen: false\r\n      }))\r\n   }\r\n\r\n   handleToggle = () =>\r\n      this.setState(state => ({\r\n         popupOpen: !state.popupOpen\r\n      }))\r\n\r\n   render() {\r\n      const { popupOpen } = this.state\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <CustomResponsive\r\n            getWidth={getWidth}\r\n            minWidth={Responsive.onlyComputer.minWidth}\r\n         >\r\n            <Visibility\r\n               once={false}\r\n               onBottomPassed={this.showFixedMenu}\r\n               onBottomPassedReverse={this.hideFixedMenu}\r\n            >\r\n               <Segment className='spacer' basic />\r\n               <div className='navbar'>\r\n                  <div className='left'>\r\n                     <div>\r\n                        <div className='mainlogo'>\r\n                           <Link to='/'>\r\n                              <Image src={LogoImage} />\r\n                           </Link>\r\n                        </div>\r\n                        <div className='item'>\r\n                           <Link to='/'>\r\n                              <Image\r\n                                 className='navbar-icon'\r\n                                 src={RecentImage}\r\n                              />\r\n                              SUMMARY\r\n                           </Link>\r\n                        </div>\r\n                        {false ? (\r\n                           <div className='item'>\r\n                              <Link to='/'>\r\n                                 <Image\r\n                                    className='navbar-icon'\r\n                                    src={ActivityImage}\r\n                                 />\r\n                                 ACTIVITY\r\n                              </Link>\r\n                           </div>\r\n                        ) : null}\r\n                        <div className='item'>\r\n                           <Link to='/send-money'>\r\n                              <Image className='navbar-icon' src={SendImage} />\r\n                              SEND MONEY\r\n                           </Link>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n                  <div className='overflow'>\r\n                     {account.accountId && (\r\n                        <div className='right'>\r\n                           <div className='help'>\r\n                              <a href='http://near.chat/'>\r\n                                 <Image\r\n                                    className='navbar-icon'\r\n                                    src={HelpImage}\r\n                                 />\r\n                              </a>\r\n                           </div>\r\n                           <div className='devider' />\r\n                           <div className='overflow'>\r\n                              <DesktopPopup\r\n                                 account={account}\r\n                                 handleSelectAccount={this.handleSelectAccount}\r\n                                 redirectCreateAccount={\r\n                                    this.redirectCreateAccount\r\n                                 }\r\n                                 handleToggle={this.handleToggle}\r\n                                 popupOpen={popupOpen}\r\n                              />\r\n                           </div>\r\n                        </div>\r\n                     )}\r\n                  </div>\r\n               </div>\r\n            </Visibility>\r\n\r\n            {this.props.children}\r\n         </CustomResponsive>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(DesktopView))\r\n","import React, { Fragment } from 'react'\r\n\r\nimport MobileView from './MobileView'\r\nimport DesktopView from './DesktopView'\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n   <Fragment>\r\n      <DesktopView>{children}</DesktopView>\r\n      <MobileView>{children}</MobileView>\r\n   </Fragment>\r\n)\r\n\r\nexport default ResponsiveContainer\r\n","import React from 'react'\r\nimport { Grid, Image, List, Item } from 'semantic-ui-react'\r\n\r\nimport LogoFooterImage from '../../images/near.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst FooterGrid = styled(Grid)`\r\n   &&&& {\r\n      position: absolute;\r\n      bottom: 0px;\r\n      width: 100%;\r\n\r\n      background-color: #f8f8f8;\r\n\r\n      font-size: 12px;\r\n      font-weight: 300;\r\n      color: #999999;\r\n\r\n      margin-bottom: 0px;\r\n      margin-left: 0px;\r\n\r\n      .near-logo {\r\n         .content {\r\n            a {\r\n               font-size: 12px;\r\n               font-weight: 300;\r\n               color: #999999;\r\n               text-decoration: underline;\r\n\r\n               :hover {\r\n                  text-decoration: none;\r\n               }\r\n            }\r\n            .color-brown-grey {\r\n               color: #e6e6e6;\r\n               padding: 0 6px;\r\n            }\r\n         }\r\n         .image {\r\n            width: 140px;\r\n            padding-left: 14px;\r\n\r\n            img {\r\n            }\r\n         }\r\n      }\r\n\r\n      .learn-more {\r\n         padding: 0 40px 0 0;\r\n         color: #24272a;\r\n      }\r\n\r\n      .help {\r\n         padding-right: 0px;\r\n         padding-top: 10px;\r\n         padding-bottom: 10px;\r\n\r\n         > .list {\r\n            width: 230px;\r\n            height: 80px;\r\n            padding: 20px 0;\r\n            background: #fff;\r\n            text-align: left;\r\n\r\n            > img {\r\n               width: 80px;\r\n               position: absolute;\r\n               bottom: 0px;\r\n               right: 200px;\r\n            }\r\n\r\n            > h3 {\r\n               font-weight: 600 !important;\r\n               padding: 0 0 0 40px;\r\n               color: #999999 !important;\r\n\r\n               &.color {\r\n                  color: #0072ce !important;\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         height: 180px;\r\n\r\n         .near-logo {\r\n            .item {\r\n            }\r\n            .content {\r\n               text-align: center;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ResponsiveContainer = () => (\r\n   <FooterGrid columns={2}>\r\n      <Grid.Column\r\n         textAlign='left'\r\n         verticalAlign='middle'\r\n         widescreen={4}\r\n         largeScreen={6}\r\n         computer={7}\r\n         tablet={10}\r\n         mobile={16}\r\n      >\r\n         <Item.Group className='near-logo'>\r\n            <Item>\r\n               <Item.Image src={LogoFooterImage} />\r\n               <Item.Content>\r\n                  © 2019 NEAR Inc. All Rights Reserved.\r\n                  <br />\r\n                  <a href='/'>Terms of Service</a>\r\n                  <span className='color-brown-grey'>|</span>\r\n                  <a href='/'>Privacy Policy</a>\r\n               </Item.Content>\r\n            </Item>\r\n         </Item.Group>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         only='computer'\r\n         computer={5}\r\n         className='learn-more'\r\n         verticalAlign='middle'\r\n      >\r\n         NEAR is a scalable computing and storage platform that changes how the\r\n         web works for better.{' '}\r\n         <a href='https://nearprotocol.com/'>Learn More</a>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         only='tablet computer'\r\n         widescreen={7}\r\n         largeScreen={5}\r\n         computer={4}\r\n         tablet={6}\r\n         textAlign='right'\r\n         className='help'\r\n      >\r\n         <List floated='right'>\r\n            <List.Item as='h3'>Need Help?</List.Item>\r\n            <List.Item as='h3' className='color'>\r\n               <a href='https://discordapp.com/invite/gBtUFKR'>\r\n                  Contact Support\r\n               </a>\r\n            </List.Item>\r\n            <Image className='nearkat' src={NearkatImage} />\r\n         </List>\r\n      </Grid.Column>\r\n   </FooterGrid>\r\n)\r\n\r\nexport default ResponsiveContainer\r\n","import React from 'react'\r\n\r\nimport TContractImage from '../../images/icon-t-contract.svg'\r\n\r\nimport { Grid, List } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&&& {\r\n      margin-top: 0px;\r\n\r\n      .other-assets {\r\n         background: #f8f8f8;\r\n         border-top: 2px solid #e6e6e6;\r\n         border-bottom: 4px solid #e6e6e6;\r\n         padding: 0px;\r\n\r\n         .column {\r\n            border-right: 2px solid #e6e6e6;\r\n            padding: 10px 0px 10px 18px;\r\n\r\n            :last-of-type {\r\n               border: 0px;\r\n            }\r\n\r\n            .content {\r\n               width: auto;\r\n            }\r\n\r\n            .icon {\r\n               background-image: url(${TContractImage});\r\n               background-repeat: no-repeat;\r\n               background-position: center top;\r\n               background-size: 24px 24px;\r\n               width: 24px;\r\n               height: 38px;\r\n               margin: 0 6px 0 0;\r\n            }\r\n\r\n            h5 {\r\n               font-weight: 600;\r\n               line-height: 16px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   && .other-assets-title {\r\n      padding-bottom: 6px;\r\n      color: #24272a;\r\n      font-weight: 600;\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      &&&& .other-assets {\r\n         .column {\r\n            .content {\r\n               h2 {\r\n                  font-size: 16px !important;\r\n               }\r\n            }\r\n            .icon {\r\n               background-size: 18px 24px;\r\n               width: 18px;\r\n               margin: 8px 6px 0 0;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&&& .other-assets {\r\n         background: #fff;\r\n         margin-top: 18px !important;\r\n         border-right: 0px;\r\n\r\n         > .column {\r\n            width: 100% !important;\r\n            border-right: 0px;\r\n            border-bottom: 2px solid #f8f8f8;\r\n            padding: 6px 0px 6px 4px;\r\n\r\n            .list {\r\n               width: 100%;\r\n\r\n               .item {\r\n                  width: 100%;\r\n\r\n                  .content {\r\n                     float: right;\r\n                     text-align: right;\r\n\r\n                     h2 {\r\n                        font-size: 14px !important;\r\n                     }\r\n                  }\r\n                  .icon {\r\n                     height: 20px;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n\r\n         &-title {\r\n            display: none;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardOtherAssets = () => (\r\n   <CustomGrid>\r\n      <Grid.Row className='other-assets-title' as='h6'>\r\n         OTHER ASSETS\r\n      </Grid.Row>\r\n      <Grid.Row columns={6} className='other-assets'>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        12.125\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ETH\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        3.2501\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        XRP\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        8.0987\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ZEC\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        13.258\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        BNB\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        2.5897\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        XMR\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        1.2589\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ZIL\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default DashboardOtherAssets\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport DashboardOtherAssets from './DashboardOtherAssets'\r\n\r\nimport ArrowGrnImage from '../../images/icon-arrow-grn.svg'\r\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\r\n\r\nimport { Container, Grid, Button } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         text-align: right;\r\n      }\r\n   }\r\n   .near {\r\n      font-size: 48px;\r\n      color: #24272a;\r\n   }\r\n   &&& .send-money {\r\n      margin: 0 0 0 0;\r\n      > .button {\r\n         width: 100%;\r\n         line-height: 60px;\r\n         border-radius: 30px;\r\n         border: solid 2px #5ace84;\r\n         font-size: 18px;\r\n         font-weight: 600;\r\n         letter-spacing: 2px;\r\n         color: #5ace84;\r\n         background: #fff;\r\n         text-align: left;\r\n         padding: 0 0 0 40px;\r\n         background-image: url(${ArrowGrnImage});\r\n         background-repeat: no-repeat;\r\n         background-position: 90% center;\r\n         background-size: 14px 20px;\r\n         :hover {\r\n            background-color: #5ace84;\r\n            color: #fff;\r\n            background-image: url(${ArrowRightImage});\r\n         }\r\n      }\r\n   }\r\n   &&& {\r\n      .right-section {\r\n         padding-left: 40px;\r\n      }\r\n   }\r\n   @media screen and (max-width: 991px) {\r\n      > .grid {\r\n         margin-left: 0px;\r\n         margin-right: 0px;\r\n      }\r\n      &&& .send-money {\r\n         margin-top: 20px;\r\n         margin-top: 0px;\r\n      }\r\n      &&& .page-title {\r\n         text-align: center;\r\n         .column {\r\n            padding: 0 0 12px 0;\r\n         }\r\n         .balance {\r\n            display: none;\r\n         }\r\n         .button {\r\n            width: 240px;\r\n            line-height: 44px;\r\n         }\r\n      }\r\n   }\r\n   @media screen and (max-width: 767px) {\r\n      > .grid {\r\n         margin-left: 0px;\r\n         margin-right: 0px;\r\n      }\r\n      &&& .send-money {\r\n         margin-top: 20px;\r\n         margin-top: 0px;\r\n      }\r\n      &&& .page-title {\r\n         padding-top: 24px;\r\n         text-align: center;\r\n         .column {\r\n            padding: 0 0 12px 0;\r\n         }\r\n         .balance {\r\n            display: none;\r\n         }\r\n         .button {\r\n            width: 240px;\r\n            line-height: 44px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardContainer = ({ children, account }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column\r\n               as='h1'\r\n               computer={12}\r\n               tablet={16}\r\n               mobile={16}\r\n               verticalAlign='middle'\r\n            >\r\n               <span className='balance'>Balance: </span>\r\n               <span className='color-black'>{account.amount}</span>\r\n               <span className='near'>Ⓝ</span>\r\n            </Grid.Column>\r\n            <Grid.Column\r\n               computer={4}\r\n               tablet={16}\r\n               mobile={16}\r\n               className='send-money'\r\n            >\r\n               <Button as={Link} to='/send-money'>\r\n                  SEND MONEY\r\n               </Button>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      {false ? <DashboardOtherAssets /> : null}\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default DashboardContainer\r\n","import React from 'react'\r\n\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nimport CloseImage from '../../images/icon-close.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 20px;\r\n      margin: 12px 0 12px 0;\r\n\r\n      .img {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 20px;\r\n         right: 20px;\r\n\r\n         img {\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      .text {\r\n         margin: 0 10% 0 0;\r\n         color: #24272a;\r\n         float: left;\r\n\r\n         .header {\r\n            font-family: 'benton-sans', sans-serif;\r\n         }\r\n         .content {\r\n            color: #999999;\r\n            padding-top: 12px;\r\n            line-height: 20px;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardNotice = ({ handleNotice }) => (\r\n   <CustomList horizontal className='box'>\r\n      <List.Item className='text'>\r\n         <List.Header>Here’s a Notice of some sort</List.Header>\r\n         <List.Content>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce nec\r\n            ex non augue volutpat finibus. Suspendisse fringilla consequat magna\r\n            a finibus.{` `}\r\n            <a href='/'>Call to Action</a>\r\n         </List.Content>\r\n      </List.Item>\r\n      <List.Item className='img'>\r\n         <Image onClick={handleNotice} src={CloseImage} />\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default DashboardNotice\r\n","import React from 'react'\r\n\r\nimport { Grid, Image } from 'semantic-ui-react'\r\n\r\nimport ArrowRight from '../../images/icon-arrow-right.svg'\r\nimport ArrowBlkImage from '../../images/icon-arrow-blk.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGridRow = styled(Grid.Row)`\r\n   &&& {\r\n      margin-left: 20px;\r\n      border-left: 4px solid #f8f8f8;\r\n\r\n      .col-image {\r\n         margin-left: -33px;\r\n         width: 40px;\r\n         flex: 0 0 40px;\r\n         padding-left: 0px;\r\n\r\n         .main-image {\r\n            border: 1px solid #e6e6e6;\r\n            background: #fff;\r\n            border-radius: 14px;\r\n            padding: 5px;\r\n            width: 26px;\r\n            height: 26px;\r\n            margin: 0 24px 0 18px;\r\n            overflow: hidden;\r\n\r\n            img {\r\n               margin: 0 0 0 0;\r\n            }\r\n         }\r\n      }\r\n\r\n      &.wide {\r\n         margin-left: 0px;\r\n         border-left: 0px;\r\n\r\n         .col-image {\r\n            margin-left: 6px;\r\n            width: 56px;\r\n            flex: 0 0 56px;\r\n         }\r\n\r\n         .main-image {\r\n            border: 0px;\r\n            padding: 0 10px;\r\n            width: 48px;\r\n            height: 48px;\r\n            background: #e6e6e6;\r\n            border-radius: 32px;\r\n            margin: 0 24px 0 0;\r\n\r\n            img {\r\n               padding-top: 10px;\r\n            }\r\n         }\r\n      }\r\n\r\n      .main-row-title {\r\n         font-weight: 600;\r\n         width: auto;\r\n         padding-right: 0px;\r\n         flex: 1;\r\n         word-break: break-all;\r\n      }\r\n\r\n      .dropdown-image-right {\r\n         width: 10px;\r\n         margin: 0 0 0 0;\r\n         cursor: pointer;\r\n      }\r\n      .dropdown-image {\r\n         float: right;\r\n      }\r\n\r\n      &.dropdown-down {\r\n         background-color: #f8f8f8;\r\n\r\n         .dropdown-image-right {\r\n            width: 10px;\r\n            top: 0px;\r\n            left: 12px;\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      &.showsub {\r\n         .dropdown-image-right {\r\n            left: -24px;\r\n         }\r\n      }\r\n      &.showsub.dropdown-down {\r\n         .dropdown-image-right {\r\n            left: -6px;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         &.showsub {\r\n            .dropdown-image-right {\r\n               left: -14px;\r\n            }\r\n         }\r\n         &.showsub.dropdown-down {\r\n            .dropdown-image-right {\r\n               left: 4px;\r\n            }\r\n         }\r\n\r\n         .main-row-title {\r\n            a {\r\n               font-size: 14px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ListItem = ({\r\n   row,\r\n   i,\r\n   wide = false,\r\n   showSub = false,\r\n   toggleShowSub,\r\n   showSubOpen\r\n}) => (\r\n   <CustomGridRow\r\n      verticalAlign='middle'\r\n      className={`border-bottom-light ${wide ? `wide` : ``} ${\r\n         showSub && showSubOpen === i ? `dropdown-down` : ``\r\n      } ${showSub ? `showsub` : ``}`}\r\n   >\r\n      <Grid.Column\r\n         computer={wide ? 15 : 15}\r\n         tablet={wide ? 14 : 8}\r\n         mobile={wide ? 14 : 10}\r\n      >\r\n         <Grid verticalAlign='middle'>\r\n            <Grid.Column className='col-image'>\r\n               <div className='main-image'>\r\n                  <Image src={row[0]} align='left' />\r\n               </div>\r\n            </Grid.Column>\r\n            <Grid.Column className='main-row-title'>\r\n               contractId: <span className='color-black'>{row[1]}</span>\r\n               {row[2] && (\r\n                  <span className='font-small'>\r\n                     <br />\r\n                     amount:\r\n                     <span className='color-black'>{row[2]}Ⓝ</span>, publicKey:{' '}\r\n                     <span className='color-black'>{row[3]}</span>\r\n                  </span>\r\n               )}\r\n            </Grid.Column>\r\n         </Grid>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         computer={wide ? 1 : 1}\r\n         tablet={wide ? 2 : 8}\r\n         mobile={wide ? 2 : 6}\r\n         textAlign='right'\r\n      >\r\n         {wide ? (\r\n            <Image\r\n               onClick={() => toggleShowSub(i, row)}\r\n               src={showSub && showSubOpen === i ? ArrowBlkImage : ArrowRight}\r\n               className='dropdown-image dropdown-image-right'\r\n            />\r\n         ) : (\r\n            <span className='font-small'>{/* {row[3]} */}</span>\r\n         )}\r\n      </Grid.Column>\r\n   </CustomGridRow>\r\n)\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ListItem from './ListItem'\r\n\r\nimport { Loader, Grid, Dimmer, Button, Header, Image } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      margin-bottom: 20px;\r\n\r\n      .row:first-child {\r\n         padding-bottom: 0px;\r\n      }\r\n\r\n      .row:last-child {\r\n         padding: 14px 0 0 4px;\r\n         margin-left: 20px;\r\n         border-left: 4px solid #f8f8f8;\r\n      }\r\n\r\n      .dashboard-header {\r\n         padding: 14px 0 10px 0;\r\n      }\r\n\r\n      link.view-all,\r\n      button.view-all,\r\n      a.view-all {\r\n         background: #f8f8f8;\r\n         margin: 0;\r\n         padding: 10px 20px;\r\n         color: #0072ce;\r\n         font-weight: 600;\r\n         border-radius: 20px;\r\n         border: 2px solid #f8f8f8;\r\n\r\n         :hover {\r\n            background: #fff;\r\n         }\r\n      }\r\n\r\n      .column-icon {\r\n         width: 28px;\r\n         display: inline-block;\r\n         margin: -4px 10px 0 8px;\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardActivity = ({ loader, image, title, to, activity }) => (\r\n   <CustomGrid>\r\n      <Grid.Row>\r\n         <Grid.Column className='dashboard-header' textAlign='left' width={16}>\r\n            <Header className='h2'>\r\n               <Image className='column-icon' src={image} />\r\n               {title}\r\n            </Header>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Dimmer inverted active={loader}>\r\n         <Loader />\r\n      </Dimmer>\r\n\r\n      {activity.map((row, i) => (\r\n         <ListItem key={`d-${i}`} row={row} />\r\n      ))}\r\n\r\n      <Grid.Row>\r\n         <Grid.Column textAlign='left' width={16}>\r\n            <Button as={Link} to={to} className='view-all'>\r\n               VIEW ALL\r\n            </Button>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default DashboardActivity\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport DashboardContainer from './DashboardContainer'\r\nimport DashboardSection from './DashboardSection'\r\nimport DashboardActivity from './DashboardActivity'\r\n\r\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\r\n\r\nimport TStakeImage from '../../images/icon-t-stake.svg'\r\nimport TTransferImage from '../../images/icon-t-transfer.svg'\r\nimport AppDefaultImage from '../../images/icon-app-default.svg'\r\n\r\nclass DashboardDetail extends Component {\r\n   state = {\r\n      loader: false,\r\n      notice: true,\r\n      activity: [],\r\n      authorizedApps: [],\r\n      newcontacts: []\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.refreshAuthorizedApps()\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      false &&\r\n         setTimeout(() => {\r\n            this.setState(_ => ({\r\n               activity: [\r\n                  [\r\n                     TTransferImage,\r\n                     'Sent: 125 Ⓝ  to @jake.near',\r\n                     'Some details about this activity here',\r\n                     '3 min ago'\r\n                  ],\r\n                  [\r\n                     TStakeImage,\r\n                     'You Staked 10 tokens',\r\n                     'Some details about this activity here',\r\n                     '20 min ago'\r\n                  ],\r\n                  [\r\n                     TTransferImage,\r\n                     'Sent: 125 Ⓝ  to @vlad.near',\r\n                     'Some details about this activity here',\r\n                     '1 hr ago'\r\n                  ]\r\n               ],\r\n               authorizedApps: [\r\n                  [AppDefaultImage, 'NEAR Place', '', '3 hrs ago'],\r\n                  [AppDefaultImage, 'Cryptocats', '', '5 hrs ago'],\r\n                  [AppDefaultImage, 'Knights App', '', '2 days ago']\r\n               ],\r\n               newcontacts: [\r\n                  [\r\n                     AccountGreyImage,\r\n                     'Alex Skidanov ',\r\n                     '',\r\n                     'Connected 2 days ago'\r\n                  ],\r\n                  [AccountGreyImage, '@vlad.near', '', '2 days ago'],\r\n                  [\r\n                     AccountGreyImage,\r\n                     'Illia Polosukhin',\r\n                     '',\r\n                     'Connected 2 days ago'\r\n                  ]\r\n               ]\r\n               // loader: false\r\n            }))\r\n         }, 1000)\r\n   }\r\n\r\n   refreshAuthorizedApps = () => {\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      this.wallet.getAccountDetails().then(response => {\r\n         this.setState(() => ({\r\n            authorizedApps: response.authorizedApps.map(r => [\r\n               AppDefaultImage,\r\n               r.contractId,\r\n               r.amount,\r\n               r.publicKey\r\n               // 'NEAR Place',\r\n               // '3 hrs ago',\r\n               // '',\r\n            ]),\r\n            loader: false\r\n         }))\r\n      })\r\n   }\r\n\r\n   handleNotice = () => {\r\n      this.setState(state => ({\r\n         notice: !state.notice\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         loader,\r\n         notice,\r\n         activity,\r\n         authorizedApps,\r\n         newcontacts\r\n      } = this.state\r\n\r\n      return (\r\n         <DashboardContainer account={this.props.account}>\r\n            <DashboardActivity\r\n               loader={loader}\r\n               image={AuthorizedGreyImage}\r\n               title='Authorized Apps'\r\n               to='/authorized-apps'\r\n               activity={authorizedApps}\r\n            />\r\n            {false ? (\r\n               <DashboardSection\r\n                  notice={notice}\r\n                  handleNotice={this.handleNotice}\r\n               >\r\n                  <DashboardActivity\r\n                     loader={loader}\r\n                     image={activityGreyImage}\r\n                     title='Activity'\r\n                     to='/'\r\n                     activity={activity}\r\n                  />\r\n                  <DashboardActivity\r\n                     loader={loader}\r\n                     image={AuthorizedGreyImage}\r\n                     title='Authorized Apps'\r\n                     to='/authorized-apps'\r\n                     activity={authorizedApps}\r\n                  />\r\n                  <DashboardActivity\r\n                     loader={loader}\r\n                     image={ContactsGreyImage}\r\n                     title='New Contacts'\r\n                     to='/contacts'\r\n                     activity={newcontacts}\r\n                  />\r\n               </DashboardSection>\r\n            ) : null}\r\n         </DashboardContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(DashboardDetail))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid, List, Responsive } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      .username-row {\r\n         padding-bottom: 0px;\r\n         margin-left: -1rem;\r\n      }\r\n      .alert-info {\r\n         font-size: 18px;\r\n         font-weight: 600;\r\n         line-height: 64px;\r\n         margin: 0 0 0 0;\r\n         padding-left: 0px;\r\n         &.problem {\r\n            color: #ff585d;\r\n         }\r\n         &.success {\r\n            color: #6ad1e3;\r\n         }\r\n      }\r\n      .note-box {\r\n         padding-left: 30px;\r\n         .border-left-bold {\r\n            padding-bottom: 20px;\r\n         }\r\n      }\r\n      .note-info {\r\n         .title {\r\n            letter-spacing: 2px;\r\n            font-weight: 600;\r\n            line-height: 20px;\r\n            color: #4a4f54;\r\n         }\r\n      }\r\n      .form-row {\r\n         margin-left: -1rem;\r\n      }\r\n   }\r\n   @media screen and (max-width: 991px) {\r\n      &&& {\r\n         .note-box {\r\n            padding-left: 0px;\r\n         }\r\n      }\r\n   }\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         .username-row {\r\n            margin-left: 0;\r\n         }\r\n         .alert-info {\r\n            padding: 0 0 6px 24px;\r\n            line-height: 34px;\r\n            font-size: 14px;\r\n            margin-top: -6px;\r\n         }\r\n         .note-box {\r\n            padding-left: 1rem;\r\n            margin-top: 10px;\r\n         }\r\n         .note-box {\r\n            .border-left-bold {\r\n               padding-bottom: 0px;\r\n            }\r\n         }\r\n         .form-row {\r\n            padding-top: 6px;\r\n            margin-left: 0;\r\n         }\r\n         &&& .note-info {\r\n            font-size: 12px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst CreateAccountSection = ({ successMessage, errorMessage, children }) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='username-row'>\r\n         <Grid.Column as='h3' computer={16} tablet={16} mobile={16}>\r\n            Choose a Username\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='form-row'>\r\n         <Grid.Column computer={9} tablet={8} mobile={16}>\r\n            {children}\r\n         </Grid.Column>\r\n         <Grid.Column computer={7} tablet={8} mobile={16}>\r\n            <Grid className='note-box'>\r\n               {successMessage && (\r\n                  <Responsive\r\n                     as={Grid.Row}\r\n                     minWidth={Responsive.onlyTablet.minWidth}\r\n                  >\r\n                     <Grid.Column className='alert-info success'>\r\n                        Congrats! this name is available.\r\n                     </Grid.Column>\r\n                  </Responsive>\r\n               )}\r\n               {errorMessage && (\r\n                  <Responsive\r\n                     as={Grid.Row}\r\n                     minWidth={Responsive.onlyTablet.minWidth}\r\n                  >\r\n                     <Grid.Column className='alert-info problem'>\r\n                        Username is taken. Try something else.\r\n                     </Grid.Column>\r\n                  </Responsive>\r\n               )}\r\n\r\n               <Grid.Row>\r\n                  <Grid.Column className='border-left-bold'>\r\n                     <List className='note-info'>\r\n                        <List.Item className='title'>NOTE</List.Item>\r\n                        <List.Item>\r\n                           Your username can be 5-32 characters\r\n                        </List.Item>\r\n                        <List.Item>\r\n                           long and contain any of the following:\r\n                        </List.Item>\r\n                        <List.Item>• Lowercase characters (a-z)</List.Item>\r\n                        <List.Item>• Digits (0-9)</List.Item>\r\n                        <List.Item>• Special characters (@._-)</List.Item>\r\n                     </List>\r\n                  </Grid.Column>\r\n               </Grid.Row>\r\n            </Grid>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nCreateAccountSection.propTypes = {\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default CreateAccountSection\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nimport ProblemsImage from '../../images/icon-problems.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomFormInput = styled(Form.Input)`\r\n   &&&& input {\r\n      width: 100%;\r\n      height: 64px;\r\n      border: 4px solid #f8f8f8;\r\n      padding: 0 0 0 20px;\r\n      font-size: 18px;\r\n      color: #4a4f54;\r\n      font-weight: 400;\r\n      background-color: #f8f8f8;\r\n      position: relative;\r\n      :focus {\r\n         border-color: #f8f8f8;\r\n         background-color: #fff;\r\n      }\r\n      :valid {\r\n         background-color: #fff;\r\n      }\r\n   }\r\n   &&&&& .spinner {\r\n      margin-right: 20px;\r\n      :before,\r\n      :after {\r\n         top: 28px;\r\n         width: 24px;\r\n         height: 24px;\r\n      }\r\n   }\r\n   &.problem > .input > input,\r\n   &.problem > .input > input:focus {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   &.success > .input > input,\r\n   &.success > .input > input:focus {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n`\r\n\r\nconst CreateAccoungFormInput = ({\r\n   formLoader,\r\n   accountId,\r\n   handleChangeAccountId,\r\n   successMessage,\r\n   errorMessage\r\n}) => (\r\n   <CustomFormInput\r\n      loading={formLoader}\r\n      className={`create ${successMessage ? 'success' : ''}${\r\n         errorMessage ? 'problem' : ''\r\n      }`}\r\n      name='accountId'\r\n      value={accountId}\r\n      onChange={handleChangeAccountId}\r\n      placeholder='example: satoshi.near'\r\n      required\r\n   />\r\n)\r\n\r\nCreateAccoungFormInput.propTypes = {\r\n   formLoader: PropTypes.bool.isRequired,\r\n   accountId: PropTypes.string,\r\n   handleChangeAccountId: PropTypes.func.isRequired,\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default CreateAccoungFormInput\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Segment, Form, Button, Responsive } from 'semantic-ui-react'\r\n\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nimport CreateAccoungFormInput from './CreateAccoungFormInput'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst AccountForm = styled(Form)`\r\n   && button {\r\n      width: 288px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n      font-weight: 600;\r\n\r\n      background: #0072ce;\r\n      margin: 10px 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n         opacity: 1 !important;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   .recover {\r\n      margin-top: 36px;\r\n      color: #24272a;\r\n      line-height: 24px;\r\n      font-weight: 600;\r\n\r\n      a {\r\n         text-decoration: underline;\r\n\r\n         :hover {\r\n            text-decoration: none;\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n   }\r\n`\r\n\r\nconst CreateAccountForm = ({\r\n   formLoader,\r\n   accountId,\r\n   successMessage,\r\n   errorMessage,\r\n   handleSubmit,\r\n   handleChangeAccountId,\r\n   handleRecaptcha\r\n}) => (\r\n   <AccountForm autoComplete='off' onSubmit={handleSubmit}>\r\n      <CreateAccoungFormInput\r\n         formLoader={formLoader}\r\n         accountId={accountId}\r\n         handleChangeAccountId={handleChangeAccountId}\r\n         successMessage={successMessage}\r\n         errorMessage={errorMessage}\r\n      />\r\n      <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\r\n         {successMessage && (\r\n            <Segment basic className='alert-info success'>\r\n               Congrats! this name is available.\r\n            </Segment>\r\n         )}\r\n         {errorMessage && (\r\n            <Segment basic className='alert-info problem'>\r\n               Username is taken. Try something else.\r\n            </Segment>\r\n         )}\r\n      </Responsive>\r\n      <ReCAPTCHA\r\n         sitekey='6LfNjp8UAAAAAByZu30I-2-an14USj3yVbbUI3eN'\r\n         onChange={handleRecaptcha}\r\n      />\r\n      <Button type='submit' disabled={!successMessage}>\r\n         CREATE ACCOUNT\r\n      </Button>\r\n\r\n      <div className='recover'>\r\n         <div>Already have an account?</div>\r\n         <Link to='/recover-account'>Recover it here</Link>\r\n      </div>\r\n   </AccountForm>\r\n)\r\n\r\nCreateAccountForm.propTypes = {\r\n   formLoader: PropTypes.bool.isRequired,\r\n   accountId: PropTypes.string,\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired,\r\n   handleSubmit: PropTypes.func.isRequired,\r\n   handleChangeAccountId: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CreateAccountForm\r\n","import React from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\n\r\nconst DisclaimerGrid = styled(Grid)`\r\n   && .disclaimer {\r\n      margin-top: 100px;\r\n\r\n      > .column {\r\n         padding-left: 0px;\r\n         padding-right: 0px;\r\n      }\r\n   }\r\n   .disclaimer-info {\r\n      font-weight: 600;\r\n      letter-spacing: 2px;\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && .disclaimer {\r\n         margin-top: 50px;\r\n         font-size: 12px;\r\n      }\r\n   }\r\n`\r\n\r\nconst Disclaimer = () => (\r\n   <DisclaimerGrid>\r\n      <Grid.Row className='disclaimer border-top-bold'>\r\n         <Grid.Column computer={16} tablet={16} mobile={16}>\r\n            <span className='disclaimer-info'>DISCLAIMER: </span>\r\n            This is a developers&apos; preview Wallet. It should be used for\r\n            NEAR Protocol DevNet only. Learn more at{' '}\r\n            <a href='http://nearprotocol.com'>nearprotocol.com</a>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </DisclaimerGrid>\r\n)\r\n\r\nexport default Disclaimer\r\n","import React from 'react'\r\n\r\nimport { Image, List } from 'semantic-ui-react'\r\n\r\nimport NearLogoImage from '../../images/near_logo.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   background: #f8f8f8;\r\n   width: 360px;\r\n   float: right;\r\n\r\n   img {\r\n      width: 160px;\r\n   }\r\n\r\n   .text {\r\n      margin: 0 16px 16px 64px;\r\n      line-height: 20px !important;\r\n      color: #24272a;\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         margin-top: 14px;\r\n         float: left;\r\n         width: 100%;\r\n      }\r\n   }\r\n`\r\n\r\nconst NearInfo = () => (\r\n   <CustomList className='box'>\r\n      <List.Item>\r\n         <Image src={NearLogoImage} />\r\n      </List.Item>\r\n      <List.Item className='text'>\r\n         NEAR is a scalable computing and storage platform that changes how the\r\n         web works for the better.{' '}\r\n         <a href='https://nearprotocol.com/'>Learn More</a>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default NearInfo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\r\n\r\nimport { parse } from 'query-string'\r\n\r\nimport Disclaimer from '../common/Disclaimer'\r\nimport NearInfo from './NearInfo'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      h2 {\r\n         color: #4a4f54 !important;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n         }\r\n         h1 {\r\n            margin-bottom: 0px;\r\n         }\r\n         h2 {\r\n            font-size: 16px !important;\r\n            line-height: 22px !important;\r\n            color: #999 !important;\r\n         }\r\n         .column.add {\r\n            text-align: left;\r\n            padding-top: 0px !important;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst CreateAccountContainer = ({ loader, children, location }) => (\r\n   <CustomContainer>\r\n      <Grid stackable>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column computer={9} tablet={8} mobile={16}>\r\n               <Header as='h1'>Create Account</Header>\r\n               <Header as='h2'>\r\n                  Creating a NEAR account is easy. Just choose a username and\r\n                  you’re ready to go.\r\n               </Header>\r\n               {parse(location.search).reset_accounts && (\r\n                  <Header as='h3' className='color-blue'>\r\n                     You have been redirected to this page because we had to\r\n                     reset the developer accounts. Please create a new account.\r\n                     We apologize for the inconveience.\r\n                  </Header>\r\n               )}\r\n            </Grid.Column>\r\n            <Grid.Column computer={7} tablet={8} mobile={16} className='add'>\r\n               <NearInfo />\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n\r\n      <Disclaimer />\r\n   </CustomContainer>\r\n)\r\n\r\nCreateAccountContainer.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired,\r\n   location: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CreateAccountContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport CreateAccountSection from './CreateAccountSection'\r\nimport CreateAccountForm from './CreateAccountForm'\r\nimport CreateAccountContainer from './CreateAccountContainer'\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nclass CreateAccount extends Component {\r\n   state = {\r\n      loader: false,\r\n      formLoader: false,\r\n      accountId: '',\r\n      successMessage: false,\r\n      errorMessage: false\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n      // this.props.handleRefreshUrl(this.props.location)\r\n      // this.props.handleRefreshAccount(this.wallet)\r\n   }\r\n\r\n   handleChangeAccountId = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: false\r\n      }))\r\n\r\n      if (!this.wallet.isLegitAccountId(value)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         formLoader: true\r\n      }))\r\n\r\n      this.timeout && clearTimeout(this.timeout)\r\n\r\n      this.timeout = setTimeout(() => {\r\n         this.wallet\r\n            .checkNewAccount(value)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  successMessage: true,\r\n                  errorMessage: false\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  successMessage: false,\r\n                  errorMessage: true\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  formLoader: false\r\n               }))\r\n            })\r\n      }, 500)\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.wallet.isLegitAccountId(this.state.accountId)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: true\r\n      }))\r\n\r\n      this.wallet\r\n         .createNewAccount(this.state.accountId)\r\n         .then(d => {\r\n            this.setState(() => ({\r\n               successMessage: true\r\n            }))\r\n            this.props.history.push(`/set-recovery/${this.state.accountId}`)\r\n         })\r\n         .catch(e => {\r\n            this.setState(() => ({\r\n               errorMessage: true\r\n            }))\r\n            console.error('Error creating account:', e)\r\n         })\r\n         .finally(() => {\r\n            this.setState(() => ({\r\n               formLoader: false\r\n            }))\r\n         })\r\n   }\r\n\r\n   handleRecaptcha = value => {\r\n      console.log(value)\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n\r\n      return (\r\n         <CreateAccountContainer loader={loader} location={this.props.location}>\r\n            <CreateAccountSection {...this.state}>\r\n               <CreateAccountForm\r\n                  {...this.state}\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleRecaptcha={this.handleRecaptcha}\r\n                  handleChangeAccountId={this.handleChangeAccountId}\r\n               />\r\n            </CreateAccountSection>\r\n         </CreateAccountContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const CreateAccountWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(CreateAccount)\r\n","import React from 'react'\r\nimport { Grid, Responsive } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\n\r\nconst RequestStatusBoxGrid = styled(Grid)`\r\n   &&& .alert-info {\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n      line-height: 64px;\r\n      margin: 0 0 0 0;\r\n      padding-left: 0px;\r\n\r\n      &.problem {\r\n         color: #ff585d;\r\n      }\r\n      &.success {\r\n         color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   && {\r\n      padding-left: 30px;\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      .note-box {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .alert-info {\r\n         padding: 0 0 0 24px;\r\n         line-height: 34px;\r\n         font-size: 14px;\r\n      }\r\n\r\n      && {\r\n         padding-left: 1rem;\r\n         margin-top: 10px;\r\n      }\r\n  }\r\n`\r\n/**\r\n * Renders request status.\r\n *\r\n * @param requestStatus {object} request status, can be null in case not completed yet / no outgoing request\r\n * @param requestStatus.success {boolean} true if request was succesful\r\n * @param requestStatus.messageCode {string} localization code of status message to display\r\n */\r\nconst RequestStatusBox = ({ requestStatus }) => (\r\n   requestStatus ?\r\n      <RequestStatusBoxGrid>\r\n         <Responsive\r\n            as={Grid.Row}\r\n            minWidth={Responsive.onlyTablet.minWidth}\r\n         >\r\n            <Grid.Column className={`alert-info ${requestStatus.success ? 'success' : 'problem'}`}>\r\n               {requestStatus.messageCode}\r\n            </Grid.Column>\r\n         </Responsive>\r\n      </RequestStatusBoxGrid>\r\n      : null\r\n)\r\n\r\nexport default RequestStatusBox\r\n","import React from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nimport RequestStatusBox from '../common/RequestStatusBox'\r\n\r\nconst AccountFormSection = ({ requestStatus, children }) => (\r\n   <Grid>\r\n      <Grid.Column computer={9} tablet={8} mobile={16}>\r\n         {children}\r\n      </Grid.Column>\r\n      <Grid.Column computer={7} tablet={8} mobile={16}>\r\n         <RequestStatusBox requestStatus={requestStatus} />\r\n      </Grid.Column>\r\n   </Grid>\r\n)\r\n\r\nexport default AccountFormSection\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button, Segment } from 'semantic-ui-react'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nimport ProblemsImage from '../../images/icon-problems.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst RecoveryInfoForm = styled(Form)`\r\n   margin-left: -1rem;\r\n\r\n   &&&& input {\r\n      width: 100%;\r\n      height: 64px;\r\n      border: 4px solid #f8f8f8;\r\n      padding: 0 0 0 20px;\r\n      font-size: 18px;\r\n      color: #4a4f54;\r\n      font-weight: 400;\r\n      background-color: #f8f8f8;\r\n      position: relative;\r\n      :focus {\r\n         border-color: #f8f8f8;\r\n         background-color: #fff;\r\n      }\r\n      :valid {\r\n         background-color: #fff;\r\n      }\r\n   }\r\n   .create {\r\n      position: relative;\r\n\r\n      .react-phone-number-input__country {\r\n         position: absolute;\r\n         top: 24px;\r\n         right: 22px;\r\n         z-index: 1;\r\n\r\n         &-select-arrow {\r\n            display: none;\r\n         }\r\n      }\r\n   }\r\n   .segment {\r\n      padding: 20px 0 0 0;\r\n      color: #24272a;\r\n      border-top: 4px solid #f8f8f8 !important;\r\n      margin-top: 48px;\r\n      line-height: 24px;\r\n\r\n      a {\r\n         text-decoration: underline;\r\n\r\n         :hover {\r\n            text-decoration: none;\r\n         }\r\n      }\r\n   }\r\n   &&&&& .spinner {\r\n      margin-right: 20px;\r\n      :before,\r\n      :after {\r\n         top: 28px;\r\n         width: 24px;\r\n         height: 24px;\r\n      }\r\n   }\r\n   .problem > .input > input {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .problem > .input > input:focus {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .success > .input > input {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .success > .input > input:focus {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   &&& button {\r\n      width: 288px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n      background: #0072ce;\r\n      margin: 10px 1em 0 0;\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n         opacity: 1 !important;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n   .ui.button {\r\n      height: 60px;\r\n      margin: 10px 0 0 0;\r\n      background-color: #fff;\r\n      border-radius: 30px;\r\n      border: 4px solid #e6e6e6;\r\n      color: #999999;\r\n      font-size: 18px;\r\n      line-height: 24px;\r\n      letter-spacing: 2px;\r\n      :hover {\r\n         background-color: #e6e6e6;\r\n         color: #fff;\r\n      }\r\n   }\r\n   & h3 {\r\n      margin-bottom: 1rem;\r\n   }\r\n   select.react-phone-number-input__country-select {\r\n      height: 100%;\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      margin-left: 0;\r\n   }\r\n`\r\n\r\nconst SetRecoveryInfoForm = ({\r\n   formLoader,\r\n   phoneNumber,\r\n   sentSms,\r\n   isLegit,\r\n   requestStatus,\r\n   handleSubmit,\r\n   handleChange\r\n}) => (\r\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\r\n      {!sentSms && (\r\n         <Form.Field>\r\n            <h3>Phone Number</h3>\r\n            <PhoneInput\r\n               className={`create ${\r\n                  requestStatus\r\n                     ? requestStatus.success\r\n                        ? 'success'\r\n                        : 'problem'\r\n                     : ''\r\n               } ${formLoader ? 'loading' : ''}`}\r\n               name='phoneNumber'\r\n               value={phoneNumber}\r\n               onChange={value =>\r\n                  handleChange(null, { name: 'phoneNumber', value })\r\n               }\r\n               placeholder='example: +1 555 123 4567'\r\n               required\r\n            />\r\n         </Form.Field>\r\n      )}\r\n\r\n      {sentSms && (\r\n         <Form.Field>\r\n            <h3>Security Code from SMS</h3>\r\n            <Input\r\n               name='securityCode'\r\n               onChange={handleChange}\r\n               placeholder='example: 123456'\r\n            />\r\n         </Form.Field>\r\n      )}\r\n\r\n      <Form.Field>\r\n         <Button type='submit' disabled={!isLegit}>\r\n            PROTECT ACCOUNT\r\n         </Button>\r\n      </Form.Field>\r\n\r\n      <Segment basic>\r\n         <span>Skip this step</span>\r\n         if you want to backup your account keys manually. However, skipping\r\n         this will make it impossible for us to assist you with account recovery\r\n         in the future.{' '}\r\n         <Link to='/dashboard' className=''>\r\n            I choose to backup my account manually\r\n         </Link>\r\n      </Segment>\r\n   </RecoveryInfoForm>\r\n)\r\n\r\nexport default SetRecoveryInfoForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\r\n\r\nimport Disclaimer from '../common/Disclaimer'\r\nimport NearInfo from './NearInfo'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      h2 {\r\n         color: #4a4f54 !important;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n         }\r\n         h1 {\r\n            margin-bottom: 0px;\r\n         }\r\n         h2 {\r\n            font-size: 16px !important;\r\n            line-height: 22px !important;\r\n            color: #999 !important;\r\n         }\r\n         .column.add {\r\n            text-align: left;\r\n            padding-top: 0px !important;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nconst SetRecoveryInfoContainer = ({ loader, children }) => (\r\n   <CustomContainer>\r\n      <Grid stackable>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column computer={9} tablet={8} mobile={16}>\r\n               <Header as='h1'>Protect your Account</Header>\r\n               <Header as='h2'>\r\n                  Enter your phone number to make your account easy for you to\r\n                  recover in the future.\r\n               </Header>\r\n            </Grid.Column>\r\n            <Grid.Column computer={7} tablet={8} mobile={16} className='add'>\r\n               <NearInfo />\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      {children}\r\n      <Disclaimer />\r\n   </CustomContainer>\r\n)\r\nSetRecoveryInfoContainer.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired,\r\n   location: PropTypes.object.isRequired\r\n}\r\nexport default SetRecoveryInfoContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { isValidPhoneNumber } from 'react-phone-number-input'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport AccountFormSection from './AccountFormSection'\r\nimport SetRecoveryInfoForm from './SetRecoveryInfoForm'\r\nimport SetRecoveryInfoContainer from './SetRecoveryInfoContainer'\r\nimport { requestCode, validateCode } from '../../actions/account';\r\n\r\nclass SetRecoveryInfo extends Component {\r\n   state = {\r\n      loader: false,\r\n      phoneNumber: '',\r\n      isLegit: false,\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         isLegit: this.isLegitField(name, value)\r\n      }))\r\n   }\r\n\r\n   isLegitField(name, value) {\r\n      // TODO: Use some validation framework?\r\n      let validators = {\r\n         phoneNumber: isValidPhoneNumber,\r\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\r\n      }\r\n      return validators[name](value);\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.state.isLegit) {\r\n         return false\r\n      }\r\n\r\n      const { dispatch } = this.props;\r\n      if (!this.props.sentSms) {\r\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\r\n      } else {\r\n         dispatch(validateCode(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\r\n            .then(({error}) => {\r\n               if (error) return\r\n\r\n               let nextUrl = `/login/${(this.props.url && this.props.url.next_url) || '/'}`\r\n               setTimeout(() => {\r\n                  this.props.history.push(nextUrl)\r\n               }, 1500)\r\n            })\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n      const combinedState = {\r\n         ...this.props,\r\n         ...this.state,\r\n         isLegit: this.state.isLegit && !this.props.formLoader\r\n      }\r\n      return (\r\n         <SetRecoveryInfoContainer loader={loader} location={this.props.location}>\r\n            <AccountFormSection {...combinedState}>\r\n               <SetRecoveryInfoForm\r\n                  {...combinedState}\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleChange={this.handleChange}\r\n               />\r\n            </AccountFormSection>\r\n         </SetRecoveryInfoContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = ({ account }, { match }) => {\r\n   return {\r\n      ...account,\r\n      accountId: match.params.accountId\r\n   }\r\n}\r\n\r\nexport const SetRecoveryInfoWithRouter = connect(mapStateToProps)(SetRecoveryInfo)\r\n","import React from 'react'\r\nimport { Form, Input, Button } from 'semantic-ui-react'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nimport ProblemsImage from '../../images/icon-problems.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst RecoveryInfoForm = styled(Form)`\r\n   margin-left: -1rem;\r\n\r\n   &&&& input {\r\n      width: 100%;\r\n      height: 64px;\r\n      border: 4px solid #f8f8f8;\r\n      padding: 0 0 0 20px;\r\n      font-size: 18px;\r\n      color: #4a4f54;\r\n      font-weight: 400;\r\n      background-color: #f8f8f8;\r\n      position: relative;\r\n      :focus {\r\n         border-color: #f8f8f8;\r\n         background-color: #fff;\r\n      }\r\n      :valid {\r\n         background-color: #fff;\r\n      }\r\n   }\r\n   .create {\r\n      position: relative;\r\n\r\n      .react-phone-number-input__country {\r\n         position: absolute;\r\n         top: 24px;\r\n         right: 22px;\r\n         z-index: 1;\r\n\r\n         &-select-arrow {\r\n            display: none;\r\n         }\r\n      }\r\n   }\r\n   &&&&& .spinner {\r\n      margin-right: 20px;\r\n      :before,\r\n      :after {\r\n         top: 28px;\r\n         width: 24px;\r\n         height: 24px;\r\n      }\r\n   }\r\n   .problem > .input > input {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .problem > .input > input:focus {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .success > .input > input {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .success > .input > input:focus {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   &&& button {\r\n      width: 288px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n      background: #0072ce;\r\n      margin: 10px 0 0 0;\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n         opacity: 1 !important;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n   .ui.button {\r\n      height: 60px;\r\n      margin: 10px 0 0 1em;\r\n      background-color: #fff;\r\n      border-radius: 30px;\r\n      border: 4px solid #e6e6e6;\r\n      color: #999999;\r\n      font-size: 18px;\r\n      line-height: 24px;\r\n      letter-spacing: 2px;\r\n      :hover {\r\n         background-color: #e6e6e6;\r\n         color: #fff;\r\n      }\r\n   }\r\n   & h3 {\r\n      margin-bottom: 1rem;\r\n   }\r\n   select.react-phone-number-input__country-select {\r\n      height: 100%;\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      margin-left: 0;\r\n   }\r\n`\r\n\r\nconst RecoverAccountForm = ({\r\n   formLoader,\r\n   accountId,\r\n   phoneNumber,\r\n   sentSms,\r\n   isLegit,\r\n   requestStatus,\r\n   handleSubmit,\r\n   handleChange\r\n}) => (\r\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\r\n      <Form.Field>\r\n         <h3>Username</h3>\r\n         <Form.Input\r\n            loading={formLoader}\r\n            className={`create ${\r\n               requestStatus\r\n                  ? requestStatus.success\r\n                     ? 'success'\r\n                     : 'problem'\r\n                  : ''\r\n            }`}\r\n            name='accountId'\r\n            value={accountId}\r\n            onChange={handleChange}\r\n            placeholder='example: satoshi.near'\r\n            disabled={sentSms}\r\n            required\r\n         />\r\n      </Form.Field>\r\n      {!sentSms && (\r\n         <Form.Field>\r\n            <h3>Phone Number</h3>\r\n            <PhoneInput\r\n               className={`create ${\r\n                  requestStatus\r\n                     ? requestStatus.success\r\n                        ? 'success'\r\n                        : 'problem'\r\n                     : ''\r\n               } ${formLoader ? 'loading' : ''}`}\r\n               name='phoneNumber'\r\n               value={phoneNumber}\r\n               onChange={value =>\r\n                  handleChange(null, { name: 'phoneNumber', value })\r\n               }\r\n               placeholder='example: +1 555 123 4567'\r\n               required\r\n            />\r\n         </Form.Field>\r\n      )}\r\n\r\n      {sentSms && (\r\n         <Form.Field>\r\n            <h3>Security Code from SMS</h3>\r\n            <Input\r\n               name='securityCode'\r\n               onChange={handleChange}\r\n               placeholder='example: 123456'\r\n            />\r\n         </Form.Field>\r\n      )}\r\n\r\n      <Form.Field>\r\n         <Button type='submit' disabled={!isLegit}>\r\n            FIND MY ACCOUNT\r\n         </Button>\r\n      </Form.Field>\r\n   </RecoveryInfoForm>\r\n)\r\n\r\nexport default RecoverAccountForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\r\n\r\nimport Disclaimer from '../common/Disclaimer'\r\nimport NearInfo from './NearInfo'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      h2 {\r\n         color: #4a4f54 !important;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n         }\r\n         h1 {\r\n            margin-bottom: 0px;\r\n         }\r\n         h2 {\r\n            font-size: 16px !important;\r\n            line-height: 22px !important;\r\n            color: #999 !important;\r\n         }\r\n         .column.add {\r\n            text-align: left;\r\n            padding-top: 0px !important;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nconst RecoverAccountContainer = ({ loader, children }) => (\r\n   <CustomContainer>\r\n      <Grid stackable>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column computer={9} tablet={8} mobile={16}>\r\n               <Header as='h1'>Find your Account</Header>\r\n               <Header as='h2'>\r\n                  Enter your information associated with the account and we will\r\n                  send a recovery code.\r\n               </Header>\r\n            </Grid.Column>\r\n            <Grid.Column computer={7} tablet={8} mobile={16} className='add'>\r\n               <NearInfo />\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n\r\n      <Disclaimer />\r\n   </CustomContainer>\r\n)\r\n\r\nRecoverAccountContainer.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired,\r\n   location: PropTypes.object.isRequired\r\n}\r\n\r\nexport default RecoverAccountContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { isValidPhoneNumber } from 'react-phone-number-input'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport AccountFormSection from './AccountFormSection'\r\nimport RecoverAccountForm from './RecoverAccountForm'\r\nimport RecoverAccountContainer from './RecoverAccountContainer'\r\nimport { requestCode, validateCode } from '../../actions/account';\r\n\r\nclass RecoverAccount extends Component {\r\n   state = {\r\n      loader: false,\r\n      phoneNumber: '',\r\n      isLegit: false,\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         isLegit: this.isLegitField(name, value)\r\n      }))\r\n   }\r\n\r\n   isLegitField(name, value) {\r\n      // TODO: Use some validation framework?\r\n      let validators = {\r\n         accountId: value => this.wallet.isLegitAccountId(value),\r\n         phoneNumber: isValidPhoneNumber,\r\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\r\n      }\r\n      return validators[name](value);\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.state.isLegit) {\r\n         return false\r\n      }\r\n\r\n      const { dispatch } = this.props;\r\n      if (!this.props.sentSms) {\r\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\r\n      } else {\r\n         dispatch(validateCode(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\r\n            .then(({error}) => {\r\n               if (error) return\r\n\r\n               let nextUrl = `/login/${(this.props.url && this.props.url.next_url) || '/'}`\r\n               setTimeout(() => {\r\n                  this.props.history.push(nextUrl)\r\n               }, 1500)\r\n            })\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n      const combinedState = {\r\n         ...this.props,\r\n         ...this.state,\r\n         isLegit: this.state.isLegit && !this.props.formLoader\r\n      }\r\n      return (\r\n         <RecoverAccountContainer loader={loader} location={this.props.location}>\r\n            <AccountFormSection {...combinedState}>\r\n               <RecoverAccountForm\r\n                  {...combinedState}\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleChange={this.handleChange}\r\n               />\r\n            </AccountFormSection>\r\n         </RecoverAccountContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = ({ account }, { match }) => {\r\n   return {\r\n      ...account,\r\n      accountId: match.params.accountId\r\n   }\r\n}\r\n\r\nexport const RecoverAccountWithRouter = connect(mapStateToProps)(RecoverAccount)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n   Container,\r\n   Loader,\r\n   Grid,\r\n   Dimmer,\r\n   Image,\r\n   List,\r\n   Segment\r\n} from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\nimport DenyImage from '../../images/icon-deny.svg'\r\nimport AppDefaultImage from '../../images/icon-app-default.svg'\r\nimport AuthorizeImage from '../../images/icon-authorize.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   && .title {\r\n      padding-top: 40px;\r\n   }\r\n\r\n   && .contract {\r\n      padding-bottom: 40px;\r\n   }\r\n\r\n   &&& .authorize {\r\n      margin-top: 40px;\r\n\r\n      .bg {\r\n         width: 64px;\r\n         height: 64px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n\r\n         > img {\r\n            width: 40px;\r\n            height: 40px;\r\n            margin-top: 8px;\r\n         }\r\n      }\r\n      .md {\r\n         > img {\r\n            margin-top: 8px;\r\n            padding: 0 24px;\r\n         }\r\n      }\r\n   }\r\n\r\n   && .cont {\r\n      background: #f8f8f8;\r\n      padding: 16px 0px;\r\n\r\n      > div {\r\n         padding: 20px 0 20px 50px;\r\n      }\r\n      img {\r\n         height: 24px;\r\n         margin-right: 6px;\r\n      }\r\n      div.item {\r\n         padding-top: 24px;\r\n\r\n         .content {\r\n            line-height: 24px;\r\n         }\r\n      }\r\n   }\r\n\r\n   .list-item {\r\n      background: url(${CheckBlueImage}) no-repeat left 24px;\r\n      background-size: 24px 24px;\r\n\r\n      > .content {\r\n         padding-left: 32px;\r\n      }\r\n   }\r\n\r\n   .list-item-deny {\r\n      background: url(${DenyImage}) no-repeat left 24px;\r\n      background-size: 24px 24px;\r\n\r\n      > .content {\r\n         padding-left: 32px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      && .cont {\r\n         > div {\r\n            padding: 20px 0 20px 20px;\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && .title {\r\n         padding-top: 0px;\r\n\r\n         h2 {\r\n            font-size: 18px !important;\r\n            line-height: 24px !important;\r\n         }\r\n      }\r\n\r\n      && .contract {\r\n         padding-top: 0px;\r\n         padding-bottom: 20px;\r\n      }\r\n\r\n      && .cont {\r\n         > div {\r\n            border: 0px;\r\n            padding: 10px 0 10px 0;\r\n\r\n            h3 {\r\n               font-size: 14px !important;\r\n            }\r\n         }\r\n\r\n         div.item {\r\n            padding-top: 24px;\r\n\r\n            .content {\r\n               font-size: 12px;\r\n               line-height: 14px;\r\n            }\r\n         }\r\n      }\r\n\r\n      &&& .authorize {\r\n         margin-top: 20px;\r\n      }\r\n   }\r\n`\r\n\r\nconst LoginContainer = ({ loader, children, appTitle }) => (\r\n   <CustomContainer>\r\n      <Dimmer.Dimmable as={Segment} basic>\r\n         <Grid>\r\n            <Dimmer inverted active={loader}>\r\n               <Loader />\r\n            </Dimmer>\r\n\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  <List horizontal className='authorize'>\r\n                     <List.Item className='bg'>\r\n                        <Image src={AccountGreyImage} />\r\n                     </List.Item>\r\n                     <List.Item className='md'>\r\n                        <Image src={AuthorizeImage} />\r\n                     </List.Item>\r\n                     <List.Item className='bg'>\r\n                        <Image src={AppDefaultImage} />\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row className='title'>\r\n               <Grid.Column\r\n                  as='h2'\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  <span className='font-bold'>{appTitle} </span> is requesting\r\n                  to use your NEAR account.\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row className='contract'>\r\n               <Grid.Column\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  Contract: @contractname.near\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  largeScreen={2}\r\n                  computer={1}\r\n                  mobile={16}\r\n                  only='large screen computer mobile'\r\n               />\r\n               <Grid.Column\r\n                  largeScreen={6}\r\n                  computer={7}\r\n                  tablet={8}\r\n                  mobile={8}\r\n                  className='cont'\r\n               >\r\n                  <List className='border-right-light'>\r\n                     <List.Item as='h3'>This allows:</List.Item>\r\n                     <List.Item className='list-item'>\r\n                        <List.Content className='color-black'>\r\n                           View your Account Name\r\n                        </List.Content>\r\n                     </List.Item>\r\n                     <List.Item className='list-item'>\r\n                        <List.Content className='color-black'>\r\n                           Write Chat messages with your name\r\n                        </List.Content>\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  largeScreen={6}\r\n                  computer={7}\r\n                  tablet={8}\r\n                  mobile={8}\r\n                  className='cont'\r\n               >\r\n                  <List>\r\n                     <List.Item as='h3'>Does not allow:</List.Item>\r\n                     <List.Item className='list-item-deny'>\r\n                        <List.Content className='color-black'>\r\n                           View your private account details\r\n                        </List.Content>\r\n                     </List.Item>\r\n                     <List.Item className='list-item-deny'>\r\n                        <List.Content className='color-black'>\r\n                           Buy, Sell, or Transfer on your behalf\r\n                        </List.Content>\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  largeScreen={2}\r\n                  computer={1}\r\n                  mobile={16}\r\n                  only='large screen computer mobile'\r\n               />\r\n            </Grid.Row>\r\n         </Grid>\r\n\r\n         {children}\r\n      </Dimmer.Dimmable>\r\n   </CustomContainer>\r\n)\r\n\r\nLoginContainer.propTypes = {\r\n   loader: PropTypes.bool,\r\n   children: PropTypes.element,\r\n   appTitle: PropTypes.string\r\n}\r\n\r\nexport default LoginContainer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, Segment, List, Form, Button } from 'semantic-ui-react'\r\n\r\nimport AddBlueImage from '../../images/icon-add-blue.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\nimport ArrowUpImage from '../../images/icon-arrow-up.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   && button {\r\n      width: 190px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n\r\n      background: #0072ce;\r\n      margin: 0 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   && .deny {\r\n      width: 190px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #e6e6e6;\r\n\r\n      background: transparent;\r\n\r\n      font-size: 18px;\r\n      color: #999;\r\n      letter-spacing: 2px;\r\n\r\n      margin: 0 0 0 0;\r\n\r\n      :hover {\r\n         border: 4px solid #0072ce;\r\n         color: #0072ce;\r\n      }\r\n      :active,\r\n      :focus {\r\n         border: 4px solid #0072ce;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   .segment {\r\n      width: 100%;\r\n      padding: 0px;\r\n      margin: 0px;\r\n   }\r\n\r\n   .dropdown-list {\r\n      width: 100%;\r\n      position: relative;\r\n      cursor: pointer;\r\n\r\n      .element {\r\n         width: 100%;\r\n         min-height: 64px;\r\n         border: solid 4px #24272a;\r\n         margin: 0px;\r\n         padding: 0px;\r\n\r\n         background: #fff;\r\n\r\n         :hover {\r\n            background: #f8f8f8;\r\n         }\r\n         .img {\r\n            float: left;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-color: #d8d8d8;\r\n            background-image: url(${AccountGreyImage});\r\n            background-position: center center;\r\n            background-repeat: no-repeat;\r\n            background-size: 36px 36px;\r\n         }\r\n         .name {\r\n            margin-top: 12px;\r\n            margin-left: 18px;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n            flex: 1;\r\n         }\r\n         .arrow {\r\n            float: right;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-image: url(${ArrowDownImage});\r\n            background-repeat: no-repeat;\r\n            background-position: center center;\r\n            background-size: 24px auto;\r\n\r\n            &.up {\r\n               background-image: url(${ArrowUpImage});\r\n            }\r\n         }\r\n      }\r\n      .trigger {\r\n         display: flex;\r\n      }\r\n      .dropdown {\r\n         .element {\r\n            margin-top: -4px;\r\n            display: flex;\r\n         }\r\n      }\r\n      .create-account {\r\n         width: 100%;\r\n         min-height: 64px;\r\n         border: solid 4px #24272a;\r\n         margin: 0px;\r\n         padding: 0px;\r\n         cursor: pointer;\r\n\r\n         background: #24272a;\r\n\r\n         :hover {\r\n         }\r\n         .img {\r\n            float: left;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-image: url(${AddBlueImage});\r\n            background-position: center center;\r\n            background-repeat: no-repeat;\r\n            background-size: 24px 24px;\r\n         }\r\n         .name {\r\n            float: left;\r\n            margin-top: 12px;\r\n            margin-left: 18px;\r\n         }\r\n         .arrow {\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && {\r\n         button,\r\n         .deny {\r\n            width: 140px;\r\n            border-radius: 35px;\r\n         }\r\n\r\n         .buttons,\r\n         .dropdown {\r\n            .column {\r\n               padding: 0px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst LoginForm = ({\r\n   dropdown,\r\n   account,\r\n   handleOnClick,\r\n   handleDeny,\r\n   handleAllow,\r\n   handleSelectAccount,\r\n   redirectCreateAccount\r\n}) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='dropdown'>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\r\n            <Segment className='dropdown-list' onClick={handleOnClick} basic>\r\n               <List verticalAlign='middle' className={`element trigger`}>\r\n                  <List.Item className='img' />\r\n                  <List.Item as='h3' className='name'>\r\n                     @{account.accountId}\r\n                  </List.Item>\r\n                  <List.Item className={`arrow ${dropdown ? 'up' : ''}`} />\r\n               </List>\r\n\r\n               <Segment basic className={`dropdown ${dropdown ? '' : 'hide'}`}>\r\n                  {Object.keys(account.accounts)\r\n                     .filter(a => a !== account.accountId)\r\n                     .map((account, i) => (\r\n                        <List\r\n                           key={`lf-${i}`}\r\n                           onClick={() => handleSelectAccount(account)}\r\n                           className='element'\r\n                        >\r\n                           <List.Item className='img' />\r\n                           <List.Item as='h3' className='name'>\r\n                              @{account}\r\n                           </List.Item>\r\n                        </List>\r\n                     ))}\r\n                  <List\r\n                     onClick={redirectCreateAccount}\r\n                     className='create-account'\r\n                  >\r\n                     <List.Item className='img' />\r\n                     <List.Item className='h3 name color-seafoam-blue'>\r\n                        Create New Account\r\n                     </List.Item>\r\n                  </List>\r\n               </Segment>\r\n            </Segment>\r\n         </Grid.Column>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n      </Grid.Row>\r\n      <Grid.Row className={`buttons ${dropdown ? 'hide' : ''}`}>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\r\n            <Form action={account.url.success_url}>\r\n               <input\r\n                  type='hidden'\r\n                  name='authToken'\r\n                  value={account.authToken}\r\n               />\r\n               <input\r\n                  type='hidden'\r\n                  name='accountId'\r\n                  value={account.accountId}\r\n               />\r\n               <Button className='deny' onClick={handleDeny}>\r\n                  DENY\r\n               </Button>\r\n               <Button floated='right' onClick={handleAllow}>\r\n                  ALLOW\r\n               </Button>\r\n            </Form>\r\n         </Grid.Column>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nLoginForm.propTypes = {\r\n   dropdown: PropTypes.bool.isRequired,\r\n   handleOnClick: PropTypes.func.isRequired,\r\n   handleDeny: PropTypes.func.isRequired,\r\n   handleSelectAccount: PropTypes.func.isRequired,\r\n   redirectCreateAccount: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(mapStateToProps)(LoginForm)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport LoginContainer from './LoginContainer'\r\nimport LoginForm from './LoginForm'\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nclass Login extends Component {\r\n   state = {\r\n      dropdown: false\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   handleOnClick = () => {\r\n      this.setState({\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handleDeny = e => {\r\n      e.preventDefault();\r\n      if (this.props.account.url.failure_url) {\r\n         window.location.href = this.props.account.url.failure_url\r\n      }\r\n   }\r\n\r\n   handleAllow = e => {\r\n      e.preventDefault()\r\n      this.wallet.addAccessKey(this.props.account.accountId, this.props.account.url.contract_id, this.props.account.url.public_key, this.props.account.url.success_url);\r\n   }\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <LoginContainer\r\n            loader={account.loader}\r\n            appTitle={account.url && account.url.app_title}\r\n         >\r\n            {account.accountId && (\r\n               <LoginForm\r\n                  {...this.state}\r\n                  handleOnClick={this.handleOnClick}\r\n                  handleDeny={this.handleDeny}\r\n                  handleAllow={this.handleAllow}\r\n                  handleSelectAccount={this.handleSelectAccount}\r\n                  redirectCreateAccount={this.redirectCreateAccount}\r\n               />\r\n            )}\r\n         </LoginContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const LoginWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Login))\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Image, List } from 'semantic-ui-react'\r\n\r\nimport ArrowLeftImage from '../../images/icon-arrow-left.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationTabList = styled(List)`\r\n   .ui.button {\r\n      background: #f8f8f8;\r\n      color: #0072ce;\r\n      height: 36px;\r\n      font-weight: 500;\r\n      padding-left: 1em;\r\n      padding-right: 1em;\r\n\r\n      &.active {\r\n         background: #999999;\r\n         color: #ffffff;\r\n      }\r\n\r\n      :hover {\r\n         background: #999999;\r\n         color: #ffffff;\r\n      }\r\n   }\r\n\r\n   .ui.image {\r\n      width: 0.5em;\r\n      padding-bottom: 0px;\r\n   }\r\n`\r\n\r\nconst LEFT_PAGE = 'LEFT'\r\nconst RIGHT_PAGE = 'RIGHT'\r\n\r\nconst range = (from, to, step = 1) => {\r\n   let i = from\r\n   const range = []\r\n\r\n   while (i <= to) {\r\n      range.push(i)\r\n      i += step\r\n   }\r\n\r\n   return range\r\n}\r\n\r\nexport class PaginationTab extends Component {\r\n   static propTypes = {\r\n      totalRecords: PropTypes.number.isRequired,\r\n      pageLimit: PropTypes.number,\r\n      pageNeighbors: PropTypes.number,\r\n      onPageChanged: PropTypes.func,\r\n      initialPage: PropTypes.number.isRequired\r\n   }\r\n\r\n   static defaultProps = {\r\n      pageLimit: 10,\r\n      pageNeighbors: 1,\r\n      onPageChange: () => {},\r\n      initialPage: 0\r\n   }\r\n\r\n   state = {\r\n      currentPage: null\r\n   }\r\n\r\n   getTotalPages() {\r\n      return Math.ceil(this.props.totalRecords / this.props.pageLimit)\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ currentPage: this.props.initialPage + 1 })\r\n   }\r\n\r\n   gotoPage = page => {\r\n      const currentPage = this.props.onPageChanged(page) + 1\r\n      this.setState({ currentPage })\r\n   }\r\n\r\n   handleClick = (page, evt) => {\r\n      evt.preventDefault()\r\n      this.gotoPage(page)\r\n      evt.target.blur()\r\n   }\r\n\r\n   handleMoveLeft = evt => {\r\n      evt.preventDefault()\r\n      this.gotoPage(this.state.currentPage - this.props.pageNeighbors * 2 - 1)\r\n      evt.target.blur()\r\n   }\r\n\r\n   handleMoveRight = evt => {\r\n      evt.preventDefault()\r\n      this.gotoPage(this.state.currentPage + this.props.pageNeighbors * 2 + 1)\r\n      evt.target.blur()\r\n   }\r\n\r\n   fetchPageNumbers = () => {\r\n      const totalPages = this.getTotalPages()\r\n      const currentPage = this.state.currentPage\r\n      const pageNeighbors = this.props.pageNeighbors\r\n\r\n      const totalNumbers = pageNeighbors * 2 + 3\r\n      const totalBlocks = totalNumbers + 2\r\n\r\n      if (totalPages > totalBlocks) {\r\n         let pages = []\r\n\r\n         const leftBound = currentPage - pageNeighbors\r\n         const rightBound = currentPage + pageNeighbors\r\n         const beforeLastPage = totalPages - 1\r\n\r\n         const startPage = leftBound > 2 ? leftBound : 2\r\n         const endPage =\r\n            rightBound < beforeLastPage ? rightBound : beforeLastPage\r\n\r\n         pages = range(startPage, endPage)\r\n\r\n         const pagesCount = pages.length\r\n         const singleSpillOffset = totalNumbers - pagesCount - 1\r\n\r\n         const leftSpill = startPage > 2\r\n         const rightSpill = endPage < beforeLastPage\r\n\r\n         const leftSpillPage = LEFT_PAGE\r\n         const rightSpillPage = RIGHT_PAGE\r\n\r\n         if (leftSpill && !rightSpill) {\r\n            const extraPages = range(\r\n               startPage - singleSpillOffset,\r\n               startPage - 1\r\n            )\r\n            pages = [leftSpillPage, ...extraPages, ...pages]\r\n         } else if (!leftSpill && rightSpill) {\r\n            const extraPages = range(endPage + 1, endPage + singleSpillOffset)\r\n            pages = [...pages, ...extraPages, rightSpillPage]\r\n         } else if (leftSpill && rightSpill) {\r\n            pages = [leftSpillPage, ...pages, rightSpillPage]\r\n         }\r\n\r\n         return [1, ...pages, totalPages]\r\n      }\r\n\r\n      return range(1, totalPages)\r\n   }\r\n\r\n   render() {\r\n      if (!this.props.totalRecords) return null\r\n      if (this.totalPages === 1) return null\r\n\r\n      const pages = this.fetchPageNumbers()\r\n      return (\r\n         <PaginationTabList horizontal className='PaginationTab'>\r\n            {pages.map((page, index) => {\r\n               if (page === LEFT_PAGE)\r\n                  return (\r\n                     <List.Item key={index}>\r\n                        <Button circular onClick={this.handleMoveLeft}>\r\n                           <Image src={ArrowLeftImage} />\r\n                        </Button>\r\n                     </List.Item>\r\n                  )\r\n\r\n               if (page === RIGHT_PAGE)\r\n                  return (\r\n                     <List.Item key={index}>\r\n                        <Button circular onClick={this.handleMoveRight}>\r\n                           ...\r\n                        </Button>\r\n                     </List.Item>\r\n                  )\r\n\r\n               return (\r\n                  <List.Item key={index}>\r\n                     <Button\r\n                        circular\r\n                        active={this.state.currentPage === page}\r\n                        onClick={e => this.handleClick(page, e)}\r\n                     >\r\n                        {page}\r\n                     </Button>\r\n                  </List.Item>\r\n               )\r\n            })}\r\n         </PaginationTabList>\r\n      )\r\n   }\r\n}\r\n","import React from 'react'\r\n\r\nimport { Button, List } from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationPagingList = styled(List)`\r\n   && .paging-dropdown-tr {\r\n      width: 66px;\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n\r\n      border-radius: 18px;\r\n      background-position: 38px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 12px auto;\r\n      padding: 0 20px 0 0;\r\n\r\n      line-height: 32px;\r\n   }\r\n\r\n   && .paging-dropdown {\r\n      padding-top: 0px;\r\n      width: 66px;\r\n      min-height: 30px;\r\n\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 6px;\r\n\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 7px;\r\n      }\r\n\r\n      & > .item > .content {\r\n         font-size: 14px;\r\n         line-height: 18px;\r\n         font-weight: 600;\r\n         padding-left: 6px;\r\n      }\r\n   }\r\n\r\n   &&& .filter-by {\r\n      padding-left: 10px;\r\n      padding-right: 20px;\r\n   }\r\n`\r\n\r\nconst pagingTypes = [10, 20, 50, 100]\r\n\r\nconst PaginationFilter = ({\r\n   handleOnClickPaging,\r\n   pagingValue,\r\n   pagingDropdown,\r\n   handlePagingDropdownClick\r\n}) => (\r\n   <PaginationPagingList horizontal className='border-right-light'>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClickPaging}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='paging-dropdown-tr'\r\n            style={{ backgroundImage: ` url(${ArrowDown})` }}\r\n         >\r\n            {pagingValue}\r\n         </Button>\r\n\r\n         <List\r\n            selection\r\n            verticalAlign='middle'\r\n            className={`paging-dropdown ${pagingDropdown ? '' : 'hide'}`}\r\n         >\r\n            {pagingTypes.map((type, i) => (\r\n               <List.Item\r\n                  key={`page-${i}`}\r\n                  onClick={() => handlePagingDropdownClick(type)}\r\n               >\r\n                  <List.Content verticalAlign='middle'>{type}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n      <List.Item as='h6' className='filter-by'>\r\n         PER PAGE\r\n      </List.Item>\r\n   </PaginationPagingList>\r\n)\r\n\r\nexport default PaginationFilter\r\n","import React from 'react'\r\n\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nimport MSearchImage from '../../images/icon-m-search.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst SearchForm = styled(Form)`\r\n   float: right;\r\n\r\n   &&&& .search input {\r\n      width: 360px;\r\n\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      border-radius: 25px;\r\n      padding-left: 40px;\r\n\r\n      font-size: 14px;\r\n\r\n      background-color: #f8f8f8;\r\n      background-image: url(${MSearchImage});\r\n      background-position: 12px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 14px auto;\r\n   }\r\n`\r\n\r\nconst Search = ({ handleSubmit, handleChange, search }) => (\r\n   <SearchForm onSubmit={handleSubmit}>\r\n      <Form.Input\r\n         className='search'\r\n         name='search'\r\n         value={search}\r\n         onChange={handleChange}\r\n         placeholder='Search transactions and receipts...'\r\n      />\r\n   </SearchForm>\r\n)\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nimport { Button, List } from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationFilterList = styled(List)`\r\n   && .sortby-dropdown-tr {\r\n      width: 210px;\r\n      line-height: 32px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n      border-radius: 18px;\r\n      background-position: 180px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 12px auto;\r\n      background-image: url(${ArrowDown});\r\n      text-align: left;\r\n      padding-top: 0px;\r\n      padding-bottom: 0px;\r\n      letter-spacing: 1.8px;\r\n   }\r\n\r\n   && .sortby-dropdown {\r\n      padding-top: 0px;\r\n      width: 210px;\r\n      min-height: 30px;\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 2px;\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 10px;\r\n      }\r\n\r\n      .item {\r\n         height: 36px !important;\r\n\r\n         img {\r\n            width: 18px !important;\r\n            margin: 0 10px !important;\r\n         }\r\n         .content {\r\n            margin: 2px 0 0 0 !important;\r\n         }\r\n      }\r\n   }\r\n\r\n   &&& .sortby {\r\n      padding-left: 10px;\r\n      padding-right: 0px;\r\n   }\r\n`\r\n\r\nconst PaginationFilter = ({\r\n   filterTypesByType,\r\n   handleOnClick,\r\n   handleDropdownClick,\r\n   dropdown\r\n}) => (\r\n   <PaginationFilterList horizontal>\r\n      <List.Item as='h6' className='sortby'>\r\n         SORT BY\r\n      </List.Item>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClick}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='sortby-dropdown-tr'\r\n         >\r\n            RECENTLY ADDED\r\n         </Button>\r\n\r\n         <List\r\n            selection\r\n            verticalAlign='middle'\r\n            className={`sortby-dropdown ${dropdown ? '' : 'hide'}`}\r\n         >\r\n            {filterTypesByType.map((type, i) => (\r\n               <List.Item\r\n                  key={`sortby-${i}`}\r\n                  onClick={() => handleDropdownClick(type.img)}\r\n               >\r\n                  <List.Content as='h6'>{type.name}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n   </PaginationFilterList>\r\n)\r\n\r\nexport default PaginationFilter\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Grid, List, Image, Button } from 'semantic-ui-react'\r\n\r\nimport TransactionFilter from '../../images/icon-m-filter.svg'\r\nimport CloseImage from '../../images/icon-close.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport MTransactionImage from '../../images/icon-m-transaction.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport { PaginationTab } from './PaginationTab'\r\nimport PaginationPaging from './PaginationPaging'\r\nimport PaginationSummary from './PaginationSummary'\r\nimport Search from '../common/Search'\r\n\r\nimport PaginationSortBy from './PaginationSortBy'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationBlockGrid = styled(Grid)`\r\n   & > .row:first-child {\r\n      ${'' /* min-height: 70px; */}\r\n      padding-top: 0px;\r\n   }\r\n\r\n   &&& .pagination-block-paging {\r\n      padding: 0px;\r\n   }\r\n\r\n   &&& .pagination-block-top {\r\n      padding-left: 0px;\r\n\r\n      &-paging-summary {\r\n         padding-left: 20px;\r\n      }\r\n\r\n      &-search {\r\n         padding: 0px;\r\n      }\r\n\r\n      &-paging {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   &&& .show-sub {\r\n      padding: 0 0 0 0;\r\n      margin-top: -16px;\r\n   }\r\n\r\n   &&& .sub-list {\r\n      background: #fff;\r\n      width: 100%;\r\n      min-height: 448px;\r\n      padding: 0 0;\r\n\r\n      > .item {\r\n         padding: 18px 20px;\r\n      }\r\n\r\n      .img {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 20px;\r\n         right: 20px;\r\n         padding: 0px;\r\n\r\n         img {\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      .text {\r\n         margin: 0 10% 0 0;\r\n         color: #24272a;\r\n         float: left;\r\n\r\n         .header {\r\n            font-family: 'benton-sans', sans-serif;\r\n         }\r\n         .content {\r\n            color: #999999;\r\n            padding-top: 12px;\r\n            line-height: 20px;\r\n         }\r\n      }\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 0 0 0;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .remove-connection {\r\n         > button {\r\n            width: 100%;\r\n            background-color: #ff585d;\r\n            border: 2px solid #ff585d;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               background: #fff;\r\n               color: #ff585d;\r\n            }\r\n         }\r\n      }\r\n      .recent-transactions {\r\n         background-color: #f8f8f8;\r\n         margin: 0 0 0 0;\r\n      }\r\n      .recent-transactions-title {\r\n         padding: 0 0 0 24px;\r\n         background: url(${MTransactionImage}) no-repeat left 2px;\r\n         background-size: 12px auto;\r\n      }\r\n      .recent-transactions-row {\r\n         margin: 0 0 0 24px;\r\n         padding: 12px 0;\r\n         border-bottom: 2px solid #e6e6e6;\r\n      }\r\n      .recent-transactions-row:last-child {\r\n         border-bottom: 0px solid #e6e6e6;\r\n      }\r\n\r\n      .authorized-transactions {\r\n         background-color: #fff;\r\n         margin: 0 0 0 0;\r\n         padding-top: 0px;\r\n      }\r\n      .authorized-transactions-title {\r\n         padding: 12px 0 0 24px;\r\n         background: url(${MTransactionImage}) no-repeat left 14px;\r\n         background-size: 12px auto;\r\n      }\r\n      .authorized-transactions-row {\r\n         margin: 0 0 0 24px;\r\n         padding: 12px 0 0 32px;\r\n         background: url(${CheckBlueImage}) no-repeat left 14px;\r\n         line-height: 32px;\r\n      }\r\n      .authorized-transactions-row:last-child {\r\n         border-bottom: 0px solid #e6e6e6;\r\n      }\r\n\r\n      .send-money {\r\n         > .button {\r\n            width: 100%;\r\n            background-color: #5ace84;\r\n            border: 2px solid #5ace84;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               background-color: #fff;\r\n               color: #5ace84;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   @media screen and (max-width: 991px) {\r\n      &&& .sub-list {\r\n         .img {\r\n            top: 6px;\r\n            right: 6px;\r\n         }\r\n\r\n         .main-image {\r\n            display: none;\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         .mobile-hide {\r\n            display: none;\r\n         }\r\n         .main-image {\r\n            display: block;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nclass PaginationBlock extends Component {\r\n   static defaultProps = {\r\n      onPageChanged: () => {}\r\n   }\r\n\r\n   state = {\r\n      search: '',\r\n      dropdown: false,\r\n      dropdownType: this.props.type\r\n         ? this.props.filterTypes[this.props.type].img\r\n         : TransactionFilter,\r\n      pagingDropdown: false,\r\n      pagingValue: 10,\r\n\r\n      buttonRadio: false\r\n   }\r\n\r\n   handleOnClick = () => {\r\n      this.setState({\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handleOnClickPaging = () => {\r\n      this.setState({\r\n         pagingDropdown: !this.state.pagingDropdown\r\n      })\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({ [name]: value }))\r\n   }\r\n\r\n   handleSubmit = () => {\r\n      console.log('not ready yet')\r\n   }\r\n\r\n   handleDropdownClick = dropdownType => {\r\n      this.setState({\r\n         dropdownType,\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handlePagingDropdownClick = pagingValue => {\r\n      this.setState({\r\n         pagingValue,\r\n         pagingDropdown: !this.state.pagingDropdown\r\n      })\r\n\r\n      this.props.onPageChanged(1, pagingValue)\r\n   }\r\n\r\n   handleTabChange(pageNumber) {\r\n      // this.setState({\r\n      //    pageNumber: pageNumber,\r\n      //    loader: true,\r\n      // })\r\n      // this.updateBlock(pageNumber)\r\n      // return pageNumber\r\n   }\r\n\r\n   buttonRadioClick = () => {\r\n      this.setState(state => ({\r\n         buttonRadio: !state.buttonRadio\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         filterTypes,\r\n         type,\r\n         pageNumber = 0,\r\n         showSub = false,\r\n         subPage,\r\n         showSubData,\r\n         toggleCloseSub,\r\n         handleDeauthorize\r\n      } = this.props\r\n\r\n      const {\r\n         dropdownType,\r\n         dropdown,\r\n         search,\r\n         pagingValue,\r\n         pagingDropdown\r\n      } = this.state\r\n\r\n      const {\r\n         totalRecords = 1100,\r\n         pageLimit = 10,\r\n         initialPage = 0,\r\n         onPageChanged = () => {},\r\n         pageNeighbors = 1\r\n      } = this.props\r\n\r\n      const filterTypesByType = type ? [filterTypes[type]] : filterTypes\r\n\r\n      return (\r\n         <PaginationBlockGrid\r\n            className='border-top-bold border-bottom-bold'\r\n            stackable\r\n            columns={2}\r\n         >\r\n            <Grid.Row className='border-bottom-light'>\r\n               {false && (\r\n                  <Grid.Column\r\n                     width={10}\r\n                     verticalAlign='middle'\r\n                     className='pagination-block-top'\r\n                  >\r\n                     <PaginationSortBy\r\n                        filterTypesByType={filterTypesByType}\r\n                        handleOnClick={this.handleOnClick}\r\n                        dropdownType={dropdownType}\r\n                        handleDropdownClick={this.handleDropdownClick}\r\n                        dropdown={dropdown}\r\n                     />\r\n                  </Grid.Column>\r\n               )}\r\n               {false && (\r\n                  <Grid.Column\r\n                     width={6}\r\n                     textAlign='right'\r\n                     floated='right'\r\n                     verticalAlign='middle'\r\n                     className='pagination-block-top-search'\r\n                  >\r\n                     <Search\r\n                        handleSubmit={this.handleSubmit}\r\n                        handleChange={this.handleChange}\r\n                        search={search}\r\n                     />\r\n                  </Grid.Column>\r\n               )}\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  computer={showSub ? 10 : 16}\r\n                  className={showSub ? `mobile-hide` : ``}\r\n               >\r\n                  <Grid>{this.props.children}</Grid>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  computer={6}\r\n                  className={`show-sub ${showSub ? `` : `hide`}`}\r\n               >\r\n                  <List className='box sub-list'>\r\n                     <List.Item className='img'>\r\n                        <Image\r\n                           onClick={() => toggleCloseSub()}\r\n                           src={CloseImage}\r\n                        />\r\n                     </List.Item>\r\n\r\n                     {subPage === 'authorized-apps' && showSubData ? (\r\n                        <Fragment>\r\n                           <List.Item>\r\n                              <List horizontal>\r\n                                 <List.Item>\r\n                                    <div\r\n                                       className='main-image'\r\n                                       style={{ backgroundColor: '#fff' }}\r\n                                    >\r\n                                       <Image\r\n                                          src={showSubData[0]}\r\n                                          align='left'\r\n                                       />\r\n                                    </div>\r\n                                 </List.Item>\r\n                                 <List.Item>\r\n                                    <List.Header as='h2'>\r\n                                       {showSubData[1]}\r\n                                    </List.Header>\r\n\r\n                                    <List.Item as='h5' className='color-blue'>\r\n                                       <span className='color-black'>\r\n                                          amount:\r\n                                       </span>\r\n                                       {showSubData[2]}Ⓝ\r\n                                    </List.Item>\r\n                                 </List.Item>\r\n                              </List>\r\n                           </List.Item>\r\n                           <List.Item className='remove-connection border-top'>\r\n                              <Button onClick={handleDeauthorize}>\r\n                                 DEAUTHORIZE\r\n                              </Button>\r\n                           </List.Item>\r\n                           {false && (\r\n                              <List.Item className='authorized-transactions'>\r\n                                 <List.Item\r\n                                    as='h6'\r\n                                    className='authorized-transactions-title border-top'\r\n                                 >\r\n                                    AUTHORIZED TO\r\n                                 </List.Item>\r\n                                 <List.Item className='authorized-transactions-row color-black'>\r\n                                    View your Account Name\r\n                                 </List.Item>\r\n                                 <List.Item className='authorized-transactions-row color-black'>\r\n                                    Do something else on your behalf\r\n                                 </List.Item>\r\n                              </List.Item>\r\n                           )}\r\n                           {false && (\r\n                              <List.Item className='recent-transactions'>\r\n                                 <List.Item\r\n                                    as='h6'\r\n                                    className='recent-transactions-title border-top'\r\n                                 >\r\n                                    RECENT TRANSACTIONS\r\n                                 </List.Item>\r\n                                 <List.Item className='recent-transactions-row border-top'>\r\n                                    <List.Header>\r\n                                       Another thing here\r\n                                    </List.Header>\r\n                                    <List.Item>3h ago</List.Item>\r\n                                 </List.Item>\r\n                                 <List.Item className='recent-transactions-row border-top'>\r\n                                    <List.Header>\r\n                                       Another Thing Happened\r\n                                    </List.Header>\r\n                                    <List.Item>3d ago</List.Item>\r\n                                 </List.Item>\r\n                                 <List.Item className='recent-transactions-row border-top'>\r\n                                    <List.Header>\r\n                                       In-app purchase: 20 Ⓝ\r\n                                    </List.Header>\r\n                                    <List.Item>1w ago</List.Item>\r\n                                 </List.Item>\r\n                                 <List.Item className='recent-transactions-row border-top'>\r\n                                    <List.Header>Staked: 10 Ⓝ</List.Header>\r\n                                    <List.Item>2w ago</List.Item>\r\n                                 </List.Item>\r\n                                 <List.Item className='recent-transactions-row border-top'>\r\n                                    <List.Header>Authorized</List.Header>\r\n                                    <List.Item>2w ago</List.Item>\r\n                                 </List.Item>\r\n                              </List.Item>\r\n                           )}\r\n                        </Fragment>\r\n                     ) : (\r\n                        <Fragment>\r\n                           <List.Item>\r\n                              <List horizontal>\r\n                                 <List.Item>\r\n                                    <div className='main-image'>\r\n                                       <Image\r\n                                          src={AccountGreyImage}\r\n                                          align='left'\r\n                                       />\r\n                                    </div>\r\n                                 </List.Item>\r\n                                 <List.Item>\r\n                                    <List.Header as='h2'>\r\n                                       Alex Skidanov\r\n                                    </List.Header>\r\n                                    <List.Item as='h5'>@alex.near</List.Item>\r\n                                 </List.Item>\r\n                              </List>\r\n                           </List.Item>\r\n                           <List.Item className='remove-connection border-top'>\r\n                              <Button>REMOVE CONNECTION</Button>\r\n                           </List.Item>\r\n                           <List.Item className='recent-transactions'>\r\n                              <List.Item\r\n                                 as='h6'\r\n                                 className='recent-transactions-title border-top'\r\n                              >\r\n                                 RECENT TRANSACTIONS\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>You sent 20 Ⓝ</List.Header>\r\n                                 <List.Item>3h ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Alex sent you 1020 Ⓝ</List.Header>\r\n                                 <List.Item>3d ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>\r\n                                    You and Alex played NEAR Chess\r\n                                 </List.Header>\r\n                                 <List.Item>1w ago</List.Item>\r\n                              </List.Item>\r\n                           </List.Item>\r\n                           <List.Item className='send-money border-top'>\r\n                              <Button as={Link} to='/send-money/marcin'>\r\n                                 SEND MONEY\r\n                              </Button>\r\n                           </List.Item>\r\n                        </Fragment>\r\n                     )}\r\n                  </List>\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            {false && (\r\n               <Grid.Row className='border-top-light'>\r\n                  <Grid.Column\r\n                     width={8}\r\n                     verticalAlign='middle'\r\n                     className='pagination-block-top-paging'\r\n                  >\r\n                     <List horizontal verticalAlign='middle'>\r\n                        <List.Item width={6}>\r\n                           <PaginationPaging\r\n                              handleOnClickPaging={this.handleOnClickPaging}\r\n                              pagingValue={pagingValue}\r\n                              pagingDropdown={pagingDropdown}\r\n                              handlePagingDropdownClick={\r\n                                 this.handlePagingDropdownClick\r\n                              }\r\n                           />\r\n                        </List.Item>\r\n                        <List.Item\r\n                           width={6}\r\n                           as='h6'\r\n                           className='pagination-block-top-paging-summary'\r\n                        >\r\n                           <PaginationSummary\r\n                              pageNumber={pageNumber}\r\n                              pageLimit={pageLimit}\r\n                              totalRecords={totalRecords}\r\n                           />\r\n                        </List.Item>\r\n                     </List>\r\n                  </Grid.Column>\r\n                  <Grid.Column\r\n                     width={8}\r\n                     className='pagination-block-paging'\r\n                     textAlign='right'\r\n                  >\r\n                     <PaginationTab\r\n                        totalRecords={totalRecords}\r\n                        pageLimit={pageLimit}\r\n                        initialPage={initialPage}\r\n                        onPageChanged={onPageChanged}\r\n                        pageNeighbors={pageNeighbors}\r\n                     />\r\n                  </Grid.Column>\r\n               </Grid.Row>\r\n            )}\r\n         </PaginationBlockGrid>\r\n      )\r\n   }\r\n}\r\n\r\nexport default PaginationBlock\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         text-align: right;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n            text-align: center;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ContactsContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column computer={10} tablet={10} mobile={16} as='h1'>\r\n               Contacts\r\n            </Grid.Column>\r\n            <Grid.Column\r\n               as='h1'\r\n               computer={6}\r\n               tablet={6}\r\n               mobile={16}\r\n               className='add'\r\n            >\r\n               203<span className='color-brown-grey'> total</span>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default ContactsContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport PaginationBlock from '../pagination/PaginationBlock'\r\nimport ListItem from '../dashboard/ListItem'\r\nimport ContactsContainer from './ContactsContainer'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nclass Contacts extends Component {\r\n   state = {\r\n      loader: false,\r\n      showSub: false,\r\n      showSubOpen: 0,\r\n      activity: [],\r\n      filterTypes: [\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' }\r\n      ]\r\n   }\r\n\r\n   toggleShowSub = i => {\r\n      i = i == null ? this.state.showSubOpen : i\r\n\r\n      this.setState(state => ({\r\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\r\n         showSubOpen: i\r\n      }))\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', '']\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\r\n\r\n      return (\r\n         <ContactsContainer>\r\n            <PaginationBlock\r\n               filterTypes={filterTypes}\r\n               showSub={showSub}\r\n               toggleShowSub={this.toggleShowSub}\r\n            >\r\n               {activity.map((row, i) => (\r\n                  <ListItem\r\n                     key={`c-${i}`}\r\n                     row={row}\r\n                     i={i}\r\n                     wide={true}\r\n                     showSub={showSub}\r\n                     toggleShowSub={this.toggleShowSub}\r\n                     showSubOpen={showSubOpen}\r\n                  />\r\n               ))}\r\n            </PaginationBlock>\r\n         </ContactsContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nexport const ContactsWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Contacts))\r\n","import React from 'react'\r\nimport { Container, Grid, Dimmer, Loader } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         text-align: right;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n            text-align: center;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst AuthorizedAppsContainer = ({ loader, total, children }) => (\r\n   <CustomContainer>\r\n      <Dimmer inverted active={loader}>\r\n         <Loader />\r\n      </Dimmer>\r\n\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column as='h1' computer={10} tablet={10} mobile={16}>\r\n               Authorized Apps\r\n            </Grid.Column>\r\n            <Grid.Column\r\n               as='h1'\r\n               computer={6}\r\n               tablet={6}\r\n               mobile={16}\r\n               className='add'\r\n            >\r\n               {total}\r\n               <span className='color-brown-grey'> total</span>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default AuthorizedAppsContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport PaginationBlock from '../pagination/PaginationBlock'\r\nimport ListItem from '../dashboard/ListItem'\r\n\r\nimport AuthorizedAppsContainer from './AuthorizedAppsContainer'\r\n\r\nimport AppDefaultImage from '../../images/icon-app-default.svg'\r\n\r\nclass AuthorizedApps extends Component {\r\n   state = {\r\n      loader: true,\r\n      showSub: false,\r\n      showSubOpen: 0,\r\n      showSubData: [],\r\n      authorizedApps: [],\r\n      filterTypes: [\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' }\r\n      ]\r\n   }\r\n\r\n   toggleShowSub = (i, row) => {\r\n      i = i == null ? this.state.showSubOpen : i\r\n\r\n      this.setState(state => ({\r\n         showSub: true,\r\n         showSubOpen: i,\r\n         showSubData: row\r\n      }))\r\n   }\r\n\r\n   toggleCloseSub = () => {\r\n      this.setState(() => ({\r\n         showSub: false,\r\n         showSubOpen: 0,\r\n         showSubData: []\r\n      }))\r\n   }\r\n\r\n   handleDeauthorize = () => {\r\n      const publicKey = this.state.showSubData[4]\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      this.wallet.removeAccessKey(publicKey).then(() => {\r\n         this.refreshAuthorizedApps()\r\n\r\n         this.toggleCloseSub()\r\n      })\r\n   }\r\n\r\n   refreshAuthorizedApps = () => {\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      this.wallet.getAccountDetails().then(response => {\r\n         this.setState(() => ({\r\n            authorizedApps: response.authorizedApps.map(r => [\r\n               AppDefaultImage,\r\n               r.contractId,\r\n               r.amount,\r\n               r.publicKey\r\n               // 'NEAR Place',\r\n               // '3 hrs ago',\r\n               // '',\r\n            ]),\r\n            loader: false\r\n         }))\r\n      })\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.refreshAuthorizedApps()\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         loader,\r\n         authorizedApps,\r\n         filterTypes,\r\n         showSub,\r\n         showSubOpen,\r\n         showSubData\r\n      } = this.state\r\n\r\n      return (\r\n         <AuthorizedAppsContainer loader={loader} total={authorizedApps.length}>\r\n            <PaginationBlock\r\n               filterTypes={filterTypes}\r\n               showSub={showSub}\r\n               showSubData={showSubData}\r\n               toggleShowSub={this.toggleShowSub}\r\n               toggleCloseSub={this.toggleCloseSub}\r\n               subPage='authorized-apps'\r\n               handleDeauthorize={this.handleDeauthorize}\r\n            >\r\n               {authorizedApps.map((row, i) => (\r\n                  <ListItem\r\n                     key={`a-${i}`}\r\n                     row={row}\r\n                     i={i}\r\n                     wide={true}\r\n                     showSub={showSub}\r\n                     toggleShowSub={this.toggleShowSub}\r\n                     showSubOpen={showSubOpen}\r\n                  />\r\n               ))}\r\n            </PaginationBlock>\r\n         </AuthorizedAppsContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   ...account\r\n})\r\n\r\nexport const AuthorizedAppsWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(AuthorizedApps))\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n\r\n         :first-child {\r\n            padding-left: 0px;\r\n         }\r\n      }\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-left: 0px;\r\n         line-height: 48px;\r\n      }\r\n   }\r\n\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .creating-info {\r\n         padding-left: 1rem;\r\n         padding-right: 1rem;\r\n      }\r\n\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyContainer = ({ children, step }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='1' className='page-title'>\r\n            <Grid.Column as='h1' textAlign='center'>\r\n               {step === 3 ? `Success!` : `Send Money`}\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default SendMoneyContainer\r\n","import React from 'react'\r\n\r\nimport {\r\n   Header,\r\n   TextArea,\r\n   List,\r\n   Image,\r\n   Button,\r\n   Form,\r\n   Dimmer,\r\n   Loader,\r\n   Segment\r\n} from 'semantic-ui-react'\r\n\r\nimport CreateAccoungFormInput from '../accounts/CreateAccoungFormInput'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&&&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin: 36px auto 0 auto;\r\n      form {\r\n         h3 {\r\n            margin-bottom: 13px;\r\n            text-align: left;\r\n         }\r\n         .alert-info {\r\n            font-weight: 600;\r\n            margin: 0 0 -8px 0;\r\n            padding: 0 0 0 24px !important;\r\n            line-height: 34px;\r\n            font-size: 14px;\r\n            margin-top: -6px;\r\n            text-align: left;\r\n            &.problem {\r\n               color: #ff585d;\r\n            }\r\n            &.success {\r\n               color: #6ad1e3;\r\n            }\r\n         }\r\n         .main-image {\r\n            border: 0px;\r\n            padding: 0 10px;\r\n            width: 48px;\r\n            height: 48px;\r\n            background: #e6e6e6;\r\n            border-radius: 32px;\r\n            margin: 0 auto;\r\n            img {\r\n               padding-top: 10px;\r\n            }\r\n         }\r\n         .amount {\r\n            margin-top: 16px;\r\n            margin-bottom: 0px;\r\n            padding-top: 24px;\r\n            input {\r\n               height: 80px;\r\n               border: 0px;\r\n               font-family: Bw Seido Round;\r\n               font-size: 72px;\r\n               font-weight: 500;\r\n               line-height: 80px;\r\n               color: #4a4f54;\r\n               text-align: center;\r\n               padding: 0px;\r\n            }\r\n         }\r\n         .near-tokens {\r\n            margin: 14px auto 36px auto;\r\n            text-align: center;\r\n            padding: 2px;\r\n            width: 200px;\r\n            background-color: #fff;\r\n            color: #999999;\r\n            font-weight: 600;\r\n         }\r\n         .add-note {\r\n            > textarea {\r\n               width: 100%;\r\n               border: 0px;\r\n               padding: 12px;\r\n               :focus {\r\n                  border: 0px;\r\n               }\r\n            }\r\n         }\r\n         .send-money {\r\n            margin-top: 24px;\r\n            margin-bottom: 6px;\r\n            > button {\r\n               width: 288px;\r\n               line-height: 56px;\r\n               border-radius: 30px;\r\n               border: solid 2px #5ace84;\r\n               font-size: 18px;\r\n               font-weight: 600;\r\n               letter-spacing: 2px;\r\n               text-align: center;\r\n               padding: 0 0 0 0;\r\n               background-color: #5ace84;\r\n               color: #fff;\r\n               :hover {\r\n                  color: #5ace84;\r\n                  background: #fff;\r\n               }\r\n               :disabled {\r\n                  background-color: #e6e6e6;\r\n                  border-color: #e6e6e6;\r\n                  opacity: 1 !important;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         padding: 0px;\r\n         width: 100%;\r\n         text-align: center;\r\n         margin-left: auto;\r\n         margin-right: auto;\r\n         border: 0px;\r\n         .near-tokens {\r\n            width: 200px;\r\n         }\r\n         form {\r\n            .near-tokens {\r\n               margin: 14px auto 24px auto;\r\n            }\r\n            .add-note {\r\n               margin-left: -1rem;\r\n               margin-right: -1rem;\r\n               > textarea {\r\n                  width: 100%;\r\n                  height: 98px;\r\n                  border: 0px;\r\n                  padding: 12px;\r\n                  background: #f8f8f8;\r\n                  :focus {\r\n                     border: 0px;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyFirstStep = ({\r\n   handleNextStep,\r\n   handleChange,\r\n   note,\r\n   loader,\r\n   paramAccountId,\r\n   accountId,\r\n   handleChangeAccountId,\r\n   successMessage,\r\n   errorMessage,\r\n   formLoader,\r\n   amount\r\n}) => (\r\n   <CustomList className='box'>\r\n      <Form autoComplete='off' onSubmit={handleChangeAccountId}>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         {paramAccountId ? (\r\n            <List.Item>\r\n               <List.Content>\r\n                  <div className='main-image'>\r\n                     <Image src={AccountGreyImage} align='left' />\r\n                  </div>\r\n               </List.Content>\r\n               <List.Content as='h2'>{accountId}</List.Content>\r\n               <List.Content>@{accountId}</List.Content>\r\n            </List.Item>\r\n         ) : (\r\n            <List.Item>\r\n               <List.Content>\r\n                  <Header as='h3'>Enter a username to send:</Header>\r\n\r\n                  <CreateAccoungFormInput\r\n                     formLoader={formLoader}\r\n                     accountId={accountId}\r\n                     handleChangeAccountId={handleChangeAccountId}\r\n                     successMessage={successMessage}\r\n                     errorMessage={errorMessage}\r\n                  />\r\n\r\n                  {successMessage && (\r\n                     <Segment basic className='alert-info success'>\r\n                        Username is available.\r\n                     </Segment>\r\n                  )}\r\n                  {errorMessage && (\r\n                     <Segment basic className='alert-info problem'>\r\n                        Username is unavailable.\r\n                     </Segment>\r\n                  )}\r\n               </List.Content>\r\n            </List.Item>\r\n         )}\r\n\r\n         <List.Item className='amount border-top'>\r\n            <Form.Input\r\n               type='number'\r\n               name='amount'\r\n               value={amount}\r\n               onChange={handleChange}\r\n               placeholder='0.00'\r\n               step='0.01'\r\n               min='0'\r\n            />\r\n         </List.Item>\r\n         <List.Item as='h5' className='near-tokens'>\r\n            NEAR TOKENS\r\n         </List.Item>\r\n         {false ? (\r\n            <List.Item className='add-note border-bottom border-top'>\r\n               <TextArea\r\n                  name='note'\r\n                  value={note}\r\n                  onChange={handleChange}\r\n                  placeholder='Add a note...'\r\n               />\r\n            </List.Item>\r\n         ) : null}\r\n         <List.Item className='send-money'>\r\n            <Button\r\n               disabled={\r\n                  paramAccountId\r\n                     ? !(parseFloat(amount) > 0)\r\n                     : !(successMessage && parseFloat(amount) > 0)\r\n               }\r\n               onClick={handleNextStep}\r\n            >\r\n               SEND MONEY\r\n            </Button>\r\n         </List.Item>\r\n      </Form>\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneyFirstStep\r\n","import React from 'react'\r\n\r\nimport { List, Image, Button, Header } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      margin-top: 36px;\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 auto;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .amount {\r\n         margin-top: 0;\r\n         margin-bottom: 0px;\r\n         padding-top: 12px;\r\n         padding-bottom: 24px;\r\n\r\n         font-family: Bw Seido Round;\r\n         font-size: 72px;\r\n         font-weight: 500;\r\n         line-height: 72px;\r\n         color: #4a4f54;\r\n      }\r\n      .to {\r\n         width: 40px;\r\n         background: #fff;\r\n         margin: -20px auto 12px auto;\r\n      }\r\n\r\n      .with-note {\r\n         padding-top: 12px;\r\n\r\n         .expand-note {\r\n            color: #0072ce;\r\n            cursor: pointer;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               text-decoration: underline;\r\n            }\r\n         }\r\n      }\r\n\r\n      .send-money {\r\n         padding-top: 24px;\r\n         padding-bottom: 24px;\r\n         margin-top: 24px;\r\n         margin-bottom: 24px;\r\n\r\n         > .button {\r\n            width: 288px;\r\n            line-height: 60px;\r\n            border-radius: 30px;\r\n            border: solid 2px #5ace84;\r\n            font-size: 18px;\r\n            font-weight: 600;\r\n            letter-spacing: 2px;\r\n            text-align: center;\r\n            padding: 0 0 0 0;\r\n            background-color: #5ace84;\r\n            color: #fff;\r\n\r\n            :hover {\r\n               color: #5ace84;\r\n               background: #fff;\r\n            }\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         .to {\r\n            margin: -20px auto 12px auto;\r\n         }\r\n\r\n         &&& {\r\n            padding: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n\r\n            border: 0px;\r\n\r\n            .amount {\r\n               font-size: 48px !important;\r\n               padding-top: 0px;\r\n            }\r\n            .send-money {\r\n               padding-top: 14px;\r\n               padding-bottom: 14px;\r\n               margin-top: 14px;\r\n               margin-bottom: 14px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneySecondStep = ({\r\n   handleNextStep,\r\n   handleExpandNote,\r\n   expandNote,\r\n   note,\r\n   amount,\r\n   accountId\r\n}) => (\r\n   <CustomList className='box'>\r\n      <List.Item as='h2'>You are sending</List.Item>\r\n      <List.Item as='h1' className='amount border-bottom'>\r\n         {amount}\r\n         <span>Ⓝ</span>\r\n      </List.Item>\r\n      <List.Item className='to'>\r\n         <Header as='h2'>to</Header>\r\n      </List.Item>\r\n      <List.Item>\r\n         <div className='main-image'>\r\n            <Image src={AccountGreyImage} align='left' />\r\n         </div>\r\n      </List.Item>\r\n      <List.Item as='h2'>{accountId}</List.Item>\r\n      <List.Item>@{accountId}</List.Item>\r\n      {note && (\r\n         <List.Item className='with-note '>\r\n            with note:\r\n            <br />\r\n            {expandNote ? (\r\n               <span className='color-black'>{note}</span>\r\n            ) : (\r\n               <span className='expand-note' onClick={handleExpandNote}>\r\n                  Expand note\r\n               </span>\r\n            )}\r\n         </List.Item>\r\n      )}\r\n      <List.Item className='send-money border-top border-bottom'>\r\n         <Button onClick={handleNextStep}>CONFIRM & SEND</Button>\r\n      </List.Item>\r\n      <List.Item>Once confirmed, this is not undoable.</List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneySecondStep\r\n","import React from 'react'\r\n\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport SendImage from '../../images/icon-send.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      margin-top: 12px;\r\n\r\n      .send-money img {\r\n         width: 24px;\r\n      }\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 auto;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .amount {\r\n         margin-top: 32px;\r\n         margin-bottom: 0px;\r\n         padding-top: 12px;\r\n         padding-bottom: 24px;\r\n      }\r\n\r\n      .with-note {\r\n         padding-top: 24px;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         &&& {\r\n            padding: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n\r\n            border: 0px;\r\n\r\n            .send-money img {\r\n               margin-top: 12px;\r\n            }\r\n            .amount {\r\n               padding-top: 0px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyThirdStep = ({ note, amount, accountId }) => (\r\n   <CustomList>\r\n      <List.Item className='send-money'>\r\n         <Image src={SendImage} />\r\n      </List.Item>\r\n      <List.Item as='h2' className='amount'>\r\n         {amount}\r\n         <span>Ⓝ</span> was sent to:\r\n      </List.Item>\r\n      <List.Item>\r\n         <div className='main-image'>\r\n            <Image src={AccountGreyImage} align='left' />\r\n         </div>\r\n      </List.Item>\r\n      <List.Item as='h2'>{accountId}</List.Item>\r\n      <List.Item>@{accountId}</List.Item>\r\n      {note && (\r\n         <List.Item className='with-note'>\r\n            <span className='font-bold'>with note:</span>\r\n            <br />\r\n            {note}\r\n         </List.Item>\r\n      )}\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneyThirdStep\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport SendMoneyContainer from './SendMoneyContainer'\r\nimport SendMoneyFirstStep from './SendMoneyFirstStep'\r\nimport SendMoneySecondStep from './SendMoneySecondStep'\r\nimport SendMoneyThirdStep from './SendMoneyThirdStep'\r\n\r\nclass SendMoney extends Component {\r\n   state = {\r\n      loader: false,\r\n      formLoader: false,\r\n      step: 1,\r\n      note: '',\r\n      expandNote: false,\r\n      paramAccountId: false,\r\n      accountId: '',\r\n      successMessage: false,\r\n      errorMessage: false,\r\n      amount: ''\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      const paramId = this.props.match.params.id\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      if (paramId) {\r\n         this.wallet\r\n            .checkAccount(paramId)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  paramAccountId: true,\r\n                  accountId: paramId\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  accountId: ''\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  loader: false\r\n               }))\r\n            })\r\n      } else {\r\n         this.setState(() => ({\r\n            loader: false\r\n         }))\r\n      }\r\n   }\r\n\r\n   handleNextStep = () => {\r\n      this.setState(state => ({\r\n         step: ++state.step\r\n      }))\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value\r\n      }))\r\n   }\r\n\r\n   handleExpandNote = () => {\r\n      this.setState(() => ({\r\n         expandNote: true\r\n      }))\r\n   }\r\n\r\n   handleChangeAccountId = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: false\r\n      }))\r\n\r\n      if (!this.wallet.isLegitAccountId(value)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         formLoader: true\r\n      }))\r\n\r\n      this.timeout && clearTimeout(this.timeout)\r\n\r\n      this.timeout = setTimeout(() => {\r\n         this.wallet\r\n            .checkAccount(value)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  successMessage: true,\r\n                  errorMessage: false\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  successMessage: false,\r\n                  errorMessage: true\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  formLoader: false\r\n               }))\r\n            })\r\n      }, 500)\r\n   }\r\n\r\n   render() {\r\n      const { step } = this.state\r\n\r\n      return (\r\n         <SendMoneyContainer step={step}>\r\n            {step === 1 && (\r\n               <SendMoneyFirstStep\r\n                  handleNextStep={this.handleNextStep}\r\n                  handleChange={this.handleChange}\r\n                  handleChangeAccountId={this.handleChangeAccountId}\r\n                  {...this.state}\r\n               />\r\n            )}\r\n            {step === 2 && (\r\n               <SendMoneySecondStep\r\n                  handleNextStep={this.handleNextStep}\r\n                  handleExpandNote={this.handleExpandNote}\r\n                  {...this.state}\r\n               />\r\n            )}\r\n            {step === 3 && <SendMoneyThirdStep {...this.state} />}\r\n         </SendMoneyContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nexport const SendMoneyWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(SendMoney))\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n         float: left;\r\n         width: auto !important;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column as='h1'>Account:</Grid.Column>\r\n            <Grid.Column as='h1' className='add'>\r\n               @eugenethedream\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default ProfileContainer\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Popup, Grid, Image } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport LockImage from '../../images/icon-lock.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      .row {\r\n         padding-top: 12px;\r\n         padding-bottom: 12px;\r\n\r\n         .edit-link {\r\n            font-weight: 600;\r\n         }\r\n         .title {\r\n            font-weight: 600;\r\n            color: #24272a;\r\n         }\r\n      }\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 120px;\r\n         height: 120px;\r\n         background: #e6e6e6;\r\n         border-radius: 60px;\r\n\r\n         img {\r\n            width: 100px;\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .locked {\r\n         float: right;\r\n         border: 0px;\r\n         padding: 1px 7px;\r\n         width: 32px;\r\n         height: 32px;\r\n         background: #f8f8f8;\r\n         border-radius: 32px;\r\n\r\n         img {\r\n            padding-top: 4px;\r\n         }\r\n      }\r\n\r\n      .row-title {\r\n         margin-top: 20px;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0px;\r\n         margin-right: 0px;\r\n\r\n         .column {\r\n            padding-left: 0px;\r\n            padding-right: 0px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileDetails = ({ account }) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='border-top-bold'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            PROFILE\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' as='h6' textAlign='center' only='tablet'>\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Username\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            @eugenethedream\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column computer='2' tablet='2' mobile='3' textAlign='right'>\r\n            <Popup\r\n               trigger={\r\n                  <div className='locked'>\r\n                     <Image src={LockImage} align='left' />\r\n                  </div>\r\n               }\r\n               hoverable\r\n               position='left center'\r\n            >\r\n               <Popup.Header>Why is this locked?</Popup.Header>\r\n               <Popup.Content>\r\n                  Your username is your unique identifier in the system and cannot be changed\r\n                  cause data and asset ownership is tied to it.\r\n                  However you are welcome to <Link to=\"/create\">create another account</Link> with desired name\r\n                  and transfer assets as needed.\r\n                  {` `}\r\n                  {false ?\r\n                  <a href='/'>Learn more</a>\r\n                  : null }\r\n               </Popup.Content>\r\n            </Popup>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      {false ? <div>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Full Name\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            Evgeny Kuzyakov\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Photo\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            <div className='main-image'>\r\n               <Image src={AccountGreyImage} align='left' />\r\n            </div>\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className='border-top-bold row-title'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            CONTACT INFORMATION\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            computer='4'\r\n            tablet='4'\r\n            as='h6'\r\n            textAlign='center'\r\n            only='tablet'\r\n         >\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Email\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            email@website.com\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Phone\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            000-000-0000\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Address\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            1234 N. West Ave., San Francisco, CA 98562\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className='border-top-bold row-title'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            FINANCIAL INFORMATION\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            computer='4'\r\n            tablet='4'\r\n            as='h6'\r\n            textAlign='center'\r\n            only='tablet'\r\n         >\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      </div> : null }\r\n\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Balance\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            {account.amount} Ⓝ\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Only Me\r\n         </Grid.Column>\r\n         <Grid.Column as=\"div\">\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default ProfileDetails\r\n","import React from 'react'\r\n\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nconst ProfileSection = ({ children }) => (\r\n   <Grid columns={2} stackable>\r\n      <Grid.Column computer={10}>{children[0]}</Grid.Column>\r\n      <Grid.Column computer={6}>\r\n         {children[1]}\r\n         {children[2]}\r\n      </Grid.Column>\r\n   </Grid>\r\n)\r\n\r\nexport default ProfileSection\r\n","import React from 'react'\r\n\r\nimport { List, Button, Image } from 'semantic-ui-react'\r\n\r\nimport KeysGreyImage from '../../images/icon-keys-grey.svg'\r\nimport DocGreyImage from '../../images/icon-doc-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      margin-top: -1rem;\r\n      padding: 14px 4px 14px 14px;\r\n\r\n      .keys {\r\n         img {\r\n            width: 24px;\r\n            margin-top: 2px;\r\n         }\r\n      }\r\n      .account {\r\n         margin-top: 12px;\r\n\r\n         &-name {\r\n            margin-top: 12px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n         }\r\n         img {\r\n            width: 18px;\r\n            margin-top: 8px;\r\n            margin-right: 20px;\r\n         }\r\n         .download {\r\n            margin: 0px;\r\n         }\r\n         button {\r\n            width: 130px;\r\n            background-color: #0072ce;\r\n            border: 2px solid #0072ce;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n            margin-left: 20px;\r\n\r\n            :hover {\r\n               background-color: #fff;\r\n               color: #0072ce;\r\n            }\r\n         }\r\n         .account-name {\r\n            color: #24272a;\r\n            font-weight: 600;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n         &&& {\r\n            .account {\r\n               .download {\r\n                  float: none;\r\n                  margin: 0 0 0 16px;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         &&& {\r\n            margin-top: 20px;\r\n\r\n            .account {\r\n               button {\r\n                  margin-left: 8px;\r\n               }\r\n               .download {\r\n                  float: right;\r\n                  margin: 0 0 0 0;\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileYourKeys = () => (\r\n   <CustomList className='box'>\r\n      <List.Item className='keys'>\r\n         <List.Icon as={Image} src={KeysGreyImage} />\r\n         <List.Content as='h2'>Your Keys</List.Content>\r\n      </List.Item>\r\n      <List.Item className='account'>\r\n         <List.Content floated='right' className='download'>\r\n            <Button>DOWNLOAD</Button>\r\n         </List.Content>\r\n         <List.Content>\r\n            <Image align='left' src={DocGreyImage} />\r\n         </List.Content>\r\n         <List.Content className='account-name'>\r\n            @eugenethedream.key\r\n         </List.Content>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default ProfileYourKeys\r\n","import React from 'react'\r\n\r\nimport { List } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 8px 0 8px 20px;\r\n      margin-left: 28px;\r\n      margin-top: 20px;\r\n      border-left: 4px solid #f8f8f8;\r\n\r\n      .header {\r\n         line-height: 28px;\r\n      }\r\n      .content {\r\n         line-height: 20px;\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0px;\r\n         border-left: 0px;\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileNotice = () => (\r\n   <CustomList>\r\n      <List.Item>\r\n         <List.Header>Never give your keys away</List.Header>\r\n         <List.Content>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\r\n            sit amet pretium mi, a molestie est.\r\n            <a href='/'>Learn more</a>\r\n         </List.Content>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default ProfileNotice\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport ProfileContainer from './ProfileContainer'\r\nimport ProfileDetails from './ProfileDetails'\r\nimport ProfileSection from './ProfileSection'\r\nimport ProfileYourKeys from './ProfileYourKeys'\r\nimport ProfileNotice from './ProfileNotice'\r\n\r\nclass Profile extends Component {\r\n   state = {\r\n      loader: false\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <ProfileContainer>\r\n            <ProfileSection>\r\n               <ProfileDetails account={this.props.account} />\r\n               { false ?\r\n               <ProfileYourKeys />\r\n               : null }\r\n               { false ?\r\n               <ProfileNotice />\r\n               : null }\r\n            </ProfileSection>\r\n         </ProfileContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const ProfileWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Profile))\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  \r\n  * {\r\n   box-sizing: inherit;\r\n   }\r\n\r\n   #root {\r\n      min-height: 100vh;\r\n      position: relative;\r\n   }\r\n   html {\r\n      box-sizing: border-box;\r\n      min-height: 100vh;\r\n      height: auto !important;\r\n\r\n      body {\r\n         margin: 0;\r\n         padding: 0;\r\n         min-height: 100vh !important;\r\n\r\n         position: relative;\r\n         color: #999;\r\n         font-family: \"benton-sans\",sans-serif;\r\n         font-weight: 500;\r\n         font-size: 14px !important;\r\n      }\r\n   }\r\n   \r\n\r\n   .App {\r\n      min-height: 100vh;\r\n\r\n      > div {\r\n         min-height: 100vh;\r\n      }\r\n   }\r\n\r\n   a {\r\n      color: #0072ce;\r\n   }\r\n   a:hover {\r\n      color: #0072ce;\r\n      text-decoration: underline;\r\n   }\r\n\r\n   h1, .h1 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 48px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 100px;\r\n      color: #24272a;\r\n   }\r\n   h2, .h2 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 24px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 1.33;\r\n      color: #24272a !important;\r\n      margin: 0px;\r\n   }\r\n   h3, .h3 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 18px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 24px !important;\r\n      color: #24272a !important;\r\n      margin: 0px;\r\n   }\r\n   h4, .h4 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      line-height: 1.33;\r\n      color: #24272a;\r\n      margin: 0px;\r\n   }\r\n\r\n   h5, .h5 {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 13px !important;\r\n      line-height: 26px;\r\n      font-weight: 500;\r\n      color: #999999 !important;\r\n      margin: 0px;\r\n      letter-spacing: 1.8px;\r\n   }\r\n\r\n   h6, .h6 {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 12px !important;\r\n      line-height: 18px;\r\n      font-weight: 600;\r\n      color: #999999;\r\n      margin: 0px !important;\r\n      letter-spacing: 1.5px !important;\r\n   }\r\n\r\n\r\n\r\n   .font-small {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 12px !important;\r\n      color: #999 !important;\r\n      font-weight: 500 !important;\r\n\r\n      a {\r\n         font-family: \"benton-sans\",sans-serif !important;\r\n         font-size: 12px !important;\r\n         color: #999 !important;\r\n         font-weight: 500 !important;\r\n      }\r\n\r\n      a:hover {\r\n         color: #999 !important;\r\n      }\r\n   }\r\n\r\n   .ui.form input[type=text] {\r\n      font-family: \"benton-sans\",sans-serif;\r\n      font-size: 16px;\r\n   }\r\n\r\n\r\n   .font-bold {\r\n      font-weight: 600;\r\n   }\r\n\r\n\r\n   .color-seafoam-blue {\r\n      color: #6ad1e3 !important;\r\n   }\r\n   .color-blue {\r\n      color: #0072ce !important;\r\n   }\r\n   .color-brown-grey {\r\n      color: #999;\r\n   }\r\n   .color-charcoal-grey {\r\n      color: #4a4f54 !important;\r\n   }\r\n   .color-black {\r\n      color: #24272a !important;\r\n\r\n      :hover {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n\r\n   .ui.popup > .header {\r\n      font-weight: 600 !important;\r\n      color: #24272a !important;\r\n   }\r\n\r\n\r\n   .ui.list .list>.item .header, .ui.list>.item .header, .ui.button {\r\n      font-weight: 600;\r\n   }\r\n\r\n\r\n   .border-bottom {\r\n      border-bottom: 2px solid #f8f8f8 !important;\r\n   }\r\n   .border-bottom-bold {\r\n      border-bottom: 4px solid #e6e6e6 !important;\r\n   }\r\n   .border-bottom-light {\r\n      border-bottom: 1px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-top {\r\n      border-top: 2px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-top-bold {\r\n      border-top: 4px solid #e6e6e6 !important;\r\n   }\r\n   .border-top-light {\r\n      border-top: 1px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-left-bold {\r\n      border-left: 4px solid #f8f8f8 !important;\r\n   }\r\n\r\n\r\n   .border-right {\r\n      border-right: 2px solid #e6e6e6;\r\n   }\r\n   .border-right-light {\r\n      border-right: 1px solid #e6e6e6;\r\n   }\r\n   .background-lg {\r\n      background: #f8f8f8;\r\n   }\r\n\r\n\r\n   .button {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n   }\r\n\r\n\r\n   .box {\r\n      border: 4px solid #e6e6e6;\r\n      border-radius: 8px;\r\n      margin-bottom: 0px;\r\n      position: relative;\r\n      min-height: 100px;\r\n      position: relative;\r\n\r\n      .row {\r\n         padding: 0px !important;\r\n      }\r\n      .column {\r\n         padding: 24px 10px 20px 30px !important;\r\n         word-wrap: break-word;\r\n      }\r\n      .segment {\r\n         padding: 30px 0 20px 0 !important;\r\n      }\r\n      .list {\r\n         > .item {\r\n            padding: 0px !important;\r\n\r\n            > img {\r\n               top: -4px;\r\n               margin: 0 10px;\r\n            }\r\n            > img.transarrow {\r\n               width: 11px !important;\r\n            }\r\n         }\r\n         > h5.item {\r\n            top: -4px;\r\n         }\r\n      } \r\n   }\r\n\r\n\r\n   .copy-image {\r\n      width: 18px !important;\r\n      margin: 0px 10px 0 0px !important;\r\n      top: -4px !important;\r\n   }\r\n\r\n\r\n   .balance-image {\r\n      font-size: 20px !important;\r\n      font-weight: 100 !important;\r\n\r\n      &-big {\r\n         font-size: 32px !important;\r\n         font-weight: 100 !important;\r\n      }\r\n   }\r\n   \r\n\r\n   .transactions-block .item {\r\n      margin-left: 10px !important;\r\n   }\r\n\r\n\r\n   .hide {\r\n      display: none !important;\r\n   }\r\n\r\n\r\n   .App-section {\r\n      width: 860px;\r\n      margin: auto;\r\n      margin-top: 10px;\r\n      margin-bottom: 20px;\r\n   }\r\n\r\n   .App-error-message {\r\n      width: 100%;\r\n      text-align: center;\r\n      display: inline-block;\r\n      margin: auto;\r\n   }\r\n\r\n   .ui.list .list>.item .header, .ui.list>.item .header {\r\n      font-family: \"benton-sans\",sans-serif;\r\n      \r\n   }\r\n   .ui.popup>.header, .ui.popup {\r\n      color: #999;\r\n      font-family: \"benton-sans\",sans-serif;\r\n      font-weight: 500;\r\n      font-size: 14px !important;\r\n   }\r\n   .ui.popup {\r\n      border: 1px solid #eee;\r\n   }\r\n   .ui.left.center.popup:before {\r\n      box-shadow: 1px -1px 0 0 #eee;\r\n   }\r\n   .ui.bottom.right.popup:before {\r\n      box-shadow: -1px -1px 0 0 #eee;\r\n   }\r\n\r\n\r\n   @media screen and (max-width: 767px) {\r\n      h1, .h1 {\r\n         font-size: 38px !important;\r\n         font-weight: 500;\r\n         line-height: 50px;\r\n         color: #4a4f54;\r\n      }\r\n      h2, .h2 {\r\n         font-size: 24px !important;\r\n         font-weight: 600;\r\n         line-height: 1.33;\r\n         margin: 0px;\r\n      }\r\n      h3, .h3 {\r\n         font-size: 16px !important;\r\n         font-weight: 500;\r\n         line-height: 1.33;\r\n         margin: 0px;\r\n      }\r\n      \r\n\r\n      .box .column {\r\n         padding: 16px 10px !important;\r\n      }\r\n   }\r\n`\r\n","import React, { Component } from 'react'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\n\r\nimport '../index.css'\r\n\r\nimport ResponsiveContainer from './responsive/ResponsiveContainer'\r\nimport Footer from './common/Footer'\r\nimport DashboardDetailWithRouter from './dashboard/DashboardDetail'\r\nimport { CreateAccountWithRouter } from './accounts/CreateAccount'\r\nimport { SetRecoveryInfoWithRouter } from './accounts/SetRecoveryInfo'\r\nimport { RecoverAccountWithRouter } from './accounts/RecoverAccount'\r\nimport { LoginWithRouter } from './login/Login'\r\nimport { ContactsWithRouter } from './contacts/Contacts'\r\nimport { AuthorizedAppsWithRouter } from './authorized-apps/AuthorizedApps'\r\nimport { SendMoneyWithRouter } from './send-money/SendMoney'\r\nimport { ProfileWithRouter } from './profile/Profile'\r\n\r\nimport { ThemeProvider } from 'styled-components'\r\nimport GlobalStyle from './GlobalStyle'\r\nconst theme = {}\r\n\r\nclass Routing extends Component {\r\n   render() {\r\n      return (\r\n         <div className='App'>\r\n            <GlobalStyle />\r\n\r\n            <ConnectedRouter history={this.props.history}>\r\n               <ThemeProvider theme={theme}>\r\n                  <ResponsiveContainer>\r\n                     <Switch>\r\n                        <Route\r\n                           exact\r\n                           path='/'\r\n                           component={DashboardDetailWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/create'\r\n                           component={CreateAccountWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/set-recovery/:accountId'\r\n                           component={SetRecoveryInfoWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/recover-account'\r\n                           component={RecoverAccountWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/login'\r\n                           component={LoginWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/contacts'\r\n                           component={ContactsWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/authorized-apps'\r\n                           component={AuthorizedAppsWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/send-money/:id?'\r\n                           component={SendMoneyWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/profile'\r\n                           component={ProfileWithRouter}\r\n                        />\r\n\r\n                        <Route component={DashboardDetailWithRouter} />\r\n                     </Switch>\r\n                     <Footer />\r\n                  </ResponsiveContainer>\r\n               </ThemeProvider>\r\n            </ConnectedRouter>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Routing\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport createRootReducer from './reducers'\r\nimport createMiddleware from './middleware'\r\n\r\nimport Routing from './components/Routing'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL })\r\n\r\nconst store = createStore(createRootReducer(history), createMiddleware(history))\r\n\r\nReactDOM.render(\r\n   <Provider store={store}>\r\n      <Routing history={history} />\r\n   </Provider>,\r\n   document.getElementById('root')\r\n)\r\nserviceWorker.unregister()\r\n","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport account from './account'\r\n\r\nexport default (history) => combineReducers({\r\n   account,\r\n   router: connectRouter(history)\r\n})\r\n","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-down.fcefbf0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-problems.1f0685f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.5c3cedcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-send.f7a4807a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-app-default.11c1df80.svg\";"],"sourceRoot":""}