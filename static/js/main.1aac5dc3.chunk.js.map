{"version":3,"sources":["images/icon-activity-grey.svg","images/icon-t-stake.svg","images/icon-send.svg","images/icon-logout.svg","images/wallet.png","images/icon-recent.svg","images/icon-activity.svg","images/icon-close.svg","images/icon-m-transaction.svg","images/icon-account-grey.svg","images/icon-help.svg","images/near.svg","images/icon-problems.svg","images/near_logo.svg","images/icon-deny.svg","images/icon-app-default.svg","images/icon-authorize.svg","images/icon-add-blue.svg","images/icon-arrow-up.svg","images/icon-m-filter.svg","images/icon-arrow-left.svg","images/icon-m-search.svg","images/icon-t-key-swap.svg","images/footer-nearkat.svg","images/icon-arrow-down.svg","actions/account.js","reducers/index.js","reducers/account.js","middleware/index.js","utils/wallet.js","components/responsive/MobileView.js","components/responsive/DesktopPopup.js","components/responsive/DesktopView.js","components/responsive/ResponsiveContainer.js","components/common/Footer.js","components/dashboard/DashboardOtherAssets.js","components/dashboard/DashboardContainer.js","components/dashboard/DashboardNotice.js","components/dashboard/DashboardSection.js","components/dashboard/ListItem.js","components/dashboard/DashboardActivity.js","components/dashboard/DashboardDetail.js","components/accounts/CreateAccountSection.js","components/accounts/CreateAccoungFormInput.js","components/accounts/CreateAccountForm.js","components/accounts/NearInfo.js","components/accounts/CreateAccountContainer.js","components/accounts/CreateAccount.js","components/login/LoginContainer.js","components/login/LoginForm.js","components/login/Login.js","components/pagination/PaginationTab.js","components/pagination/PaginationFilter.js","components/pagination/PaginationPaging.js","components/pagination/PaginationSummary.js","components/common/ShowingSwitcher.js","components/common/Search.js","components/pagination/PaginationSortBy.js","components/pagination/PaginationBlock.js","components/contacts/ContactsContainer.js","components/contacts/Contacts.js","components/authorized-apps/AuthorizedAppsContainer.js","components/authorized-apps/AuthorizedApps.js","components/send-money/SendMoneyContainer.js","components/send-money/SendMoneyFirstStep.js","components/send-money/SendMoneySecondStep.js","components/send-money/SendMoney.js","components/profile/ProfileContainer.js","components/profile/ProfileDetails.js","components/profile/ProfileSection.js","components/profile/ProfileYourKeys.js","components/profile/ProfileNotice.js","components/profile/Profile.js","components/GlobalStyle.js","components/Routing.js","serviceWorker.js","index.js","images/icon-contacts-grey.svg","images/icon-authorized-grey.svg","images/icon-t-contract.svg","images/icon-arrow-right.svg","images/icon-check-blue.svg","images/icon-t-transfer.svg"],"names":["module","exports","__webpack_require__","p","REFRESH_ACCOUNT","LOADER_ACCOUNT","REFRESH_URL","handleRefreshAccount","wallet","history","dispatch","getState","redirectIfEmpty","accountId","getAccountId","type","loader","loadAccount","then","v","data","authToken","newAccessToken","account","url","app_title","app_url","contract_id","amount","stake","nonce","code_hash","accounts","catch","e","console","log","handleRefreshUrl","location","parse","search","title","success_url","failure_url","combineReducers","state","arguments","length","undefined","action","Object","objectSpread","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","NODE_URL","KEY_WALLET_ACCOUNTS","KEY_UNIQUE_PREFIX","KEY_WALLET_TOKENS","KEY_ACTIVE_ACCOUNT_ID","ACCOUNT_ID_REGEX","Wallet","classCallCheck","this","key_store","nearlib","BrowserLocalStorageKeystore","near","Near","createDefaultConfig","JSON","localStorage","getItem","tokens","createClass","key","value","setItem","stringify","save","token","possible","i","charAt","Math","floor","random","isLegitAccountId","account_id","test","_sendTransaction","asyncToGenerator","regenerator_default","a","mark","_callee","senderId","receiverId","methodName","args","wrap","_context","prev","next","scheduleFunctionCall","abrupt","sent","stop","_x","_x2","_x3","_x4","_x5","apply","options","param","next_url","reset_accounts","WALLET_CREATE_NEW_ACCOUNT_URL","keys","map","concat","encodeURIComponent","push","replace","isEmpty","redirectToCreateAccount","_loadAccount","_callee2","_context2","Error","nearClient","viewAccount","t0","message","indexOf","clearState","_x6","_x7","_checkAccount","_callee3","_context3","_x8","_checkNewAccount","_callee4","remoteAccount","_context4","_x9","_createNewAccount","_callee5","keyPair","_this","_context5","KeyPair","fromRandomSeed","Promise","resolve","reject","newAccountId","newAccountPublicKey","getPublicKey","xhr","XMLHttpRequest","open","setRequestHeader","onload","status","setKey","responseText","send","_x10","addEventListener","receiveMessage","bind","_processTransactionMessage","_callee6","app_data","hash","signature","_context6","parseInt","sendTransaction","signer","signHash","_x11","_x12","event","request_id","reply","d","source","postMessage","origin","processTransactionMessage","result","success","error","CustomResponsive","styled","Responsive","_templateObject","getWidth","onlyTablet","minWidth","innerWidth","MobileView","dropdown","handleDropdown","setState","handleSelectAccount","selectAccount","props","redirectCreateAccount","_this2","react_default","createElement","maxWidth","Segment","basic","className","Menu","borderless","Item","as","Link","to","Image","src","LogoImage","position","onClick","Loader","active","inline","size","ArrowDownImage","react_router_dom","RecentImage","ActivityImage","SendImage","AccountGreyImage","ContactsGreyImage","AuthorizedGreyImage","LogoutImage","List","filter","Button","children","Component","defaultProps","mapDispatchToProps","connect","_ref","withRouter","CustomPopup","Popup","DesktopPopup_templateObject","DesktopPopup","trigger","hoverable","Icon","Content","DesktopView_templateObject","DesktopView","fixed","activeItem","hideFixedMenu","showFixedMenu","handleItemClick","name","DesktopView_CustomResponsive","onlyComputer","Visibility","once","onBottomPassed","onBottomPassedReverse","pointing","href","target","HelpImage","responsive_DesktopPopup","_ref2","ResponsiveContainer","react","responsive_DesktopView","responsive_MobileView","FooterGrid","Grid","Footer_templateObject","columns","Column","textAlign","verticalAlign","computer","tablet","mobile","Group","LogoFooterImage","only","floated","NearkatImage","CustomGrid","DashboardOtherAssets_templateObject","TContractImage","DashboardOtherAssets","Row","horizontal","Header","Description","CustomContainer","Container","DashboardContainer_templateObject","ArrowRightImage","DashboardContainer","dashboard_DashboardOtherAssets","CustomList","DashboardNotice_templateObject","DashboardNotice","handleNotice","CloseImage","DashboardSection","notice","stackable","dashboard_DashboardNotice","CustomGridRow","ListItem_templateObject","ListItem","row","_ref$wide","wide","_ref$showSub","showSub","toggleShowSub","showSubOpen","align","ArrowRight","DashboardActivity_templateObject","DashboardActivity","image","activity","DashboardActivity_CustomGrid","width","Dimmer","inverted","dashboard_ListItem","DashboardDetail","authorizedaps","newcontacts","setTimeout","_","TTransferImage","TStakeImage","_this$state","dashboard_DashboardContainer","dashboard_DashboardSection","dashboard_DashboardActivity","activityGreyImage","CreateAccountSection_templateObject","CreateAccountSection","successMessage","errorMessage","CreateAccountSection_CustomGrid","CustomFormInput","Form","Input","CreateAccoungFormInput_templateObject","ProblemsImage","CheckBlueImage","CreateAccoungFormInput","formLoader","handleChangeAccountId","loading","onChange","placeholder","AccountForm","CreateAccountForm_templateObject","CreateAccountForm","handleSubmit","handleRecaptcha","autoComplete","onSubmit","accounts_CreateAccoungFormInput","onlyMobile","lib_es","sitekey","disabled","NearInfo_templateObject","NearInfo","NearInfo_CustomList","NearLogoImage","CreateAccountContainer_templateObject","CreateAccountContainer","CreateAccountContainer_CustomContainer","accounts_NearInfo","CreateAccount","componentDidMount","defineProperty","timeout","clearTimeout","checkNewAccount","finally","preventDefault","createNewAccount","accounts_CreateAccountContainer","accounts_CreateAccountSection","accounts_CreateAccountForm","assign","CreateAccountWithRouter","_ref3","LoginContainer_templateObject","DenyImage","LoginContainer","LoginContainer_CustomContainer","Dimmable","AuthorizeImage","AppDefaultImage","largeScreen","LoginForm_templateObject","ArrowUpImage","AddBlueImage","handleOnClick","handleDeny","LoginForm_CustomGrid","Login","login_LoginContainer","login_LoginForm","LoginWithRouter","PaginationTabList","PaginationTab_templateObject","LEFT_PAGE","RIGHT_PAGE","range","from","step","PaginationTab","_Component","_getPrototypeOf2","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","call","currentPage","gotoPage","page","onPageChanged","handleClick","evt","blur","handleMoveLeft","pageNeighbors","handleMoveRight","fetchPageNumbers","totalPages","getTotalPages","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","inherits","ceil","totalRecords","pageLimit","initialPage","index","circular","ArrowLeftImage","onPageChange","PaginationFilter_templateObject","PaginationPagingList","PaginationPaging_templateObject","pagingTypes","PaginationFilter","handleOnClickPaging","pagingValue","pagingDropdown","handlePagingDropdownClick","style","backgroundImage","ArrowDown","selection","PaginationSummary","pageNumber","ShowingSwitcher_templateObject","SearchForm","Search_templateObject","MSearchImage","Search","handleChange","PaginationFilterList","PaginationSortBy_templateObject","filterTypesByType","handleDropdownClick","dropdownType","PaginationSortBy_PaginationFilterList","img","PaginationBlockGrid","PaginationBlock_templateObject","MTransactionImage","PaginationBlock","filterTypes","TransactionFilter","buttonRadio","buttonRadioClick","_this$props","_this$props$pageNumbe","_this$props$showSub","subPage","_this$props2","_this$props2$totalRec","_this$props2$pageLimi","_this$props2$initialP","_this$props2$onPageCh","_this$props2$pageNeig","PaginationSortBy","common_Search","backgroundColor","PaginationPaging","pagination_PaginationSummary","PaginationTab_PaginationTab","ContactsContainer_templateObject","ContactsContainer","ContactsContainer_CustomContainer","Contacts","_this3","contacts_ContactsContainer","pagination_PaginationBlock","ContactsWithRouter","objectDestructuringEmpty","AuthorizedAppsContainer_templateObject","AuthorizedAppsContainer","AuthorizedAppsContainer_CustomContainer","AuthorizedApps","authorized_apps_AuthorizedAppsContainer","AuthorizedAppsWithRouter","SendMoneyContainer_templateObject","SendMoneyContainer","SendMoneyContainer_CustomContainer","SendMoneyFirstStep_templateObject","SendMoneyFirstStep","handleNextStep","note","paramAccountId","SendMoneyFirstStep_CustomList","min","TextArea","parseFloat","SendMoneySecondStep_templateObject","SendMoneySecondStep","handleExpandNote","expandNote","SendMoneySecondStep_CustomList","SendMoney","_ref4","checkAccount","paramId","match","params","id","send_money_SendMoneyContainer","send_money_SendMoneyFirstStep","send_money_SendMoneySecondStep","SendMoneyWithRouter","_ref5","ProfileContainer_templateObject","ProfileContainer","ProfileContainer_CustomContainer","ProfileDetails_templateObject","ProfileDetails","ProfileDetails_CustomGrid","ProfileSection","ProfileYourKeys_templateObject","ProfileYourKeys","ProfileYourKeys_CustomList","TKeySwapImage","ProfileNotice_templateObject","ProfileNotice","ProfileNotice_CustomList","Profile","profile_ProfileContainer","profile_ProfileSection","profile_ProfileDetails","profile_ProfileYourKeys","profile_ProfileNotice","ProfileWithRouter","createGlobalStyle","GlobalStyle_templateObject","theme","Routing","GlobalStyle","basename","process","styled_components_browser_esm","responsive_ResponsiveContainer","react_router","exact","path","component","DashboardDetailWithRouter","Footer","Boolean","hostname","store","createStore","reducer","middleware","ReactDOM","render","es","components_Routing","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1aac5dc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-activity-grey.c5c92b3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-stake.cc91ad52.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-send.f7a4807a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-logout.f6814fb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet.89d47110.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-recent.83086272.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity.b48f419e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.5c3cedcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-transaction.23b32201.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-account-grey.4d7da491.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-help.f6c0707a.svg\";","module.exports = __webpack_public_path__ + \"static/media/near.584de59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-problems.1f0685f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/near_logo.f25a0b86.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-deny.6946f17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-app-default.11c1df80.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorize.377da011.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-add-blue.be7039c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-up.b5be78eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-filter.1f33be14.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-left.5e7a861f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-search.2cea301b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-key-swap.22074a7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/footer-nearkat.3083dec6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-down.fcefbf0b.svg\";","import { parse } from 'query-string'\r\n\r\nexport const REFRESH_ACCOUNT = 'REFRESH_ACCOUNT'\r\nexport const LOADER_ACCOUNT = 'LOADER_ACCOUNT'\r\nexport const REFRESH_URL = 'REFRESH_URL'\r\n\r\nexport function handleRefreshAccount(wallet, history) {\r\n   return (dispatch, getState) => {\r\n      wallet.redirectIfEmpty(history)\r\n      const accountId = wallet.getAccountId()\r\n\r\n      dispatch({\r\n         type: LOADER_ACCOUNT,\r\n         loader: true\r\n      })\r\n\r\n      wallet\r\n         .loadAccount(accountId, history)\r\n         .then(v => {\r\n            dispatch({\r\n               type: REFRESH_ACCOUNT,\r\n               data: {\r\n                  accountId: accountId,\r\n                  authToken: wallet.newAccessToken(\r\n                     getState().account.url.app_title,\r\n                     getState().account.url.app_url,\r\n                     getState().account.url.contract_id\r\n                  ),\r\n                  amount: v['amount'] || 0,\r\n                  stake: v['stake'],\r\n                  nonce: v['nonce'],\r\n                  code_hash: v['code_hash'],\r\n                  accounts: wallet.accounts\r\n               }\r\n            })\r\n\r\n            dispatch({\r\n               type: LOADER_ACCOUNT,\r\n               loader: false\r\n            })\r\n         })\r\n         .catch(e => {\r\n            console.log(e)\r\n         })\r\n   }\r\n}\r\n\r\nexport function handleRefreshUrl(location) {\r\n   return dispatch => {\r\n      dispatch({\r\n         type: REFRESH_URL,\r\n         url: {\r\n            app_title: parse(location.search).title || '',\r\n            app_url: parse(location.search).app_url || '',\r\n            contract_id: parse(location.search).contract_id || '',\r\n            success_url: parse(location.search).success_url || '',\r\n            failure_url: parse(location.search).failure_url || ''\r\n         }\r\n      })\r\n   }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport account from './account'\r\n\r\nexport default combineReducers({\r\n   account\r\n})\r\n","import {\r\n   REFRESH_ACCOUNT,\r\n   LOADER_ACCOUNT,\r\n   REFRESH_URL\r\n} from '../actions/account'\r\n\r\nexport default function account(state = {}, action) {\r\n   switch (action.type) {\r\n      case REFRESH_ACCOUNT:\r\n         return {\r\n            ...state,\r\n            ...action.data\r\n         }\r\n      case LOADER_ACCOUNT: {\r\n         return {\r\n            ...state,\r\n            loader: action.loader\r\n         }\r\n      }\r\n      case REFRESH_URL: {\r\n         return {\r\n            ...state,\r\n            url: action.url\r\n         }\r\n      }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware, compose } from 'redux'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport default composeEnhancers(applyMiddleware(thunk))\r\n","import nearlib from 'nearlib'\r\n\r\nconst WALLET_CREATE_NEW_ACCOUNT_URL = `/create/`\r\n\r\nconst CONTRACT_CREATE_ACCOUNT_URL =\r\n   'https://studio.nearprotocol.com/contract-api/account'\r\nconst NODE_URL = 'https://studio.nearprotocol.com/devnet'\r\n\r\nconst KEY_UNIQUE_PREFIX = '_4:'\r\nconst KEY_WALLET_ACCOUNTS = KEY_UNIQUE_PREFIX + 'wallet:accounts_v2'\r\nconst KEY_WALLET_TOKENS = KEY_UNIQUE_PREFIX + 'wallet:tokens_v2'\r\nconst KEY_ACTIVE_ACCOUNT_ID = KEY_UNIQUE_PREFIX + 'wallet:active_account_id_v2'\r\n\r\nconst ACCOUNT_ID_REGEX = /^[a-z0-9@._-]{5,32}$/\r\n\r\nexport class Wallet {\r\n   constructor() {\r\n      this.key_store = new nearlib.BrowserLocalStorageKeystore()\r\n      this.near = nearlib.Near.createDefaultConfig(NODE_URL)\r\n      this.accounts = JSON.parse(\r\n         localStorage.getItem(KEY_WALLET_ACCOUNTS) || '{}'\r\n      )\r\n      this.tokens = JSON.parse(localStorage.getItem(KEY_WALLET_TOKENS) || '{}')\r\n      this.accountId = localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID) || ''\r\n   }\r\n\r\n   save() {\r\n      localStorage.setItem(KEY_ACTIVE_ACCOUNT_ID, this.accountId)\r\n      localStorage.setItem(KEY_WALLET_ACCOUNTS, JSON.stringify(this.accounts))\r\n      localStorage.setItem(KEY_WALLET_TOKENS, JSON.stringify(this.tokens))\r\n   }\r\n\r\n   getAccountId() {\r\n      return this.accountId\r\n   }\r\n\r\n   selectAccount(accountId) {\r\n      if (!(accountId in this.accounts)) {\r\n         return false\r\n      }\r\n      this.accountId = accountId\r\n      this.save()\r\n   }\r\n\r\n   newAccessToken(app_url, app_title, contract_id) {\r\n      var token = ''\r\n      var possible =\r\n         'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n\r\n      for (var i = 0; i < 32; i++) {\r\n         token += possible.charAt(Math.floor(Math.random() * possible.length))\r\n      }\r\n\r\n      if (!this.isLegitAccountId(contract_id)) {\r\n         contract_id = ''\r\n      }\r\n\r\n      this.tokens[token] = {\r\n         app_url,\r\n         app_title,\r\n         contract_id,\r\n         account_id: this.accountId\r\n      }\r\n      this.save()\r\n      return token\r\n   }\r\n\r\n   isLegitAccountId(accountId) {\r\n      return ACCOUNT_ID_REGEX.test(accountId)\r\n   }\r\n\r\n   async sendTransaction(senderId, receiverId, methodName, amount, args) {\r\n      return await this.near.scheduleFunctionCall(\r\n         amount,\r\n         senderId,\r\n         receiverId,\r\n         methodName,\r\n         args || {}\r\n      )\r\n   }\r\n\r\n   redirectToCreateAccount(options = {}, history) {\r\n      const param = {\r\n         next_url: window.location.search\r\n      }\r\n      if (options.reset_accounts) {\r\n         param.reset_accounts = true\r\n      }\r\n      //  let url = WALLET_CREATE_NEW_ACCOUNT_URL + \"?\" + $.param(param)\r\n      let url =\r\n         WALLET_CREATE_NEW_ACCOUNT_URL +\r\n         '?' +\r\n         Object.keys(param).map(\r\n            (p, i) =>\r\n               `${i ? '&' : ''}${encodeURIComponent(p)}=${encodeURIComponent(\r\n                  param[p]\r\n               )}`\r\n         )\r\n      history ? history.push(url) : window.location.replace(url)\r\n   }\r\n\r\n   isEmpty() {\r\n      return !this.accounts || !Object.keys(this.accounts).length\r\n   }\r\n\r\n   redirectIfEmpty(history) {\r\n      if (this.isEmpty()) {\r\n         this.redirectToCreateAccount({}, history)\r\n      }\r\n   }\r\n\r\n   async loadAccount(accountId, history) {\r\n      if (!(accountId in this.accounts)) {\r\n         throw new Error('Account ' + accountId + \" doesn't exist.\")\r\n      }\r\n      try {\r\n         return await this.near.nearClient.viewAccount(accountId)\r\n      } catch (e) {\r\n         if (e.message && e.message.indexOf('is not valid') !== -1) {\r\n            // We have an account in the storage, but it doesn't exist on blockchain. We probably nuked storage so just redirect to create account\r\n            console.log(e)\r\n            this.clearState()\r\n            this.redirectToCreateAccount(\r\n               {\r\n                  reset_accounts: true\r\n               },\r\n               history\r\n            )\r\n         }\r\n      }\r\n   }\r\n\r\n   async checkAccount(accountId) {\r\n      if (accountId !== this.accountId) {\r\n         return await this.near.nearClient.viewAccount(accountId)\r\n      } else {\r\n         throw new Error('You are logged into account ' + accountId + ' .')\r\n      }\r\n   }\r\n\r\n   async checkNewAccount(accountId) {\r\n      if (accountId in this.accounts) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let remoteAccount = null\r\n      try {\r\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\r\n      } catch (e) {\r\n         // expected\r\n      }\r\n      if (!!remoteAccount) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n   }\r\n\r\n   async createNewAccount(accountId) {\r\n      if (accountId in this.accounts) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let remoteAccount = null\r\n      try {\r\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\r\n      } catch (e) {\r\n         // expected\r\n      }\r\n      if (!!remoteAccount) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let keyPair = await nearlib.KeyPair.fromRandomSeed()\r\n      return await new Promise((resolve, reject) => {\r\n         let data = JSON.stringify({\r\n            newAccountId: accountId,\r\n            newAccountPublicKey: keyPair.getPublicKey()\r\n         })\r\n\r\n         let xhr = new XMLHttpRequest()\r\n         xhr.open('POST', CONTRACT_CREATE_ACCOUNT_URL)\r\n         xhr.setRequestHeader('Content-Type', 'application/json')\r\n         xhr.onload = () => {\r\n            if (xhr.status === 200) {\r\n               this.key_store.setKey(accountId, keyPair).catch(console.log)\r\n               this.accounts[accountId] = true\r\n               this.accountId = accountId\r\n               this.save()\r\n               resolve(xhr)\r\n            } else if (xhr.status !== 200) {\r\n               reject(xhr.responseText)\r\n            }\r\n         }\r\n         xhr.send(data)\r\n      })\r\n   }\r\n\r\n   subscribeForMessages() {\r\n      //  window.addEventListener(\"message\", $.proxy(this.receiveMessage, this), false);\r\n      window.addEventListener('message', this.receiveMessage.bind(this), false)\r\n   }\r\n\r\n   clearState() {\r\n      this.accounts = {}\r\n      this.tokens = {}\r\n      this.accountId = ''\r\n      this.save()\r\n   }\r\n\r\n   async processTransactionMessage(action, data) {\r\n      let token = data['token'] || ''\r\n      if (!(token in this.tokens)) {\r\n         // Unknown token.\r\n         throw new Error('The token ' + token + ' is not found ')\r\n      }\r\n      let app_data = this.tokens[token]\r\n      let accountId = app_data['account_id']\r\n      if (!(accountId in this.accounts)) {\r\n         // Account is no longer authorized.\r\n         throw new Error(\r\n            'The account ' + accountId + ' is not part of the wallet anymore.'\r\n         )\r\n      }\r\n      let contract_id = app_data['contract_id']\r\n      let receiverId = data['receiver_id'] || contract_id\r\n      if (receiverId !== contract_id || !this.isLegitAccountId(receiverId)) {\r\n         // Bad receiver account ID or it doesn't match contract id.\r\n         throw new Error(\r\n            \"Bad receiver's account ID ('\" +\r\n               receiverId +\r\n               \"') or it doesn't match the authorized contract id\"\r\n         )\r\n      }\r\n      let amount = parseInt(data['amount']) || 0\r\n      if (amount !== 0) {\r\n         // Automatic authorization denied since for amounts greater than 0.\r\n         throw new Error('Transaction amount should be 0.')\r\n      }\r\n      let methodName = data['methodName'] || ''\r\n      if (!methodName) {\r\n         // Method name can't be empty since the amount is 0.\r\n         throw new Error(\"Method name can't be empty since the amount is 0\")\r\n      }\r\n      let args = data['args'] || {}\r\n      if (action === 'send_transaction') {\r\n         // Sending the transaction on behalf of the accountId\r\n         return await this.sendTransaction(\r\n            accountId,\r\n            receiverId,\r\n            methodName,\r\n            amount,\r\n            args\r\n         )\r\n      } else if (action === 'sign_transaction') {\r\n         // Signing the provided hash of the transaction. It's a security issue here.\r\n         // In the future we would sign the transaction above and don't depend on the given hash.\r\n         let hash = data['hash'] || ''\r\n         let signature = await this.near.nearClient.signer.signHash(\r\n            hash,\r\n            accountId\r\n         )\r\n         return signature\r\n      } else {\r\n         throw new Error('Unknown action')\r\n      }\r\n   }\r\n\r\n   receiveMessage(event) {\r\n      let data\r\n      try {\r\n         data = JSON.parse(event.data)\r\n      } catch (e) {\r\n         // Silently dying.\r\n         return\r\n      }\r\n      const action = data['action'] || ''\r\n      if (action !== 'send_transaction' && action !== 'sign_transaction') {\r\n         // Unknown action, skipping silently.\r\n         return\r\n      }\r\n      const request_id = data['request_id'] || ''\r\n\r\n      let reply = d => event.source.postMessage(JSON.stringify(d), event.origin)\r\n\r\n      this.processTransactionMessage(action, data)\r\n         .then(result => {\r\n            console.log('Wallet: OK ' + action)\r\n            reply({\r\n               success: true,\r\n               request_id,\r\n               result\r\n            })\r\n         })\r\n         .catch(error => {\r\n            console.error('Wallet: failed to ' + action, error)\r\n            reply({\r\n               success: false,\r\n               request_id,\r\n               error\r\n            })\r\n         })\r\n   }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport {\r\n   Image,\r\n   Menu,\r\n   Responsive,\r\n   Segment,\r\n   List,\r\n   Button,\r\n   Loader\r\n} from 'semantic-ui-react'\r\n\r\nimport SendImage from '../../images/icon-send.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\r\nimport LogoutImage from '../../images/icon-logout.svg'\r\nimport LogoImage from '../../images/wallet.png'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\nimport RecentImage from '../../images/icon-recent.svg'\r\nimport ActivityImage from '../../images/icon-activity.svg'\r\n\r\nimport { handleRefreshAccount } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomResponsive = styled(Responsive)`\r\n   &&& {\r\n      .navbar {\r\n         padding: 0px;\r\n\r\n         &-main {\r\n            background-color: #24272a;\r\n            height: 72px;\r\n            border-radius: 0;\r\n            margin-bottom: 0;\r\n\r\n            .mainlogo {\r\n               padding-left: 0px;\r\n\r\n               > div {\r\n                  width: 50px;\r\n                  overflow: hidden;\r\n\r\n                  > img.image {\r\n                     width: 160px;\r\n                     max-width: none;\r\n                  }\r\n               }\r\n            }\r\n\r\n            .account-name {\r\n               padding-right: 0px;\r\n\r\n               > div {\r\n                  font-size: 16px;\r\n                  letter-spacing: normal;\r\n                  padding-left: 0px;\r\n                  padding-right: 0px;\r\n                  text-overflow: ellipsis;\r\n                  overflow: hidden;\r\n                  width: 116px;\r\n                  color: #fff;\r\n\r\n                  :hover {\r\n                     color: #fff;\r\n                  }\r\n               }\r\n            }\r\n\r\n            .account-tokens {\r\n               line-height: 24px;\r\n               font-size: 16px;\r\n\r\n               color: #fff;\r\n\r\n               margin: 23px 0 0 10px;\r\n               height: 24px;\r\n               background: #111314;\r\n               border-radius: 12px;\r\n               padding: 0 10px;\r\n\r\n               letter-spacing: normal;\r\n\r\n               :hover {\r\n                  color: #fff;\r\n               }\r\n\r\n               .near {\r\n                  font-size: 18px;\r\n                  padding-left: 4px;\r\n               }\r\n            }\r\n\r\n            .account-arrow {\r\n               padding-right: 14px;\r\n\r\n               img {\r\n                  width: 12px;\r\n               }\r\n            }\r\n         }\r\n         &-sub {\r\n            margin: 0px;\r\n            padding: 0px;\r\n            background-color: #24272a;\r\n\r\n            &.hide {\r\n               display: none;\r\n            }\r\n\r\n            .main {\r\n               font-family: 'benton-sans', sans-serif;\r\n               font-weight: 400;\r\n               font-size: 14px;\r\n               padding: 18px 6px;\r\n               margin: 0 1rem;\r\n               border-top: 2px solid #363b3e;\r\n\r\n               &.border {\r\n                  border-bottom: 2px solid #363b3e;\r\n               }\r\n\r\n               a {\r\n                  color: #fff;\r\n                  letter-spacing: 2px;\r\n               }\r\n\r\n               img {\r\n                  margin-top: -4px;\r\n                  width: 24px;\r\n                  margin-right: 20px;\r\n                  display: inline-block !important;\r\n               }\r\n            }\r\n\r\n            .sub {\r\n               padding: 10px 1rem 0 1rem;\r\n\r\n               .item {\r\n                  font-family: 'benton-sans', sans-serif;\r\n                  font-weight: 400;\r\n                  font-size: 14px;\r\n                  padding: 8px 9px;\r\n\r\n                  a {\r\n                     color: #6ad1e3;\r\n                     letter-spacing: 2px;\r\n                  }\r\n\r\n                  img {\r\n                     margin-top: -2px;\r\n                     width: 18px;\r\n                     margin-right: 22px;\r\n                     display: inline-block !important;\r\n                  }\r\n               }\r\n            }\r\n\r\n            .switch-account {\r\n               background: #000;\r\n               padding: 0 1rem;\r\n\r\n               padding: 20px;\r\n\r\n               .item {\r\n                  padding: 0 10px;\r\n               }\r\n\r\n               h6.item {\r\n                  padding-bottom: 10px;\r\n                  border: 0px;\r\n               }\r\n\r\n               .account-title {\r\n                  height: 40px;\r\n                  line-height: 40px;\r\n                  color: #fff;\r\n                  font-weight: 500;\r\n                  border-bottom: 1px solid #323434;\r\n                  letter-spacing: normal;\r\n\r\n                  text-overflow: ellipsis;\r\n                  overflow: hidden;\r\n               }\r\n\r\n               button {\r\n                  width: 100%;\r\n                  border-radius: 30px;\r\n                  background: #24272a;\r\n                  color: #6ad1e3;\r\n\r\n                  :hover {\r\n                     background: #fff;\r\n                     color: #6ad1e3;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst getWidth = () => {\r\n   const isSSR = typeof window === 'undefined'\r\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\nclass MobileView extends Component {\r\n   static propTypes = {\r\n      children: PropTypes.node\r\n   }\r\n\r\n   static defaultProps = {\r\n      children: ''\r\n   }\r\n\r\n   state = {\r\n      dropdown: true\r\n   }\r\n\r\n   handleDropdown = () =>\r\n      this.setState(state => ({\r\n         dropdown: !state.dropdown\r\n      }))\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n      this.handleDropdown()\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet = new Wallet()\r\n      this.handleDropdown()\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { dropdown } = this.state\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <CustomResponsive\r\n            getWidth={getWidth}\r\n            maxWidth={Responsive.onlyTablet.maxWidth}\r\n         >\r\n            <Segment basic className='navbar'>\r\n               <Menu\r\n                  className='navbar-main'\r\n                  // fixed={fixed ? 'top' : null}\r\n                  // fixed='top'\r\n                  // pointing={!fixed}\r\n                  borderless\r\n               >\r\n                  <Menu.Item as={Link} to='/' className='mainlogo'>\r\n                     <div>\r\n                        <Image src={LogoImage} />\r\n                     </div>\r\n                  </Menu.Item>\r\n                  <Menu.Menu position='right' onClick={this.handleDropdown}>\r\n                     <Menu.Menu position='right' className=''>\r\n                        <Menu.Item className='account-name'>\r\n                           {account.loader || !account.accountId ? (\r\n                              <Loader active inline size='mini' />\r\n                           ) : (\r\n                              <div>@{account.accountId}</div>\r\n                           )}\r\n                        </Menu.Item>\r\n                        <Menu.Item className='account-tokens'>\r\n                           {account.loader || !account.accountId ? (\r\n                              <Loader active inline size='mini' />\r\n                           ) : (\r\n                              account.amount\r\n                           )}\r\n                           <span className='near'>Ⓝ</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item className='account-arrow'>\r\n                           <Image src={ArrowDownImage} />\r\n                        </Menu.Item>\r\n                     </Menu.Menu>\r\n                  </Menu.Menu>\r\n               </Menu>\r\n               <Segment\r\n                  basic\r\n                  className={`navbar-sub ${dropdown ? `hide` : ``}`}\r\n               >\r\n                  <Menu.Menu>\r\n                     <Menu.Item className='main'>\r\n                        <Link to='/' onClick={this.handleDropdown}>\r\n                           <Image src={RecentImage} />\r\n                           SUMMARY\r\n                        </Link>\r\n                     </Menu.Item>\r\n                     <Menu.Item className='main'>\r\n                        <Link to='/activity' onClick={this.handleDropdown}>\r\n                           <Image src={ActivityImage} />\r\n                           ACTIVITY\r\n                        </Link>\r\n                     </Menu.Item>\r\n                     <Menu.Item className='main border'>\r\n                        <Link to='/send-money' onClick={this.handleDropdown}>\r\n                           <Image src={SendImage} />\r\n                           SEND MONEY\r\n                        </Link>\r\n                     </Menu.Item>\r\n\r\n                     <Menu.Menu className='sub'>\r\n                        <Menu.Item>\r\n                           <Link to='/profile' onClick={this.handleDropdown}>\r\n                              <Image src={AccountGreyImage} />\r\n                              Profile\r\n                           </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                           <Link to='/contacts' onClick={this.handleDropdown}>\r\n                              <Image src={ContactsGreyImage} />\r\n                              Contacts\r\n                           </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                           <Link\r\n                              to='/authorized-apps'\r\n                              onClick={this.handleDropdown}\r\n                           >\r\n                              <Image src={AuthorizedGreyImage} />\r\n                              Authorized Apps\r\n                           </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                           <Link to='/' onClick={this.handleDropdown}>\r\n                              <Image src={LogoutImage} />\r\n                              Logout\r\n                           </Link>\r\n                        </Menu.Item>\r\n                     </Menu.Menu>\r\n                     <Segment basic className='switch-account'>\r\n                        <List>\r\n                           <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\r\n\r\n                           {account.accounts &&\r\n                              Object.keys(account.accounts)\r\n                                 .filter(a => a !== account.accountId)\r\n                                 .map((account, i) => (\r\n                                    <List.Item\r\n                                       as='a'\r\n                                       key={`mf-${i}`}\r\n                                       onClick={() =>\r\n                                          this.handleSelectAccount(account)\r\n                                       }\r\n                                       className='account-title'\r\n                                    >\r\n                                       @{account}\r\n                                    </List.Item>\r\n                                 ))}\r\n                        </List>\r\n                        <Button onClick={this.redirectCreateAccount}>\r\n                           CREATE NEW ACCOUNT\r\n                        </Button>\r\n                     </Segment>\r\n                  </Menu.Menu>\r\n               </Segment>\r\n            </Segment>\r\n\r\n            {this.props.children}\r\n         </CustomResponsive>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(MobileView))\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport {\r\n   Image,\r\n   Menu,\r\n   Segment,\r\n   List,\r\n   Button,\r\n   Loader,\r\n   Popup\r\n} from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\r\nimport LogoutImage from '../../images/icon-logout.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomPopup = styled(Popup)`\r\n   &&& {\r\n      padding: 0px;\r\n      right: 12px !important;\r\n      top: 50px !important;\r\n      position: fixed !important;\r\n\r\n      .account-dropdown {\r\n         width: 290px;\r\n         min-height: 100px;\r\n         background-color: #f8f8f8;\r\n\r\n         padding: 20px;\r\n\r\n         .item {\r\n            color: #999999;\r\n         }\r\n\r\n         .submenu {\r\n            margin: -20px;\r\n            padding: 20px;\r\n            background: #fff;\r\n\r\n            .icon {\r\n               width: 20px;\r\n            }\r\n            .content {\r\n               line-height: 26px;\r\n               padding-left: 10px;\r\n            }\r\n            .item {\r\n               margin: 4px 0;\r\n            }\r\n         }\r\n\r\n         .switch-account {\r\n            margin-top: 40px;\r\n            margin-bottom: 0px;\r\n         }\r\n\r\n         &-scroll {\r\n            max-height: 226px;\r\n            overflow-y: auto;\r\n            width: 270px;\r\n            margin-top: 0px;\r\n\r\n            > .item {\r\n               width: 250px;\r\n               margin: 0px;\r\n               padding: 0px;\r\n\r\n               :hover {\r\n                  text-decoration: underline;\r\n               }\r\n               ::before {\r\n                  display: none;\r\n               }\r\n               ::after {\r\n                  display: none;\r\n               }\r\n            }\r\n         }\r\n\r\n         h6 {\r\n            padding-bottom: 6px;\r\n         }\r\n         .account-title {\r\n            height: 40px;\r\n            line-height: 40px;\r\n            color: #4a4f54;\r\n            font-weight: 500;\r\n            border-bottom: 2px solid #e6e6e6;\r\n            letter-spacing: normal;\r\n\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n         }\r\n         button {\r\n            width: 100%;\r\n            border-radius: 30px;\r\n            background: #fff;\r\n            color: #6ad1e3;\r\n\r\n            :hover {\r\n               background: #6ad1e3;\r\n               color: #fff;\r\n            }\r\n         }\r\n      }\r\n\r\n      :hover {\r\n         .account-dropdown {\r\n            display: block;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DesktopPopup = ({\r\n   account,\r\n   handleSelectAccount,\r\n   redirectCreateAccount\r\n}) => (\r\n   <CustomPopup\r\n      trigger={\r\n         <Menu.Menu position='right' className=''>\r\n            <Menu.Item className='devider' />\r\n            <Menu.Item className='account-img'>\r\n               <Image src={AccountGreyImage} />\r\n            </Menu.Item>\r\n            <Menu.Item className='account-name'>\r\n               {account.loader || !account.accountId ? (\r\n                  <Loader active inline size='mini' />\r\n               ) : (\r\n                  `@${account.accountId}`\r\n               )}\r\n            </Menu.Item>\r\n            <Menu.Item className='account-tokens'>\r\n               {account.loader || !account.accountId ? (\r\n                  <Loader active inline size='mini' />\r\n               ) : (\r\n                  account.amount\r\n               )}\r\n               <span className='near'>Ⓝ</span>\r\n            </Menu.Item>\r\n            <Menu.Item className='account-arrow'>\r\n               <Image src={ArrowDownImage} />\r\n            </Menu.Item>\r\n         </Menu.Menu>\r\n      }\r\n      hoverable\r\n      position='right center'\r\n   >\r\n      <Segment basic className='account-dropdown'>\r\n         <List className='submenu'>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={AccountGreyImage} />\r\n               <List.Content as={Link} to='/profile'>\r\n                  Profile\r\n               </List.Content>\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={ContactsGreyImage} />\r\n               <List.Content as={Link} to='/contacts'>\r\n                  Contacts\r\n               </List.Content>\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={AuthorizedGreyImage} />\r\n               <List.Content as={Link} to='authorized-apps'>\r\n                  Authorized Apps\r\n               </List.Content>\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={LogoutImage} />\r\n               <List.Content as={Link} to='/logout'>\r\n                  Logout\r\n               </List.Content>\r\n            </List.Item>\r\n         </List>\r\n         <List className='switch-account'>\r\n            <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\r\n         </List>\r\n         <List className='account-dropdown-scroll'>\r\n            {account.accounts &&\r\n               Object.keys(account.accounts)\r\n                  .filter(a => a !== account.accountId)\r\n                  .map((account, i) => (\r\n                     <List.Item\r\n                        as='a'\r\n                        key={`mf-${i}`}\r\n                        onClick={() => handleSelectAccount(account)}\r\n                        className='account-title'\r\n                     >\r\n                        @{account}\r\n                     </List.Item>\r\n                  ))}\r\n         </List>\r\n         <Button onClick={redirectCreateAccount}>CREATE NEW ACCOUNT</Button>\r\n      </Segment>\r\n   </CustomPopup>\r\n)\r\n\r\nexport default DesktopPopup\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport DesktopPopup from './DesktopPopup'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { Image, Menu, Responsive, Segment, Visibility } from 'semantic-ui-react'\r\n\r\nimport LogoImage from '../../images/wallet.png'\r\nimport HelpImage from '../../images/icon-help.svg'\r\nimport ActivityImage from '../../images/icon-activity.svg'\r\nimport RecentImage from '../../images/icon-recent.svg'\r\nimport SendImage from '../../images/icon-send.svg'\r\n\r\nimport { handleRefreshAccount } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomResponsive = styled(Responsive)`\r\n   padding-bottom: 200px;\r\n\r\n   .spacer {\r\n      height: 72px;\r\n   }\r\n\r\n   &&& .navbar {\r\n      background-color: #24272a;\r\n      height: 72px;\r\n      border-radius: 0;\r\n\r\n      &-icon {\r\n         height: 24px;\r\n         margin-right: 14px;\r\n         display: inline-block;\r\n      }\r\n      .item {\r\n         color: white;\r\n         font-family: 'benton-sans', sans-serif;\r\n         font-weight: 500;\r\n         font-size: 14px;\r\n         padding-left: 0px;\r\n         padding-right: 30px;\r\n         letter-spacing: 2px;\r\n\r\n         .mainlogo {\r\n            width: 220px;\r\n         }\r\n      }\r\n\r\n      a.item:hover {\r\n         color: #6ad1e3;\r\n      }\r\n      .hover.item {\r\n         color: #6ad1e3;\r\n      }\r\n      .account-img {\r\n         width: 36px;\r\n         height: 36px;\r\n         background: #4a4f54;\r\n         padding-right: 0px;\r\n         padding-left: 6px;\r\n         border-radius: 18px;\r\n         margin-top: 16px;\r\n\r\n         > img {\r\n            width: 24px;\r\n            height: 24px;\r\n         }\r\n      }\r\n      .item.account-name {\r\n         font-size: 14px;\r\n         letter-spacing: normal;\r\n         padding-left: 10px;\r\n         padding-right: 10px;\r\n\r\n         :hover {\r\n            color: #fff;\r\n         }\r\n      }\r\n      .account-tokens {\r\n         line-height: 24px;\r\n         font-size: 14px;\r\n\r\n         color: #fff;\r\n\r\n         margin: 23px 20px 0 10px;\r\n         height: 24px;\r\n         background: #111314;\r\n         border-radius: 12px;\r\n         padding: 0 10px;\r\n\r\n         letter-spacing: normal;\r\n\r\n         :hover {\r\n            color: #fff;\r\n         }\r\n\r\n         .near {\r\n            font-size: 18px;\r\n            padding-left: 4px;\r\n         }\r\n      }\r\n\r\n      .account-arrow {\r\n         padding-right: 26px;\r\n\r\n         img {\r\n            width: 12px;\r\n         }\r\n      }\r\n\r\n      .popup-container {\r\n         .devider {\r\n            width: 2px;\r\n            height: 40px;\r\n            background: #5d5f60;\r\n            padding: 0px;\r\n            margin: 16px 28px 0 0;\r\n         }\r\n\r\n         .help {\r\n            padding-right: 12px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst getWidth = () => {\r\n   const isSSR = typeof window === 'undefined'\r\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\nclass DesktopView extends Component {\r\n   static propTypes = {\r\n      children: PropTypes.node\r\n   }\r\n\r\n   static defaultProps = {\r\n      children: ''\r\n   }\r\n\r\n   state = {\r\n      fixed: false,\r\n      activeItem: 'home'\r\n   }\r\n\r\n   hideFixedMenu = () => this.setState({ fixed: false })\r\n\r\n   showFixedMenu = () => this.setState({ fixed: true })\r\n\r\n   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { fixed } = this.state\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <CustomResponsive\r\n            getWidth={getWidth}\r\n            minWidth={Responsive.onlyComputer.minWidth}\r\n         >\r\n            <Visibility\r\n               once={false}\r\n               onBottomPassed={this.showFixedMenu}\r\n               onBottomPassedReverse={this.hideFixedMenu}\r\n            >\r\n               <Segment className='spacer' basic />\r\n               <Menu\r\n                  className='navbar'\r\n                  // fixed={fixed ? 'top' : null}\r\n                  fixed='top'\r\n                  pointing={!fixed}\r\n                  borderless\r\n                  size='large'\r\n               >\r\n                  <Menu.Item as={Link} to='/'>\r\n                     <Image className='mainlogo' src={LogoImage} />\r\n                  </Menu.Item>\r\n                  <Menu.Item as={Link} to='/'>\r\n                     <Image className='navbar-icon' src={RecentImage} />\r\n                     SUMMARY\r\n                  </Menu.Item>\r\n                  <Menu.Item as={Link} to='/activity'>\r\n                     <Image className='navbar-icon' src={ActivityImage} />\r\n                     ACTIVITY\r\n                  </Menu.Item>\r\n                  <Menu.Item as={Link} to='/send-money'>\r\n                     <Image className='navbar-icon' src={SendImage} />\r\n                     SEND MONEY\r\n                  </Menu.Item>\r\n                  {account.accountId && (\r\n                     <Menu.Menu position='right' className='popup-container'>\r\n                        <Menu.Item\r\n                           as='a'\r\n                           href='http://near.chat/'\r\n                           target='_blank'\r\n                           className='help'\r\n                        >\r\n                           <Image className='navbar-icon' src={HelpImage} />\r\n                        </Menu.Item>\r\n                        <DesktopPopup\r\n                           account={account}\r\n                           handleSelectAccount={this.handleSelectAccount}\r\n                           redirectCreateAccount={this.redirectCreateAccount}\r\n                        />\r\n                     </Menu.Menu>\r\n                  )}\r\n               </Menu>\r\n            </Visibility>\r\n\r\n            {this.props.children}\r\n         </CustomResponsive>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(DesktopView))\r\n","import React, { Fragment } from 'react'\r\n\r\nimport MobileView from './MobileView'\r\nimport DesktopView from './DesktopView'\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n   <Fragment>\r\n      <DesktopView>{children}</DesktopView>\r\n      <MobileView>{children}</MobileView>\r\n   </Fragment>\r\n)\r\n\r\nexport default ResponsiveContainer\r\n","import React from 'react'\r\nimport { Grid, Image, List, Item } from 'semantic-ui-react'\r\n\r\nimport LogoFooterImage from '../../images/near.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst FooterGrid = styled(Grid)`\r\n   position: absolute;\r\n   bottom: 0px;\r\n   width: 100%;\r\n\r\n   height: 100px;\r\n   background-color: #f8f8f8;\r\n\r\n   font-size: 12px;\r\n   font-weight: 300;\r\n   color: #999999;\r\n\r\n   &&& {\r\n      margin-bottom: 0px;\r\n      margin-left: 0px;\r\n\r\n      .near-logo {\r\n         .content {\r\n            a {\r\n               font-size: 12px;\r\n               font-weight: 300;\r\n               color: #999999;\r\n               text-decoration: underline;\r\n\r\n               :hover {\r\n                  text-decoration: none;\r\n               }\r\n            }\r\n            .color-brown-grey {\r\n               color: #e6e6e6;\r\n               padding: 0 6px;\r\n            }\r\n         }\r\n         .image {\r\n            width: 140px;\r\n\r\n            img {\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   &&&& .help {\r\n      padding-right: 0px;\r\n      padding-top: 10px;\r\n      padding-bottom: 0px;\r\n\r\n      > .list {\r\n         width: 230px;\r\n         height: 80px;\r\n         padding: 20px 0;\r\n         background: #fff;\r\n         text-align: left;\r\n\r\n         > img {\r\n            width: 80px;\r\n            position: absolute;\r\n            bottom: 0px;\r\n            right: 200px;\r\n         }\r\n\r\n         > h3 {\r\n            font-weight: 600 !important;\r\n            padding: 0 0 0 40px;\r\n            color: #999999 !important;\r\n\r\n            &.color {\r\n               color: #0072ce !important;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         height: 160px;\r\n\r\n         .near-logo {\r\n            .item {\r\n            }\r\n            .content {\r\n               text-align: center;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ResponsiveContainer = () => (\r\n   <FooterGrid columns={2}>\r\n      <Grid.Column\r\n         textAlign='left'\r\n         verticalAlign='middle'\r\n         computer={10}\r\n         tablet={10}\r\n         mobile={16}\r\n      >\r\n         <Item.Group className='near-logo'>\r\n            <Item>\r\n               <Item.Image src={LogoFooterImage} />\r\n               <Item.Content>\r\n                  © 2019 NEAR Inc. All Rights Reserved.\r\n                  <br />\r\n                  <a href='/'>Terms of Service</a>\r\n                  <span className='color-brown-grey'>|</span>\r\n                  <a href='/'>Privacy Policy</a>\r\n               </Item.Content>\r\n            </Item>\r\n         </Item.Group>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         only='tablet computer'\r\n         computer={6}\r\n         tablet={6}\r\n         textAlign='right'\r\n         className='help'\r\n      >\r\n         <List floated='right' className=''>\r\n            <List.Item as='h3'>Need Help?</List.Item>\r\n            <List.Item as='h3' className='color'>\r\n               <a href='https://discordapp.com/invite/gBtUFKR'>\r\n                  Contact Support\r\n               </a>\r\n            </List.Item>\r\n            <Image className='nearkat' src={NearkatImage} />\r\n         </List>\r\n      </Grid.Column>\r\n   </FooterGrid>\r\n)\r\n\r\nexport default ResponsiveContainer\r\n","import React from 'react'\r\n\r\nimport TContractImage from '../../images/icon-t-contract.svg'\r\n\r\nimport { Grid, List } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&&& .other-assets {\r\n      background: #f8f8f8;\r\n      border-top: 2px solid #e6e6e6;\r\n      border-bottom: 4px solid #e6e6e6;\r\n      padding: 0px;\r\n\r\n      .column {\r\n         border-right: 2px solid #e6e6e6;\r\n         padding: 10px 0px 10px 18px;\r\n\r\n         :last-of-type {\r\n            border: 0px;\r\n         }\r\n\r\n         .content {\r\n            width: auto;\r\n         }\r\n\r\n         .icon {\r\n            background-image: url(${TContractImage});\r\n            background-repeat: no-repeat;\r\n            background-position: center top;\r\n            background-size: 24px 24px;\r\n            width: 24px;\r\n            height: 38px;\r\n            margin: 0 6px 0 0;\r\n         }\r\n\r\n         h5 {\r\n            font-weight: 600;\r\n            line-height: 16px;\r\n         }\r\n      }\r\n   }\r\n\r\n   && .other-assets-title {\r\n      padding-bottom: 6px;\r\n      color: #24272a;\r\n      font-weight: 600;\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      &&&& .other-assets {\r\n         .column {\r\n            .content {\r\n               h2 {\r\n                  font-size: 16px !important;\r\n               }\r\n            }\r\n            .icon {\r\n               background-size: 18px 24px;\r\n               width: 18px;\r\n               margin: 8px 6px 0 0;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&&& .other-assets {\r\n         background: #fff;\r\n         margin-top: 18px !important;\r\n         border-right: 0px;\r\n\r\n         > .column {\r\n            width: 100% !important;\r\n            border-right: 0px solid #e6e6e6;\r\n            border-bottom: 1px solid #e6e6e6;\r\n            padding: 6px 0px 6px 4px;\r\n\r\n            .list {\r\n               width: 100%;\r\n\r\n               .item {\r\n                  width: 100%;\r\n\r\n                  .content {\r\n                     float: right;\r\n                     text-align: right;\r\n\r\n                     h2 {\r\n                        font-size: 14px !important;\r\n                     }\r\n                  }\r\n                  .icon {\r\n                     height: 20px;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n\r\n         &-title {\r\n            display: none;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardOtherAssets = () => (\r\n   <CustomGrid>\r\n      <Grid.Row className='other-assets-title' as='h6'>\r\n         OTHER ASSETS\r\n      </Grid.Row>\r\n      <Grid.Row columns={6} className='other-assets'>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        12.125\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ETH\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        3.2501\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        XRP\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        8.0987\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ZEC\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        13.258\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        BNB\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        2.5897\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        XMR\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        1.2589\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ZIL\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default DashboardOtherAssets\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport DashboardOtherAssets from './DashboardOtherAssets'\r\n\r\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\r\n\r\nimport { Container, Grid, Button, Header } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n\r\n         :first-child {\r\n            padding-left: 0px;\r\n         }\r\n      }\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-left: 0px;\r\n         line-height: 48px;\r\n      }\r\n   }\r\n\r\n   .near {\r\n      font-size: 48px;\r\n      color: #24272a;\r\n   }\r\n\r\n   &&& .send-money {\r\n      margin: -8px 0 0 0;\r\n\r\n      > .button {\r\n         width: 100%;\r\n         line-height: 60px;\r\n         border-radius: 30px;\r\n         border: solid 2px #5ace84;\r\n         font-size: 18px;\r\n         font-weight: 500;\r\n         letter-spacing: 2px;\r\n         color: #5ace84;\r\n         background: #fff;\r\n         text-align: left;\r\n         padding: 0 0 0 40px;\r\n\r\n         background-image: url(${ArrowRightImage});\r\n         background-repeat: no-repeat;\r\n         background-position: 90% center;\r\n         background-size: 14px 20px;\r\n\r\n         :hover {\r\n            background-color: #5ace84;\r\n            color: #fff;\r\n         }\r\n      }\r\n   }\r\n\r\n   &&& {\r\n      .right-section {\r\n         padding-left: 40px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      > .grid {\r\n         margin-left: 0px;\r\n         margin-right: 0px;\r\n      }\r\n\r\n      &&& .send-money {\r\n         margin-top: 20px;\r\n         margin-top: 0px;\r\n      }\r\n\r\n      &&& .creating-info {\r\n         padding-top: 24px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 12px 0;\r\n         }\r\n         .balance {\r\n            display: none;\r\n         }\r\n         .button {\r\n            width: 240px;\r\n            line-height: 48px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row className='creating-info'>\r\n            <Grid.Column computer={12} tablet={11} mobile={16}>\r\n               <Header as='h1'>\r\n                  <span className='balance'>Balance: </span>\r\n                  <span className='color-black'>2,300.562</span>\r\n                  <span className='near'>Ⓝ</span>\r\n               </Header>\r\n            </Grid.Column>\r\n            <Grid.Column\r\n               computer={4}\r\n               tablet={5}\r\n               mobile={16}\r\n               className='send-money'\r\n            >\r\n               <Button as={Link} to='/contacts'>\r\n                  SEND MONEY\r\n               </Button>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      <DashboardOtherAssets />\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default DashboardContainer\r\n","import React from 'react'\r\n\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nimport CloseImage from '../../images/icon-close.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 20px;\r\n      margin: 12px 0 12px 0;\r\n\r\n      .img {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 20px;\r\n         right: 20px;\r\n\r\n         img {\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      .text {\r\n         margin: 0 10% 0 0;\r\n         color: #24272a;\r\n         float: left;\r\n\r\n         .header {\r\n            font-family: 'benton-sans', sans-serif;\r\n         }\r\n         .content {\r\n            color: #999999;\r\n            padding-top: 12px;\r\n            line-height: 20px;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardNotice = ({ handleNotice }) => (\r\n   <CustomList horizontal className='box'>\r\n      <List.Item className='text'>\r\n         <List.Header>Here’s a Notice of some sort</List.Header>\r\n         <List.Content>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce nec\r\n            ex non augue volutpat finibus. Suspendisse fringilla consequat magna\r\n            a finibus.\r\n            <a href='/'>Call to Action</a>\r\n         </List.Content>\r\n      </List.Item>\r\n      <List.Item className='img'>\r\n         <Image onClick={handleNotice} src={CloseImage} />\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default DashboardNotice\r\n","import React from 'react'\r\n\r\nimport DashboardNotice from './DashboardNotice'\r\n\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nconst DashboardSection = ({ children, notice, handleNotice }) => (\r\n   <Grid columns={2} stackable>\r\n      <Grid.Column computer={10}>\r\n         {notice && <DashboardNotice handleNotice={handleNotice} />}\r\n         {children[0]}\r\n      </Grid.Column>\r\n      <Grid.Column computer={6} className='right-section'>\r\n         {children[1]}\r\n         {children[2]}\r\n      </Grid.Column>\r\n   </Grid>\r\n)\r\n\r\nexport default DashboardSection\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Grid, Image } from 'semantic-ui-react'\r\n\r\nimport ArrowRight from '../../images/icon-arrow-right.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGridRow = styled(Grid.Row)`\r\n   &&& {\r\n      margin-left: 20px;\r\n      border-left: 4px solid #f8f8f8;\r\n\r\n      .col-image {\r\n         margin-left: -33px;\r\n         width: 40px;\r\n         flex: 0 0 40px;\r\n         padding-left: 0px;\r\n\r\n         .main-image {\r\n            border: 1px solid #e6e6e6;\r\n            background: #fff;\r\n            border-radius: 14px;\r\n            padding: 5px;\r\n            width: 26px;\r\n            height: 26px;\r\n            margin: 0 24px 0 18px;\r\n            overflow: hidden;\r\n\r\n            img {\r\n               margin: 0 0 0 0;\r\n            }\r\n         }\r\n      }\r\n\r\n      &.wide {\r\n         margin-left: 0px;\r\n         border-left: 0px;\r\n\r\n         .col-image {\r\n            margin-left: 6px;\r\n            width: 56px;\r\n            flex: 0 0 56px;\r\n         }\r\n\r\n         .main-image {\r\n            border: 0px;\r\n            padding: 0 10px;\r\n            width: 48px;\r\n            height: 48px;\r\n            background: #e6e6e6;\r\n            border-radius: 32px;\r\n            margin: 0 24px 0 0;\r\n\r\n            img {\r\n               padding-top: 10px;\r\n            }\r\n         }\r\n      }\r\n\r\n      .main-row-title {\r\n         font-weight: 600;\r\n         width: auto;\r\n         padding-right: 0px;\r\n         flex: 1;\r\n      }\r\n\r\n      .dropdown-image-right {\r\n         width: 10px;\r\n         margin: 0 0 0 0;\r\n         cursor: pointer;\r\n      }\r\n      .dropdown-image {\r\n         float: right;\r\n      }\r\n\r\n      &.dropdown-down {\r\n         background-color: #f8f8f8;\r\n\r\n         .dropdown-image-right {\r\n            width: 10px;\r\n            top: 0px;\r\n            left: 12px;\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      &.showsub {\r\n         .dropdown-image-right {\r\n            left: -24px;\r\n         }\r\n      }\r\n      &.showsub.dropdown-down {\r\n         .dropdown-image-right {\r\n            left: -6px;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         &.showsub {\r\n            .dropdown-image-right {\r\n               left: -14px;\r\n            }\r\n         }\r\n         &.showsub.dropdown-down {\r\n            .dropdown-image-right {\r\n               left: 4px;\r\n            }\r\n         }\r\n\r\n         .main-row-title {\r\n            a {\r\n               font-size: 14px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ListItem = ({\r\n   row,\r\n   i,\r\n   wide = false,\r\n   showSub = false,\r\n   toggleShowSub,\r\n   showSubOpen\r\n}) => (\r\n   <CustomGridRow\r\n      verticalAlign='middle'\r\n      className={`border-bottom-light ${wide ? `wide` : ``} ${\r\n         showSub && showSubOpen === i ? `dropdown-down` : ``\r\n      } ${showSub ? `showsub` : ``}`}\r\n   >\r\n      <Grid.Column computer={8} tablet={wide ? 14 : 8} mobile={wide ? 14 : 10}>\r\n         <Grid verticalAlign='middle'>\r\n            <Grid.Column className='col-image'>\r\n               <div className='main-image'>\r\n                  <Image src={row[0]} className='' align='left' />\r\n               </div>\r\n            </Grid.Column>\r\n            <Grid.Column className='main-row-title'>\r\n               <Link to='' className='color-black'>\r\n                  {row[1]}\r\n               </Link>\r\n               {row[2] && (\r\n                  <span className='font-small'>\r\n                     <br />\r\n                     <Link to=''>{row[2]}</Link>\r\n                  </span>\r\n               )}\r\n            </Grid.Column>\r\n         </Grid>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         computer={8}\r\n         tablet={wide ? 2 : 8}\r\n         mobile={wide ? 2 : 6}\r\n         textAlign='right'\r\n      >\r\n         {wide ? (\r\n            <Image\r\n               onClick={() => toggleShowSub(i)}\r\n               src={ArrowRight}\r\n               className='dropdown-image dropdown-image-right'\r\n            />\r\n         ) : (\r\n            <span className='font-small'>{row[3]}</span>\r\n         )}\r\n      </Grid.Column>\r\n   </CustomGridRow>\r\n)\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ListItem from './ListItem'\r\n\r\nimport { Loader, Grid, Dimmer, Button, Header, Image } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      margin-bottom: 20px;\r\n\r\n      .row:first-child {\r\n         padding-bottom: 0px;\r\n      }\r\n\r\n      .row:last-child {\r\n         padding: 14px 0 0 4px;\r\n         margin-left: 20px;\r\n         border-left: 4px solid #f8f8f8;\r\n      }\r\n\r\n      .dashboard-header {\r\n         padding: 14px 0 10px 0;\r\n      }\r\n\r\n      link.view-all,\r\n      button.view-all,\r\n      a.view-all {\r\n         background: #f8f8f8;\r\n         margin: 0;\r\n         padding: 10px 20px;\r\n         color: #0072ce;\r\n         font-weight: 600;\r\n         border-radius: 20px;\r\n         border: 2px solid #f8f8f8;\r\n\r\n         :hover {\r\n            background: #fff;\r\n         }\r\n      }\r\n\r\n      .column-icon {\r\n         width: 28px;\r\n         display: inline-block;\r\n         margin: -4px 10px 0 8px;\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardActivity = ({ loader, image, title, to, activity }) => (\r\n   <CustomGrid>\r\n      <Grid.Row>\r\n         <Grid.Column className='dashboard-header' textAlign='left' width={16}>\r\n            <Header className='h2'>\r\n               <Image className='column-icon' src={image} />\r\n               {title}\r\n            </Header>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Dimmer inverted active={loader}>\r\n         <Loader />\r\n      </Dimmer>\r\n\r\n      {activity.map((row, i) => (\r\n         <ListItem key={`d-${i}`} row={row} />\r\n      ))}\r\n\r\n      <Grid.Row>\r\n         <Grid.Column textAlign='left' width={16}>\r\n            <Button as={Link} to={to} className='view-all'>\r\n               VIEW ALL\r\n            </Button>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default DashboardActivity\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport DashboardContainer from './DashboardContainer'\r\nimport DashboardSection from './DashboardSection'\r\nimport DashboardActivity from './DashboardActivity'\r\n\r\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\r\n\r\nimport TStakeImage from '../../images/icon-t-stake.svg'\r\nimport TTransferImage from '../../images/icon-t-transfer.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nclass DashboardDetail extends Component {\r\n   state = {\r\n      loader: false,\r\n      notice: true,\r\n      activity: [],\r\n      authorizedaps: [],\r\n      newcontacts: []\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [\r\n                  TTransferImage,\r\n                  'Sent: 125 Ⓝ  to @jake.near',\r\n                  'Some details about this activity here',\r\n                  '3 min ago'\r\n               ],\r\n               [\r\n                  TStakeImage,\r\n                  'You Staked 10 tokens',\r\n                  'Some details about this activity here',\r\n                  '20 min ago'\r\n               ],\r\n               [\r\n                  TTransferImage,\r\n                  'Sent: 125 Ⓝ  to @vlad.near',\r\n                  'Some details about this activity here',\r\n                  '1 hr ago'\r\n               ]\r\n            ],\r\n            authorizedaps: [\r\n               [NearkatImage, 'NEAR Place', '', '3 hrs ago'],\r\n               [NearkatImage, 'Cryptocats', '', '5 hrs ago'],\r\n               [NearkatImage, 'Knights App', '', '2 days ago']\r\n            ],\r\n            newcontacts: [\r\n               [AccountGreyImage, 'Alex Skidanov ', '', 'Connected 2 days ago'],\r\n               [AccountGreyImage, '@vlad.near', '', '2 days ago'],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  '',\r\n                  'Connected 2 days ago'\r\n               ]\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   handleNotice = () => {\r\n      this.setState(state => ({\r\n         notice: !state.notice\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         loader,\r\n         notice,\r\n         activity,\r\n         authorizedaps,\r\n         newcontacts\r\n      } = this.state\r\n\r\n      return (\r\n         <DashboardContainer>\r\n            <DashboardSection notice={notice} handleNotice={this.handleNotice}>\r\n               <DashboardActivity\r\n                  loader={loader}\r\n                  image={activityGreyImage}\r\n                  title='Activity'\r\n                  to='/'\r\n                  activity={activity}\r\n               />\r\n               <DashboardActivity\r\n                  loader={loader}\r\n                  image={AuthorizedGreyImage}\r\n                  title='Authorized Apps'\r\n                  to='/authorized-apps'\r\n                  activity={authorizedaps}\r\n               />\r\n               <DashboardActivity\r\n                  loader={loader}\r\n                  image={ContactsGreyImage}\r\n                  title='New Contacts'\r\n                  to='/contacts'\r\n                  activity={newcontacts}\r\n               />\r\n            </DashboardSection>\r\n         </DashboardContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(DashboardDetail))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid, List, Responsive } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   && .username-row {\r\n      padding-bottom: 0px;\r\n   }\r\n\r\n   &&& .alert-info {\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n      line-height: 64px;\r\n      margin: 0 0 0 0;\r\n      padding-left: 0px;\r\n\r\n      &.problem {\r\n         color: #ff585d;\r\n      }\r\n      &.success {\r\n         color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   .note-box {\r\n      padding-left: 30px;\r\n\r\n      .border-left-bold {\r\n         padding-bottom: 20px;\r\n      }\r\n   }\r\n\r\n   &&& .note-info {\r\n      .title {\r\n         letter-spacing: 2px;\r\n         font-weight: 600;\r\n         line-height: 20px;\r\n         color: #4a4f54;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      .note-box {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         .alert-info {\r\n            padding: 0 0 6px 24px;\r\n            line-height: 34px;\r\n            font-size: 14px;\r\n            margin-top: -6px;\r\n         }\r\n\r\n         .note-box {\r\n            padding-left: 1rem;\r\n            margin-top: 10px;\r\n         }\r\n\r\n         .note-box {\r\n            .border-left-bold {\r\n               padding-bottom: 0px;\r\n            }\r\n         }\r\n\r\n         .form-row {\r\n            padding-top: 6px;\r\n         }\r\n\r\n         &&& .note-info {\r\n            font-size: 12px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst CreateAccountSection = ({ successMessage, errorMessage, children }) => (\r\n   <CustomGrid className=''>\r\n      <Grid.Row className='username-row'>\r\n         <Grid.Column\r\n            as='h3'\r\n            computer={16}\r\n            tablet={16}\r\n            mobile={16}\r\n            className=''\r\n         >\r\n            Choose a Username\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='form-row'>\r\n         <Grid.Column computer={8} tablet={8} mobile={16} className=''>\r\n            {children}\r\n         </Grid.Column>\r\n         <Grid.Column computer={8} tablet={8} mobile={16}>\r\n            <Grid className='note-box'>\r\n               {successMessage && (\r\n                  <Responsive\r\n                     as={Grid.Row}\r\n                     minWidth={Responsive.onlyTablet.minWidth}\r\n                  >\r\n                     <Grid.Column className='alert-info success'>\r\n                        Congrats! this name is available.\r\n                     </Grid.Column>\r\n                  </Responsive>\r\n               )}\r\n               {errorMessage && (\r\n                  <Responsive\r\n                     as={Grid.Row}\r\n                     minWidth={Responsive.onlyTablet.minWidth}\r\n                  >\r\n                     <Grid.Column className='alert-info problem'>\r\n                        Username is taken. Try something else.\r\n                     </Grid.Column>\r\n                  </Responsive>\r\n               )}\r\n\r\n               <Grid.Row>\r\n                  <Grid.Column className='border-left-bold'>\r\n                     <List className='note-info'>\r\n                        <List.Item className='title'>NOTE</List.Item>\r\n                        <List.Item>\r\n                           Your username can be 5-32 characters\r\n                        </List.Item>\r\n                        <List.Item>\r\n                           long and contain any of the following:\r\n                        </List.Item>\r\n                        <List.Item>• Lowercase characters (a-z)</List.Item>\r\n                        <List.Item>• Digits (0-9)</List.Item>\r\n                        <List.Item>• Special characters (@._-)</List.Item>\r\n                     </List>\r\n                  </Grid.Column>\r\n               </Grid.Row>\r\n            </Grid>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nCreateAccountSection.propTypes = {\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default CreateAccountSection\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nimport ProblemsImage from '../../images/icon-problems.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomFormInput = styled(Form.Input)`\r\n   &&& input {\r\n      width: 100%;\r\n      height: 64px;\r\n      border: 4px solid #f8f8f8;\r\n      padding: 0 0 0 20px;\r\n\r\n      font-size: 18px;\r\n      color: #4a4f54;\r\n      font-weight: 400;\r\n      background: 0;\r\n\r\n      position: relative;\r\n\r\n      :focus {\r\n         border-color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   &&&&& .spinner {\r\n      margin-right: 20px;\r\n\r\n      :before,\r\n      :after {\r\n         top: 28px;\r\n         width: 24px;\r\n         height: 24px;\r\n      }\r\n   }\r\n\r\n   &.problem > .input > input,\r\n   &.problem > .input > input:focus {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n\r\n   &.success > .input > input,\r\n   &.success > .input > input:focus {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n`\r\n\r\nconst CreateAccoungFormInput = ({\r\n   formLoader,\r\n   accountId,\r\n   handleChangeAccountId,\r\n   successMessage,\r\n   errorMessage\r\n}) => (\r\n   <CustomFormInput\r\n      loading={formLoader}\r\n      className={`create ${successMessage ? 'success' : ''}${\r\n         errorMessage ? 'problem' : ''\r\n      }`}\r\n      name='accountId'\r\n      value={accountId}\r\n      onChange={handleChangeAccountId}\r\n      placeholder='example: satoshi.near'\r\n   />\r\n)\r\n\r\nCreateAccoungFormInput.propTypes = {\r\n   formLoader: PropTypes.bool.isRequired,\r\n   accountId: PropTypes.string,\r\n   handleChangeAccountId: PropTypes.func.isRequired,\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default CreateAccoungFormInput\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Segment, Form, Button, Responsive } from 'semantic-ui-react'\r\n\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nimport CreateAccoungFormInput from './CreateAccoungFormInput'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst AccountForm = styled(Form)`\r\n   && button {\r\n      width: 288px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n\r\n      background: #0072ce;\r\n      margin: 10px 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n         opacity: 1 !important;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n   }\r\n`\r\n\r\nconst CreateAccountForm = ({\r\n   formLoader,\r\n   accountId,\r\n   successMessage,\r\n   errorMessage,\r\n   handleSubmit,\r\n   handleChangeAccountId,\r\n   handleRecaptcha\r\n}) => (\r\n   <AccountForm autoComplete='off' onSubmit={handleSubmit}>\r\n      <CreateAccoungFormInput\r\n         formLoader={formLoader}\r\n         accountId={accountId}\r\n         handleChangeAccountId={handleChangeAccountId}\r\n         successMessage={successMessage}\r\n         errorMessage={errorMessage}\r\n      />\r\n\r\n      <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\r\n         {successMessage && (\r\n            <Segment basic className='alert-info success'>\r\n               Congrats! this name is available.\r\n            </Segment>\r\n         )}\r\n         {errorMessage && (\r\n            <Segment basic className='alert-info problem'>\r\n               Username is taken. Try something else.\r\n            </Segment>\r\n         )}\r\n      </Responsive>\r\n\r\n      <ReCAPTCHA\r\n         sitekey='6LfNjp8UAAAAAByZu30I-2-an14USj3yVbbUI3eN'\r\n         onChange={handleRecaptcha}\r\n      />\r\n\r\n      <Button type='submit' disabled={!successMessage}>\r\n         CREATE ACCOUNT\r\n      </Button>\r\n   </AccountForm>\r\n)\r\n\r\nCreateAccountForm.propTypes = {\r\n   formLoader: PropTypes.bool.isRequired,\r\n   accountId: PropTypes.string,\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired,\r\n   handleSubmit: PropTypes.func.isRequired,\r\n   handleChangeAccountId: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CreateAccountForm\r\n","import React from 'react'\r\n\r\nimport { Image, List } from 'semantic-ui-react'\r\n\r\nimport NearLogoImage from '../../images/near_logo.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   background: #f8f8f8;\r\n   width: 360px;\r\n   float: right;\r\n\r\n   img {\r\n      width: 160px;\r\n   }\r\n\r\n   .text {\r\n      margin: 0 16px 16px 64px;\r\n      line-height: 20px !important;\r\n      color: #24272a;\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         margin-top: 14px;\r\n         float: left;\r\n         width: 100%;\r\n      }\r\n   }\r\n`\r\n\r\nconst NearInfo = () => (\r\n   <CustomList className='box'>\r\n      <List.Item>\r\n         <Image src={NearLogoImage} />\r\n      </List.Item>\r\n      <List.Item className='text'>\r\n         NEAR is a scalable computing and storage platform that changes how the\r\n         web works for the better.{' '}\r\n         <a href='https://nearprotocol.com/'>Learn More</a>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default NearInfo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\r\n\r\nimport { parse } from 'query-string'\r\n\r\nimport NearInfo from './NearInfo'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   && .disclaimer {\r\n      margin-left: 1rem;\r\n      margin-right: 1rem;\r\n      margin-top: 100px;\r\n\r\n      > .column {\r\n         padding-left: 0px;\r\n         padding-right: 0px;\r\n      }\r\n   }\r\n   .disclaimer-info {\r\n      font-weight: 600;\r\n      letter-spacing: 2px;\r\n   }\r\n\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n         }\r\n         h1 {\r\n            margin-bottom: 0px;\r\n         }\r\n         h2 {\r\n            font-size: 16px !important;\r\n            line-height: 22px !important;\r\n            color: #999 !important;\r\n         }\r\n         .column.add {\r\n            text-align: left;\r\n            padding-top: 0px !important;\r\n         }\r\n      }\r\n\r\n      && .disclaimer {\r\n         margin-top: 50px;\r\n         font-size: 12px;\r\n      }\r\n   }\r\n`\r\n\r\nconst CreateAccountContainer = ({ loader, children, location }) => (\r\n   <CustomContainer>\r\n      <Grid stackable>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column>\r\n               <h1>Create Account</h1>\r\n               <h2>\r\n                  Creating a NEAR account is easy. Just choose a username\r\n                  andyou’re ready to go.\r\n               </h2>\r\n               {parse(location.search).reset_accounts && (\r\n                  <Header as='h3' className='color-blue'>\r\n                     You have been redirected to this page because we had to\r\n                     reset the developer accounts. Please create a new account.\r\n                     We apologize for the inconveience.\r\n                  </Header>\r\n               )}\r\n            </Grid.Column>\r\n            <Grid.Column className='add'>\r\n               <NearInfo />\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n\r\n      <Grid>\r\n         <Grid.Row className='disclaimer border-top-bold'>\r\n            <Grid.Column computer={16} tablet={16} mobile={16}>\r\n               <span className='disclaimer-info'>DISCLAIMER: </span>\r\n               This is a developers&apos; preview Wallet. It should be used for\r\n               NEAR Protocol DevNet only. Learn more at{` `}\r\n               <a href='http://nearprotocol.com'>nearprotocol.com</a>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n   </CustomContainer>\r\n)\r\n\r\nCreateAccountContainer.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired,\r\n   location: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CreateAccountContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { parse } from 'query-string'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport CreateAccountSection from './CreateAccountSection'\r\nimport CreateAccountForm from './CreateAccountForm'\r\nimport CreateAccountContainer from './CreateAccountContainer'\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nclass CreateAccount extends Component {\r\n   state = {\r\n      loader: false,\r\n      formLoader: false,\r\n      accountId: '',\r\n      successMessage: false,\r\n      errorMessage: false\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n      // this.props.handleRefreshUrl(this.props.location)\r\n      // this.props.handleRefreshAccount(this.wallet)\r\n   }\r\n\r\n   handleChangeAccountId = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: false\r\n      }))\r\n\r\n      if (!this.wallet.isLegitAccountId(value)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         formLoader: true\r\n      }))\r\n\r\n      this.timeout && clearTimeout(this.timeout)\r\n\r\n      this.timeout = setTimeout(() => {\r\n         this.wallet\r\n            .checkNewAccount(value)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  successMessage: true,\r\n                  errorMessage: false\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  successMessage: false,\r\n                  errorMessage: true\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  formLoader: false\r\n               }))\r\n            })\r\n      }, 500)\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.wallet.isLegitAccountId(this.state.accountId)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: true\r\n      }))\r\n\r\n      this.wallet\r\n         .createNewAccount(this.state.accountId)\r\n         .then(d => {\r\n            this.setState(() => ({\r\n               successMessage: true\r\n            }))\r\n            setTimeout(() => {\r\n               this.props.history.push(\r\n                  `/login/${parse(this.props.location.search).next_url || '/'}`\r\n               )\r\n            }, 1500)\r\n         })\r\n         .catch(e => {\r\n            this.setState(() => ({\r\n               errorMessage: true\r\n            }))\r\n            console.error('Error creating account:', e)\r\n         })\r\n         .finally(() => {\r\n            this.setState(() => ({\r\n               formLoader: false\r\n            }))\r\n         })\r\n   }\r\n\r\n   handleRecaptcha = value => {\r\n      console.log(value)\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n\r\n      return (\r\n         <CreateAccountContainer loader={loader} location={this.props.location}>\r\n            <CreateAccountSection {...this.state}>\r\n               <CreateAccountForm\r\n                  {...this.state}\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleRecaptcha={this.handleRecaptcha}\r\n                  handleChangeAccountId={this.handleChangeAccountId}\r\n               />\r\n            </CreateAccountSection>\r\n         </CreateAccountContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const CreateAccountWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(CreateAccount)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n   Container,\r\n   Loader,\r\n   Grid,\r\n   Dimmer,\r\n   Image,\r\n   List,\r\n   Segment\r\n} from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\nimport DenyImage from '../../images/icon-deny.svg'\r\nimport AppDefaultImage from '../../images/icon-app-default.svg'\r\nimport AuthorizeImage from '../../images/icon-authorize.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   && .title {\r\n      padding-top: 40px;\r\n      padding-bottom: 40px;\r\n   }\r\n\r\n   &&& .authorize {\r\n      margin-top: 40px;\r\n\r\n      .bg {\r\n         width: 64px;\r\n         height: 64px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n\r\n         > img {\r\n            width: 40px;\r\n            height: 40px;\r\n            margin-top: 8px;\r\n         }\r\n      }\r\n      .md {\r\n         > img {\r\n            margin-top: 8px;\r\n            padding: 0 24px;\r\n         }\r\n      }\r\n   }\r\n\r\n   && .cont {\r\n      background: #f8f8f8;\r\n      padding: 16px 0px;\r\n\r\n      > div {\r\n         padding: 20px 0 20px 50px;\r\n      }\r\n      img {\r\n         height: 24px;\r\n         margin-right: 6px;\r\n      }\r\n      div.item {\r\n         padding-top: 24px;\r\n\r\n         .content {\r\n            line-height: 24px;\r\n         }\r\n      }\r\n   }\r\n\r\n   .list-item {\r\n      background: url(${CheckBlueImage}) no-repeat left 24px;\r\n      background-size: 24px 24px;\r\n\r\n      > .content {\r\n         padding-left: 32px;\r\n      }\r\n   }\r\n\r\n   .list-item-deny {\r\n      background: url(${DenyImage}) no-repeat left 24px;\r\n      background-size: 24px 24px;\r\n\r\n      > .content {\r\n         padding-left: 32px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      && .cont {\r\n         > div {\r\n            padding: 20px 0 20px 20px;\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && .cont {\r\n         margin: 0 1rem;\r\n\r\n         > div {\r\n            border: 0px;\r\n            padding: 10px 0 10px 10px;\r\n         }\r\n      }\r\n\r\n      &&& .authorize {\r\n         margin-top: 20px;\r\n      }\r\n   }\r\n`\r\n\r\nconst LoginContainer = ({ loader, children, app_title }) => (\r\n   <CustomContainer>\r\n      <Dimmer.Dimmable as={Segment} basic className=''>\r\n         <Grid className=''>\r\n            <Dimmer inverted active={loader}>\r\n               <Loader />\r\n            </Dimmer>\r\n\r\n            <Grid.Row className=''>\r\n               <Grid.Column\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n                  className=''\r\n               >\r\n                  <List horizontal className='authorize'>\r\n                     <List.Item className='bg'>\r\n                        <Image src={AccountGreyImage} />\r\n                     </List.Item>\r\n                     <List.Item className='md'>\r\n                        <Image src={AuthorizeImage} />\r\n                     </List.Item>\r\n                     <List.Item className='bg'>\r\n                        <Image src={AppDefaultImage} />\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row className='title'>\r\n               <Grid.Column\r\n                  as='h2'\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n                  className=''\r\n               >\r\n                  Allow <span className='font-bold'> {app_title} </span> to use\r\n                  your NEAR account?\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  largeScreen={2}\r\n                  computer={1}\r\n                  mobile={16}\r\n                  className=''\r\n                  only='large screen computer mobile'\r\n               />\r\n               <Grid.Column\r\n                  largeScreen={6}\r\n                  computer={7}\r\n                  tablet={8}\r\n                  mobile={16}\r\n                  className='cont'\r\n               >\r\n                  <List className='border-right-light'>\r\n                     <List.Item as='h3'>This allows {app_title} to:</List.Item>\r\n                     <List.Item className='list-item'>\r\n                        <List.Content className='color-black'>\r\n                           View your Account Name\r\n                        </List.Content>\r\n                     </List.Item>\r\n                     <List.Item className='list-item'>\r\n                        <List.Content className='color-black'>\r\n                           Write Chat messages with your name\r\n                        </List.Content>\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  largeScreen={6}\r\n                  computer={7}\r\n                  tablet={8}\r\n                  mobile={16}\r\n                  className='cont'\r\n               >\r\n                  <List className=''>\r\n                     <List.Item as='h3'>But, does NOT allow them to:</List.Item>\r\n                     <List.Item className='list-item-deny'>\r\n                        <List.Content className='color-black'>\r\n                           View your private account details\r\n                        </List.Content>\r\n                     </List.Item>\r\n                     <List.Item className='list-item-deny'>\r\n                        <List.Content className='color-black'>\r\n                           Buy, Sell, or Transfer on your behalf\r\n                        </List.Content>\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  largeScreen={2}\r\n                  computer={1}\r\n                  mobile={16}\r\n                  className=''\r\n                  only='large screen computer mobile'\r\n               />\r\n            </Grid.Row>\r\n         </Grid>\r\n\r\n         {children}\r\n      </Dimmer.Dimmable>\r\n   </CustomContainer>\r\n)\r\n\r\nLoginContainer.propTypes = {\r\n   loader: PropTypes.bool,\r\n   children: PropTypes.element,\r\n   app_title: PropTypes.string\r\n}\r\n\r\nexport default LoginContainer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, Segment, List, Form, Button } from 'semantic-ui-react'\r\n\r\nimport AddBlueImage from '../../images/icon-add-blue.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\nimport ArrowUpImage from '../../images/icon-arrow-up.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   && button {\r\n      width: 190px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n\r\n      background: #0072ce;\r\n      margin: 0 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   && .deny {\r\n      width: 190px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #e6e6e6;\r\n\r\n      background: transparent;\r\n\r\n      font-size: 18px;\r\n      color: #999;\r\n      letter-spacing: 2px;\r\n\r\n      margin: 0 0 0 0;\r\n\r\n      :hover {\r\n         border: 4px solid #0072ce;\r\n         color: #0072ce;\r\n      }\r\n      :active,\r\n      :focus {\r\n         border: 4px solid #0072ce;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   .segment {\r\n      width: 100%;\r\n      padding: 0px;\r\n      margin: 0px;\r\n   }\r\n\r\n   .dropdown-list {\r\n      width: 100%;\r\n      position: relative;\r\n      cursor: pointer;\r\n\r\n      .element {\r\n         width: 100%;\r\n         min-height: 64px;\r\n         border: solid 4px #24272a;\r\n         margin: 0px;\r\n         padding: 0px;\r\n\r\n         background: #fff;\r\n\r\n         :hover {\r\n            background: #f8f8f8;\r\n         }\r\n         .img {\r\n            float: left;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-color: #d8d8d8;\r\n            background-image: url(${AccountGreyImage});\r\n            background-position: center center;\r\n            background-repeat: no-repeat;\r\n            background-size: 36px 36px;\r\n         }\r\n         .name {\r\n            margin-top: 12px;\r\n            margin-left: 18px;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n            flex: 1;\r\n         }\r\n         .arrow {\r\n            float: right;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-image: url(${ArrowDownImage});\r\n            background-repeat: no-repeat;\r\n            background-position: center center;\r\n            background-size: 24px auto;\r\n\r\n            &.up {\r\n               background-image: url(${ArrowUpImage});\r\n            }\r\n         }\r\n      }\r\n      .trigger {\r\n         display: flex;\r\n      }\r\n      .dropdown {\r\n         .element {\r\n            margin-top: -4px;\r\n            display: flex;\r\n         }\r\n      }\r\n      .create-account {\r\n         width: 100%;\r\n         min-height: 64px;\r\n         border: solid 4px #24272a;\r\n         margin: 0px;\r\n         padding: 0px;\r\n         cursor: pointer;\r\n\r\n         background: #24272a;\r\n\r\n         :hover {\r\n         }\r\n         .img {\r\n            float: left;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-image: url(${AddBlueImage});\r\n            background-position: center center;\r\n            background-repeat: no-repeat;\r\n            background-size: 24px 24px;\r\n         }\r\n         .name {\r\n            float: left;\r\n            margin-top: 12px;\r\n            margin-left: 18px;\r\n         }\r\n         .arrow {\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && button,\r\n      && .deny {\r\n         width: 130px;\r\n         height: 50px;\r\n         border-radius: 25px;\r\n\r\n         font-size: 14px;\r\n      }\r\n   }\r\n`\r\n\r\nconst LoginForm = ({\r\n   dropdown,\r\n   account,\r\n   handleOnClick,\r\n   handleDeny,\r\n   handleSelectAccount,\r\n   redirectCreateAccount\r\n}) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='dropdown'>\r\n         <Grid.Column\r\n            largeScreen={5}\r\n            computer={4}\r\n            tablet={3}\r\n            mobile={16}\r\n            className=''\r\n         />\r\n         <Grid.Column\r\n            largeScreen={6}\r\n            computer={8}\r\n            tablet={10}\r\n            mobile={16}\r\n            className=''\r\n         >\r\n            <Segment className='dropdown-list' onClick={handleOnClick} basic>\r\n               <List verticalAlign='middle' className={`element trigger`}>\r\n                  <List.Item className='img' />\r\n                  <List.Item as='h3' className='name'>\r\n                     @{account.accountId}\r\n                  </List.Item>\r\n                  <List.Item className={`arrow ${dropdown ? 'up' : ''}`} />\r\n               </List>\r\n\r\n               <Segment basic className={`dropdown ${dropdown ? '' : 'hide'}`}>\r\n                  {Object.keys(account.accounts)\r\n                     .filter(a => a !== account.accountId)\r\n                     .map((account, i) => (\r\n                        <List\r\n                           key={`lf-${i}`}\r\n                           onClick={() => handleSelectAccount(account)}\r\n                           className='element'\r\n                        >\r\n                           <List.Item className='img' />\r\n                           <List.Item as='h3' className='name'>\r\n                              @{account}\r\n                           </List.Item>\r\n                        </List>\r\n                     ))}\r\n                  <List\r\n                     onClick={redirectCreateAccount}\r\n                     className='create-account'\r\n                  >\r\n                     <List.Item className='img' />\r\n                     <List.Item className='h3 name color-seafoam-blue'>\r\n                        Create New Account\r\n                     </List.Item>\r\n                  </List>\r\n               </Segment>\r\n            </Segment>\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            largeScreen={5}\r\n            computer={4}\r\n            tablet={3}\r\n            mobile={16}\r\n            className=''\r\n         />\r\n      </Grid.Row>\r\n      <Grid.Row className={`${dropdown ? 'hide' : ''}`}>\r\n         <Grid.Column\r\n            largeScreen={5}\r\n            computer={4}\r\n            tablet={3}\r\n            mobile={16}\r\n            className=''\r\n         />\r\n         <Grid.Column\r\n            largeScreen={6}\r\n            computer={8}\r\n            tablet={10}\r\n            mobile={16}\r\n            className=''\r\n         >\r\n            <Form action={account.url.success_url}>\r\n               <input\r\n                  type='hidden'\r\n                  name='authToken'\r\n                  value={account.authToken}\r\n               />\r\n               <input\r\n                  type='hidden'\r\n                  name='accountId'\r\n                  value={account.accountId}\r\n               />\r\n               <Button className='deny' onClick={handleDeny}>\r\n                  DENY\r\n               </Button>\r\n               <Button className='' floated='right'>\r\n                  ALLOW\r\n               </Button>\r\n            </Form>\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            largeScreen={5}\r\n            computer={4}\r\n            tablet={3}\r\n            mobile={16}\r\n            className=''\r\n         />\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nLoginForm.propTypes = {\r\n   dropdown: PropTypes.bool.isRequired,\r\n   handleOnClick: PropTypes.func.isRequired,\r\n   handleDeny: PropTypes.func.isRequired,\r\n   handleSelectAccount: PropTypes.func.isRequired,\r\n   redirectCreateAccount: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(mapStateToProps)(LoginForm)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport LoginContainer from './LoginContainer'\r\nimport LoginForm from './LoginForm'\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nclass Login extends Component {\r\n   state = {\r\n      dropdown: false\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   handleOnClick = () => {\r\n      this.setState({\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handleDeny = e => {\r\n      e.preventDefault()\r\n      if (this.props.account.url.failure_url) {\r\n         window.location.href = this.props.account.url.failure_url\r\n      }\r\n   }\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <LoginContainer\r\n            loader={account.loader}\r\n            app_title={account.url && account.url.app_title}\r\n         >\r\n            {account.accountId && (\r\n               <LoginForm\r\n                  {...this.state}\r\n                  handleOnClick={this.handleOnClick}\r\n                  handleDeny={this.handleDeny}\r\n                  handleSelectAccount={this.handleSelectAccount}\r\n                  redirectCreateAccount={this.redirectCreateAccount}\r\n               />\r\n            )}\r\n         </LoginContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const LoginWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Login))\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Image, List } from 'semantic-ui-react';\r\n\r\nimport ArrowLeftImage from '../../images/icon-arrow-left.svg'\r\n\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationTabList = styled(List)`\r\n   .ui.button {\r\n      background: #F8F8F8;\r\n      color: #0072ce;\r\n      height: 36px;\r\n      font-weight: 500;\r\n      padding-left: 1em;\r\n      padding-right: 1em;\r\n\r\n      &.active {\r\n         background: #999999;\r\n         color: #ffffff;\r\n      }\r\n\r\n      :hover {\r\n         background: #999999;\r\n         color: #ffffff;\r\n      }\r\n   }\r\n\r\n   .ui.image {\r\n      width: .5em;\r\n      padding-bottom: 0px;\r\n   }\r\n`\r\n\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n   let i = from;\r\n   const range = [];\r\n\r\n   while (i <= to) {\r\n      range.push(i);\r\n      i += step;\r\n   }\r\n\r\n   return range;\r\n};\r\n\r\nexport class PaginationTab extends Component {\r\n   static propTypes = {\r\n      totalRecords: PropTypes.number.isRequired,\r\n      pageLimit: PropTypes.number,\r\n      pageNeighbors: PropTypes.number,\r\n      onPageChanged: PropTypes.func,\r\n      initialPage: PropTypes.number.isRequired,\r\n   }\r\n\r\n   static defaultProps = {\r\n      pageLimit: 10,\r\n      pageNeighbors: 1,\r\n      onPageChange: () => {},\r\n      initialPage: 0,\r\n   }\r\n\r\n   state = {\r\n      currentPage: null,\r\n   }\r\n\r\n   getTotalPages() {\r\n      return Math.ceil(this.props.totalRecords / this.props.pageLimit);\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ currentPage: this.props.initialPage + 1 })\r\n   }\r\n\r\n   gotoPage = (page) => {\r\n      const currentPage = this.props.onPageChanged(page) + 1;\r\n      this.setState({ currentPage });\r\n   };\r\n\r\n   handleClick = (page, evt) => {\r\n      evt.preventDefault();\r\n      this.gotoPage(page);\r\n      evt.target.blur();\r\n   };\r\n\r\n   handleMoveLeft = evt => {\r\n      evt.preventDefault();\r\n      this.gotoPage(this.state.currentPage - this.props.pageNeighbors * 2 - 1);\r\n      evt.target.blur();\r\n   };\r\n\r\n   handleMoveRight = evt => {\r\n      evt.preventDefault();\r\n      this.gotoPage(this.state.currentPage + this.props.pageNeighbors * 2 + 1);\r\n      evt.target.blur();\r\n   };\r\n\r\n   fetchPageNumbers = () => {\r\n      const totalPages = this.getTotalPages();\r\n      const currentPage = this.state.currentPage;\r\n      const pageNeighbors = this.props.pageNeighbors;\r\n\r\n      const totalNumbers = pageNeighbors * 2 + 3;\r\n      const totalBlocks = totalNumbers + 2;\r\n\r\n      if (totalPages > totalBlocks) {\r\n         let pages = [];\r\n\r\n         const leftBound = currentPage - pageNeighbors;\r\n         const rightBound = currentPage + pageNeighbors;\r\n         const beforeLastPage = totalPages - 1;\r\n\r\n         const startPage = leftBound > 2 ? leftBound : 2;\r\n         const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n         pages = range(startPage, endPage);\r\n\r\n         const pagesCount = pages.length;\r\n         const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n         const leftSpill = startPage > 2;\r\n         const rightSpill = endPage < beforeLastPage;\r\n\r\n         const leftSpillPage = LEFT_PAGE;\r\n         const rightSpillPage = RIGHT_PAGE;\r\n\r\n         if (leftSpill && !rightSpill) {\r\n            const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n            pages = [leftSpillPage, ...extraPages, ...pages];\r\n         } else if (!leftSpill && rightSpill) {\r\n            const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n            pages = [...pages, ...extraPages, rightSpillPage];\r\n         } else if (leftSpill && rightSpill) {\r\n            pages = [leftSpillPage, ...pages, rightSpillPage];\r\n         }\r\n\r\n         return [1, ...pages, totalPages];\r\n      }\r\n\r\n      return range(1, totalPages);\r\n   };\r\n\r\n   render() {\r\n      if (!this.props.totalRecords) return null;\r\n      if (this.totalPages === 1) return null;\r\n\r\n      const pages = this.fetchPageNumbers();\r\n      return (\r\n         <PaginationTabList horizontal className=\"PaginationTab\">\r\n            {pages.map((page, index) => {\r\n               if (page === LEFT_PAGE)\r\n                  return (\r\n                     <List.Item key={index}>\r\n                        <Button\r\n                           circular\r\n                           onClick={this.handleMoveLeft}\r\n                        >\r\n                           <Image src={ArrowLeftImage} />\r\n                        </Button>\r\n                     </List.Item>\r\n                  );\r\n\r\n               if (page === RIGHT_PAGE)\r\n                  return (\r\n                     <List.Item key={index}>\r\n                        <Button\r\n                           circular\r\n                           onClick={this.handleMoveRight}\r\n                        >\r\n                           ...\r\n                        </Button>\r\n                     </List.Item>\r\n                  );\r\n\r\n               {/* console.log(\"current page: \" + this.state.currentPage + \"; page: \" + page) */ }\r\n               return (\r\n                  <List.Item key={index}>\r\n                     <Button\r\n                        circular\r\n                        active={this.state.currentPage === page}\r\n                        onClick={e => this.handleClick(page, e)}\r\n                     >\r\n                        {page}\r\n                     </Button>\r\n                  </List.Item>\r\n               );\r\n            })}\r\n         </PaginationTabList>\r\n      );\r\n   }\r\n}\r\n","import React, { Fragment } from 'react'\r\n\r\nimport { Image, Button, List } from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationFilterList = styled(List)`\r\n   && .filter-dropdown-tr {\r\n      width: 76px;\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n      border-radius: 18px;\r\n      background-position: 17px center, 44px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 18px auto, 12px auto;\r\n   }\r\n\r\n   && .filter-dropdown {\r\n      padding-top: 0px;\r\n      width: 230px;\r\n      min-height: 30px;\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 2px;\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 10px;\r\n      }\r\n\r\n      .item {\r\n         height: 36px !important;\r\n\r\n         img {\r\n            width: 18px !important;\r\n            margin: 0 10px !important;\r\n         }\r\n         .content {\r\n            margin: 2px 0 0 0 !important;\r\n         }\r\n      }\r\n   }\r\n\r\n   &&& .filter-by {\r\n      padding-left: 10px;\r\n      padding-right: 20px;\r\n   }\r\n`\r\n\r\nconst PaginationFilter = ({\r\n   filterTypesByType,\r\n   handleOnClick,\r\n   dropdownType,\r\n   handleDropdownClick,\r\n   dropdown\r\n}) => (\r\n   <PaginationFilterList horizontal className='border-right-light'>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClick}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='filter-dropdown-tr'\r\n            style={{\r\n               backgroundImage: `url(${dropdownType}), url(${ArrowDown})`\r\n            }}\r\n         />\r\n\r\n         <List\r\n            selection\r\n            verticalAlign='middle'\r\n            className={`filter-dropdown ${dropdown ? '' : 'hide'}`}\r\n         >\r\n            {filterTypesByType.map((type, i) => (\r\n               <List.Item\r\n                  key={`filter-${i}`}\r\n                  onClick={() => handleDropdownClick(type.img)}\r\n               >\r\n                  <Image src={type.img} />\r\n                  <List.Content as='h6'>{type.name}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n      <List.Item as='h6' className='filter-by'>\r\n         FILTER BY TYPE\r\n      </List.Item>\r\n   </PaginationFilterList>\r\n)\r\n\r\nexport default PaginationFilter\r\n","import React, { Fragment } from 'react'\r\n\r\nimport {\r\n   Button,\r\n   List,\r\n} from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst PaginationPagingList = styled(List)`\r\n   && .paging-dropdown-tr {\r\n      width: 66px;\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n\r\n      border-radius: 18px;\r\n      background-position: 38px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 12px auto;\r\n      padding: 0 20px 0 0;\r\n\r\n      line-height: 32px;\r\n   }\r\n\r\n   && .paging-dropdown {\r\n      padding-top: 0px;\r\n      width: 66px;\r\n      min-height: 30px;\r\n\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 6px;\r\n\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 7px;\r\n      }\r\n\r\n      & > .item > .content {\r\n         font-size: 14px;\r\n         line-height: 18px;\r\n         font-weight: 600;\r\n         padding-left: 6px;\r\n      }\r\n   }\r\n\r\n   &&& .filter-by {\r\n      padding-left: 10px;\r\n      padding-right: 20px;\r\n   }\r\n   \r\n`\r\n\r\nconst pagingTypes = [10, 20, 50, 100]\r\n\r\nconst PaginationFilter = ({ handleOnClickPaging, pagingValue, pagingDropdown, handlePagingDropdownClick }) => (\r\n   <PaginationPagingList horizontal className='border-right-light'>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClickPaging}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='paging-dropdown-tr'\r\n            style={{ backgroundImage: ` url(${ArrowDown})` }}\r\n         >\r\n            {pagingValue}\r\n         </Button>\r\n\r\n         <List selection verticalAlign='middle' className={`paging-dropdown ${pagingDropdown ? '' : 'hide'}`}>\r\n            {pagingTypes.map((type, i) => (\r\n               <List.Item\r\n                  key={`page-${i}`}\r\n                  onClick={() => handlePagingDropdownClick(type)}\r\n               >\r\n                  <List.Content verticalAlign='middle'>{type}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n      <List.Item as='h6' className='filter-by'>\r\n         PER PAGE\r\n      </List.Item>\r\n   </PaginationPagingList>\r\n)\r\n\r\nexport default PaginationFilter","import React, { Fragment } from \"react\";\r\n\r\nconst PaginationSummary = ({pageNumber, pageLimit, totalRecords}) => (\r\n   <Fragment>\r\n      <span className='color-charcoal-grey'>{(pageNumber * pageLimit) + 1}-{(pageNumber + 1) * pageLimit} </span>\r\n      OF {totalRecords} TOTAL\r\n   </Fragment>\r\n)\r\n\r\nexport default PaginationSummary","import React, { Fragment } from 'react'\r\nimport {\r\n   Button,\r\n   List,\r\n} from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\n\r\nconst ShowingSwitcherList = styled(List)`\r\n   padding: 0px;\r\n\r\n   .showing {\r\n      padding-left: 0px;\r\n      padding-right: 0px;\r\n   }\r\n\r\n   && .switcher {\r\n      padding-left: 0px;\r\n      padding-right: 20px;\r\n      border-right: 1px solid #e6e6e6;\r\n   }\r\n\r\n   .button-radio {\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      border-radius: 20px;\r\n      background: #f8f8f8;\r\n      line-height: 36px;\r\n      font-weight: 600;\r\n\r\n      padding-top: 0px;\r\n      padding-left: 0px;\r\n      padding-right: 0px;\r\n      display: flex;\r\n\r\n      &:hover {\r\n         background: #e6e6e6;\r\n      }\r\n\r\n      .on {\r\n         border: 2px solid #e6e6e6;\r\n         border-radius: 20px;\r\n         background: #fff;\r\n         padding: 0px;\r\n      }\r\n      .off {\r\n         border: 0px solid #e6e6e6;\r\n         margin-top: 0px;\r\n         border-radius: 20px;\r\n         padding: 0px;\r\n         color: #0072ce;\r\n      }\r\n      .left {\r\n         width: 70px;\r\n         height: 36px;\r\n         float: left;\r\n      }\r\n      .right {\r\n         width: 70px;\r\n         height: 36px;\r\n         float: right;\r\n      }\r\n      .right.on {\r\n         border-right: 0px;\r\n      }\r\n      & > div {\r\n         margin: -2px 0 0 -2px;\r\n      }\r\n   }\r\n`\r\n\r\n\r\nconst ShowingSwitcher = ({buttonRadioClick, buttonRadio}) => (\r\n   <ShowingSwitcherList horizontal >\r\n      <List.Item as='h6' className='showing'>\r\n         SHOWING\r\n      </List.Item>\r\n      <List.Item className='switcher'>\r\n         <Button \r\n            className='button-radio'\r\n            onClick={buttonRadioClick}\r\n         >\r\n            <div className={`left ${!buttonRadio ? 'on' : 'off'}`}>ALL</div>\r\n            <div className={`right ${buttonRadio ? 'on' : 'off'}`}>MINE</div>\r\n         </Button>\r\n      </List.Item>\r\n   </ShowingSwitcherList>\r\n)\r\n\r\nexport default ShowingSwitcher","import React, { Fragment } from 'react'\r\n\r\nimport {\r\n   Form,\r\n} from 'semantic-ui-react'\r\n\r\nimport MSearchImage from '../../images/icon-m-search.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst SearchForm = styled(Form)`\r\n   float: right;\r\n\r\n   &&&& .search input {\r\n      width: 360px;\r\n\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      border-radius: 25px;\r\n      padding-left: 40px;\r\n\r\n      font-size: 14px;\r\n\r\n      background-color: #f8f8f8;\r\n      background-image: url(${MSearchImage});\r\n      background-position: 12px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 14px auto;\r\n   }\r\n`\r\n\r\nconst Search = ({handleSubmit, handleChange,search}) => (\r\n   <SearchForm onSubmit={handleSubmit}>\r\n      <Form.Input className='search' name='search' value={search} onChange={handleChange} placeholder='Search transactions and receipts...' />\r\n   </SearchForm>\r\n)\r\n\r\nexport default Search","import React, { Fragment } from 'react'\r\n\r\nimport { Image, Button, List } from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationFilterList = styled(List)`\r\n   && .sortby-dropdown-tr {\r\n      width: 210px;\r\n      line-height: 32px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n      border-radius: 18px;\r\n      background-position: 180px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 12px auto;\r\n      background-image: url(${ArrowDown});\r\n      text-align: left;\r\n      padding-top: 0px;\r\n      padding-bottom: 0px;\r\n      letter-spacing: 1.8px;\r\n   }\r\n\r\n   && .sortby-dropdown {\r\n      padding-top: 0px;\r\n      width: 210px;\r\n      min-height: 30px;\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 2px;\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 10px;\r\n      }\r\n\r\n      .item {\r\n         height: 36px !important;\r\n\r\n         img {\r\n            width: 18px !important;\r\n            margin: 0 10px !important;\r\n         }\r\n         .content {\r\n            margin: 2px 0 0 0 !important;\r\n         }\r\n      }\r\n   }\r\n\r\n   &&& .sortby {\r\n      padding-left: 10px;\r\n      padding-right: 0px;\r\n   }\r\n`\r\n\r\nconst PaginationFilter = ({\r\n   filterTypesByType,\r\n   handleOnClick,\r\n   dropdownType,\r\n   handleDropdownClick,\r\n   dropdown\r\n}) => (\r\n   <PaginationFilterList horizontal>\r\n      <List.Item as='h6' className='sortby'>\r\n         SORT BY\r\n      </List.Item>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClick}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='sortby-dropdown-tr'\r\n         >\r\n            RECENTLY ADDED\r\n         </Button>\r\n\r\n         <List\r\n            selection\r\n            verticalAlign='middle'\r\n            className={`sortby-dropdown ${dropdown ? '' : 'hide'}`}\r\n         >\r\n            {filterTypesByType.map((type, i) => (\r\n               <List.Item\r\n                  key={`sortby-${i}`}\r\n                  onClick={() => handleDropdownClick(type.img)}\r\n               >\r\n                  <List.Content as='h6'>{type.name}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n   </PaginationFilterList>\r\n)\r\n\r\nexport default PaginationFilter\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Grid, List, Image, Button } from 'semantic-ui-react'\r\n\r\nimport TransactionFilter from '../../images/icon-m-filter.svg'\r\nimport CloseImage from '../../images/icon-close.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport MTransactionImage from '../../images/icon-m-transaction.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport { PaginationTab } from './PaginationTab'\r\nimport PaginationFilter from './PaginationFilter'\r\nimport PaginationPaging from './PaginationPaging'\r\nimport PaginationSummary from './PaginationSummary'\r\nimport ShowingSwitcher from '../common/ShowingSwitcher'\r\nimport Search from '../common/Search'\r\n\r\nimport PaginationSortBy from './PaginationSortBy'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationBlockGrid = styled(Grid)`\r\n   & > .row:first-child {\r\n      min-height: 70px;\r\n   }\r\n\r\n   &&& .pagination-block-paging {\r\n      padding: 0px;\r\n   }\r\n\r\n   &&& .pagination-block-top {\r\n      padding-left: 0px;\r\n\r\n      &-paging-summary {\r\n         padding-left: 20px;\r\n      }\r\n\r\n      &-search {\r\n         padding: 0px;\r\n      }\r\n\r\n      &-paging {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   &&& .show-sub {\r\n      padding: 0 0 0 0;\r\n      margin-top: -16px;\r\n   }\r\n\r\n   &&& .sub-list {\r\n      background: #fff;\r\n      width: 100%;\r\n      min-height: 448px;\r\n      padding: 0 0;\r\n\r\n      > .item {\r\n         padding: 18px 20px;\r\n      }\r\n\r\n      .img {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 20px;\r\n         right: 20px;\r\n         padding: 0px;\r\n\r\n         img {\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      .text {\r\n         margin: 0 10% 0 0;\r\n         color: #24272a;\r\n         float: left;\r\n\r\n         .header {\r\n            font-family: 'benton-sans', sans-serif;\r\n         }\r\n         .content {\r\n            color: #999999;\r\n            padding-top: 12px;\r\n            line-height: 20px;\r\n         }\r\n      }\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 0 0 0;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .remove-connection {\r\n         > button {\r\n            width: 100%;\r\n            background-color: #ff585d;\r\n            border: 2px solid #ff585d;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               background: #fff;\r\n               color: #ff585d;\r\n            }\r\n         }\r\n      }\r\n      .recent-transactions {\r\n         background-color: #f8f8f8;\r\n         margin: 0 0 0 0;\r\n      }\r\n      .recent-transactions-title {\r\n         padding: 0 0 0 24px;\r\n         background: url(${MTransactionImage}) no-repeat left 2px;\r\n         background-size: 12px auto;\r\n      }\r\n      .recent-transactions-row {\r\n         margin: 0 0 0 24px;\r\n         padding: 12px 0;\r\n         border-bottom: 2px solid #e6e6e6;\r\n      }\r\n      .recent-transactions-row:last-child {\r\n         border-bottom: 0px solid #e6e6e6;\r\n      }\r\n\r\n      .authorized-transactions {\r\n         background-color: #fff;\r\n         margin: 0 0 0 0;\r\n         padding-top: 0px;\r\n      }\r\n      .authorized-transactions-title {\r\n         padding: 12px 0 0 24px;\r\n         background: url(${MTransactionImage}) no-repeat left 14px;\r\n         background-size: 12px auto;\r\n      }\r\n      .authorized-transactions-row {\r\n         margin: 0 0 0 24px;\r\n         padding: 12px 0 0 32px;\r\n         background: url(${CheckBlueImage}) no-repeat left 14px;\r\n         line-height: 32px;\r\n      }\r\n      .authorized-transactions-row:last-child {\r\n         border-bottom: 0px solid #e6e6e6;\r\n      }\r\n\r\n      .send-money {\r\n         > .button {\r\n            width: 100%;\r\n            background-color: #5ace84;\r\n            border: 2px solid #5ace84;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               background-color: #fff;\r\n               color: #5ace84;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   @media screen and (max-width: 991px) {\r\n      &&& .sub-list {\r\n         .img {\r\n            top: 6px;\r\n            right: 6px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nclass PaginationBlock extends Component {\r\n   static defaultProps = {\r\n      onPageChanged: () => {}\r\n   }\r\n\r\n   state = {\r\n      search: '',\r\n      dropdown: false,\r\n      dropdownType: this.props.type\r\n         ? this.props.filterTypes[this.props.type].img\r\n         : TransactionFilter,\r\n      pagingDropdown: false,\r\n      pagingValue: 10,\r\n\r\n      buttonRadio: false\r\n   }\r\n\r\n   handleOnClick = () => {\r\n      this.setState({\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handleOnClickPaging = () => {\r\n      this.setState({\r\n         pagingDropdown: !this.state.pagingDropdown\r\n      })\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({ [name]: value }))\r\n   }\r\n\r\n   handleSubmit = () => {\r\n      console.log('not ready yet')\r\n   }\r\n\r\n   handleDropdownClick = dropdownType => {\r\n      this.setState({\r\n         dropdownType,\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handlePagingDropdownClick = pagingValue => {\r\n      this.setState({\r\n         pagingValue,\r\n         pagingDropdown: !this.state.pagingDropdown\r\n      })\r\n\r\n      this.props.onPageChanged(1, pagingValue)\r\n   }\r\n\r\n   handleTabChange(pageNumber) {\r\n      // this.setState({\r\n      //    pageNumber: pageNumber,\r\n      //    loader: true,\r\n      // })\r\n      // this.updateBlock(pageNumber)\r\n      // return pageNumber\r\n   }\r\n\r\n   buttonRadioClick = () => {\r\n      this.setState(state => ({\r\n         buttonRadio: !state.buttonRadio\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         filterTypes,\r\n         type,\r\n         pageNumber = 0,\r\n         showSub = false,\r\n         subPage\r\n      } = this.props\r\n      const {\r\n         buttonRadio,\r\n         dropdownType,\r\n         dropdown,\r\n         search,\r\n         pagingValue,\r\n         pagingDropdown\r\n      } = this.state\r\n\r\n      const {\r\n         totalRecords = 1100,\r\n         pageLimit = 10,\r\n         initialPage = 0,\r\n         onPageChanged = () => {},\r\n         pageNeighbors = 1\r\n      } = this.props\r\n\r\n      const filterTypesByType = type ? [filterTypes[type]] : filterTypes\r\n\r\n      return (\r\n         <PaginationBlockGrid\r\n            className='border-top-bold border-bottom-bold'\r\n            stackable\r\n            columns={2}\r\n         >\r\n            <Grid.Row className='border-bottom-light'>\r\n               <Grid.Column\r\n                  width={10}\r\n                  verticalAlign='middle'\r\n                  className='pagination-block-top'\r\n               >\r\n                  <PaginationSortBy\r\n                     filterTypesByType={filterTypesByType}\r\n                     handleOnClick={this.handleOnClick}\r\n                     dropdownType={dropdownType}\r\n                     handleDropdownClick={this.handleDropdownClick}\r\n                     dropdown={dropdown}\r\n                  />\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  width={6}\r\n                  textAlign='right'\r\n                  verticalAlign='middle'\r\n                  className='pagination-block-top-search'\r\n               >\r\n                  <Search\r\n                     handleSubmit={this.handleSubmit}\r\n                     handleChange={this.handleChange}\r\n                     search={search}\r\n                  />\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n               <Grid.Column computer={showSub ? 10 : 16}>\r\n                  <Grid>{this.props.children}</Grid>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  computer={6}\r\n                  className={`show-sub ${showSub ? `` : `hide`}`}\r\n               >\r\n                  <List className='box sub-list'>\r\n                     <List.Item className='img'>\r\n                        <Image\r\n                           onClick={() => this.props.toggleShowSub()}\r\n                           src={CloseImage}\r\n                        />\r\n                     </List.Item>\r\n\r\n                     {subPage === 'authorized-apps' ? (\r\n                        <Fragment>\r\n                           <List.Item>\r\n                              <List horizontal>\r\n                                 <List.Item>\r\n                                    <div\r\n                                       className='main-image'\r\n                                       style={{ backgroundColor: '#fff' }}\r\n                                    >\r\n                                       <Image\r\n                                          src={NearkatImage}\r\n                                          className=''\r\n                                          align='left'\r\n                                       />\r\n                                    </div>\r\n                                 </List.Item>\r\n                                 <List.Item>\r\n                                    <List.Header as='h2'>\r\n                                       NEAR Place\r\n                                    </List.Header>\r\n                                    <List.Item as='h5' className='color-blue'>\r\n                                       www.nearplace.com\r\n                                    </List.Item>\r\n                                 </List.Item>\r\n                              </List>\r\n                           </List.Item>\r\n                           <List.Item className='remove-connection border-top'>\r\n                              <Button className=''>DEAUTHORIZE</Button>\r\n                           </List.Item>\r\n                           <List.Item className='authorized-transactions'>\r\n                              <List.Item\r\n                                 as='h6'\r\n                                 className='authorized-transactions-title border-top'\r\n                              >\r\n                                 AUTHORIZED TO\r\n                              </List.Item>\r\n                              <List.Item className='authorized-transactions-row color-black'>\r\n                                 View your Account Name\r\n                              </List.Item>\r\n                              <List.Item className='authorized-transactions-row color-black'>\r\n                                 Do something else on your behalf\r\n                              </List.Item>\r\n                           </List.Item>\r\n                           <List.Item className='recent-transactions'>\r\n                              <List.Item\r\n                                 as='h6'\r\n                                 className='recent-transactions-title border-top'\r\n                              >\r\n                                 RECENT TRANSACTIONS\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Another thing here</List.Header>\r\n                                 <List.Item>3h ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>\r\n                                    Another Thing Happened\r\n                                 </List.Header>\r\n                                 <List.Item>3d ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>\r\n                                    In-app purchase: 20 Ⓝ\r\n                                 </List.Header>\r\n                                 <List.Item>1w ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Staked: 10 Ⓝ</List.Header>\r\n                                 <List.Item>2w ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Authorized</List.Header>\r\n                                 <List.Item>2w ago</List.Item>\r\n                              </List.Item>\r\n                           </List.Item>\r\n                        </Fragment>\r\n                     ) : (\r\n                        <Fragment>\r\n                           <List.Item>\r\n                              <List horizontal>\r\n                                 <List.Item>\r\n                                    <div className='main-image'>\r\n                                       <Image\r\n                                          src={AccountGreyImage}\r\n                                          className=''\r\n                                          align='left'\r\n                                       />\r\n                                    </div>\r\n                                 </List.Item>\r\n                                 <List.Item>\r\n                                    <List.Header as='h2'>\r\n                                       Alex Skidanov\r\n                                    </List.Header>\r\n                                    <List.Item as='h5'>@alex.near</List.Item>\r\n                                 </List.Item>\r\n                              </List>\r\n                           </List.Item>\r\n                           <List.Item className='remove-connection border-top'>\r\n                              <Button className=''>REMOVE CONNECTION</Button>\r\n                           </List.Item>\r\n                           <List.Item className='recent-transactions'>\r\n                              <List.Item\r\n                                 as='h6'\r\n                                 className='recent-transactions-title border-top'\r\n                              >\r\n                                 RECENT TRANSACTIONS\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>You sent 20 Ⓝ</List.Header>\r\n                                 <List.Item>3h ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Alex sent you 1020 Ⓝ</List.Header>\r\n                                 <List.Item>3d ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>\r\n                                    You and Alex played NEAR Chess\r\n                                 </List.Header>\r\n                                 <List.Item>1w ago</List.Item>\r\n                              </List.Item>\r\n                           </List.Item>\r\n                           <List.Item className='send-money border-top'>\r\n                              <Button\r\n                                 as={Link}\r\n                                 to='/send-money/marcin'\r\n                                 className=''\r\n                              >\r\n                                 SEND MONEY\r\n                              </Button>\r\n                           </List.Item>\r\n                        </Fragment>\r\n                     )}\r\n                  </List>\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row className='border-top-light'>\r\n               <Grid.Column\r\n                  width={8}\r\n                  verticalAlign='middle'\r\n                  className='pagination-block-top-paging'\r\n               >\r\n                  <List horizontal verticalAlign='middle'>\r\n                     <List.Item width={6} className=''>\r\n                        <PaginationPaging\r\n                           handleOnClickPaging={this.handleOnClickPaging}\r\n                           pagingValue={pagingValue}\r\n                           pagingDropdown={pagingDropdown}\r\n                           handlePagingDropdownClick={\r\n                              this.handlePagingDropdownClick\r\n                           }\r\n                        />\r\n                     </List.Item>\r\n                     <List.Item\r\n                        width={6}\r\n                        as='h6'\r\n                        className='pagination-block-top-paging-summary'\r\n                     >\r\n                        <PaginationSummary\r\n                           pageNumber={pageNumber}\r\n                           pageLimit={pageLimit}\r\n                           totalRecords={totalRecords}\r\n                        />\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  width={8}\r\n                  className='pagination-block-paging'\r\n                  textAlign='right'\r\n               >\r\n                  <PaginationTab\r\n                     totalRecords={totalRecords}\r\n                     pageLimit={pageLimit}\r\n                     initialPage={initialPage}\r\n                     onPageChanged={onPageChanged}\r\n                     pageNeighbors={pageNeighbors}\r\n                  />\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n         </PaginationBlockGrid>\r\n      )\r\n   }\r\n}\r\n\r\nexport default PaginationBlock\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\r\n\r\nimport { Container, Grid, Button, Header } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n\r\n         :first-child {\r\n            padding-left: 0px;\r\n         }\r\n      }\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-left: 0px;\r\n         line-height: 48px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .creating-info {\r\n         padding-left: 1rem;\r\n         padding-right: 1rem;\r\n      }\r\n   }\r\n`\r\n\r\nconst ContactsContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid columns={2} className='creating-info'>\r\n         <Grid.Column computer={12} tablet={10} mobile={16}>\r\n            <Header as='h1'>Contacts</Header>\r\n         </Grid.Column>\r\n         <Grid.Column computer={4} tablet={6} mobile={16}>\r\n            <Header as='h1' textAlign='right' className='color-black'>\r\n               203<span className='color-brown-grey'> total</span>\r\n            </Header>\r\n         </Grid.Column>\r\n      </Grid>\r\n\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default ContactsContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport PaginationBlock from '../pagination/PaginationBlock'\r\nimport ListItem from '../dashboard/ListItem'\r\n\r\nimport ContactsContainer from './ContactsContainer'\r\n\r\nimport TContractImage from '../../images/icon-t-contract.svg'\r\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\r\n\r\nimport TStakeImage from '../../images/icon-t-stake.svg'\r\nimport TTransferImage from '../../images/icon-t-transfer.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nclass Contacts extends Component {\r\n   state = {\r\n      loader: false,\r\n      showSub: false,\r\n      showSubOpen: 0,\r\n      activity: [],\r\n      filterTypes: [\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' }\r\n      ]\r\n   }\r\n\r\n   toggleShowSub = i => {\r\n      i = i == null ? this.state.showSubOpen : i\r\n\r\n      this.setState(state => ({\r\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\r\n         showSubOpen: i\r\n      }))\r\n   }\r\n\r\n   componentDidMount() {\r\n      // this.wallet = new Wallet()\r\n      // this.props.handleRefreshUrl(this.props.location)\r\n      // this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', '']\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      const { loader, activity, filterTypes, showSub, showSubOpen } = this.state\r\n\r\n      return (\r\n         <ContactsContainer>\r\n            <PaginationBlock\r\n               filterTypes={filterTypes}\r\n               showSub={showSub}\r\n               toggleShowSub={this.toggleShowSub}\r\n            >\r\n               {activity.map((row, i) => (\r\n                  <ListItem\r\n                     row={row}\r\n                     i={i}\r\n                     wide={true}\r\n                     showSub={showSub}\r\n                     toggleShowSub={this.toggleShowSub}\r\n                     showSubOpen={showSubOpen}\r\n                  />\r\n               ))}\r\n            </PaginationBlock>\r\n         </ContactsContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nconst mapStateToProps = ({}) => ({})\r\n\r\nexport const ContactsWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Contacts))\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\r\n\r\nimport { Container, Grid, Button, Header } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n\r\n         :first-child {\r\n            padding-left: 0px;\r\n         }\r\n      }\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-left: 0px;\r\n         line-height: 48px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .creating-info {\r\n         padding-left: 1rem;\r\n         padding-right: 1rem;\r\n      }\r\n   }\r\n`\r\n\r\nconst AuthorizedAppsContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid columns={2} className='creating-info'>\r\n         <Grid.Column computer={12} tablet={10} mobile={16}>\r\n            <Header as='h1'>Authorized Apps</Header>\r\n         </Grid.Column>\r\n         <Grid.Column computer={4} tablet={6} mobile={16}>\r\n            <Header as='h1' textAlign='right' className='color-black'>\r\n               23<span className='color-brown-grey'> total</span>\r\n            </Header>\r\n         </Grid.Column>\r\n      </Grid>\r\n\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default AuthorizedAppsContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport PaginationBlock from '../pagination/PaginationBlock'\r\nimport ListItem from '../dashboard/ListItem'\r\n\r\nimport AuthorizedAppsContainer from './AuthorizedAppsContainer'\r\n\r\nimport TContractImage from '../../images/icon-t-contract.svg'\r\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\r\n\r\nimport TStakeImage from '../../images/icon-t-stake.svg'\r\nimport TTransferImage from '../../images/icon-t-transfer.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nclass AuthorizedApps extends Component {\r\n   state = {\r\n      loader: false,\r\n      showSub: false,\r\n      showSubOpen: 0,\r\n      activity: [],\r\n      filterTypes: [\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' }\r\n      ]\r\n   }\r\n\r\n   toggleShowSub = i => {\r\n      i = i == null ? this.state.showSubOpen : i\r\n\r\n      this.setState(state => ({\r\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\r\n         showSubOpen: i\r\n      }))\r\n   }\r\n\r\n   componentDidMount() {\r\n      // this.wallet = new Wallet()\r\n      // this.props.handleRefreshUrl(this.props.location)\r\n      // this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\r\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\r\n               [NearkatImage, 'Knights App', '2 days ago', ''],\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\r\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\r\n               [NearkatImage, 'Knights App', '2 days ago', ''],\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\r\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\r\n               [NearkatImage, 'Knights App', '2 days ago', ''],\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', '']\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      const { loader, activity, filterTypes, showSub, showSubOpen } = this.state\r\n\r\n      return (\r\n         <AuthorizedAppsContainer>\r\n            <PaginationBlock\r\n               filterTypes={filterTypes}\r\n               showSub={showSub}\r\n               toggleShowSub={this.toggleShowSub}\r\n               subPage='authorized-apps'\r\n            >\r\n               {activity.map((row, i) => (\r\n                  <ListItem\r\n                     row={row}\r\n                     i={i}\r\n                     wide={true}\r\n                     showSub={showSub}\r\n                     toggleShowSub={this.toggleShowSub}\r\n                     showSubOpen={showSubOpen}\r\n                  />\r\n               ))}\r\n            </PaginationBlock>\r\n         </AuthorizedAppsContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nconst mapStateToProps = ({}) => ({})\r\n\r\nexport const AuthorizedAppsWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(AuthorizedApps))\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n\r\n         :first-child {\r\n            padding-left: 0px;\r\n         }\r\n      }\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-left: 0px;\r\n         line-height: 48px;\r\n      }\r\n   }\r\n\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .creating-info {\r\n         padding-left: 1rem;\r\n         padding-right: 1rem;\r\n      }\r\n\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='1' className='page-title'>\r\n            <Grid.Column as='h1' textAlign='center'>\r\n               Send Money\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default SendMoneyContainer\r\n","import React from 'react'\r\n\r\nimport {\r\n   Header,\r\n   TextArea,\r\n   List,\r\n   Image,\r\n   Button,\r\n   Form,\r\n   Dimmer,\r\n   Loader\r\n} from 'semantic-ui-react'\r\n\r\nimport CreateAccoungFormInput from '../accounts/CreateAccoungFormInput'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&&&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin: 36px auto 0 auto;\r\n\r\n      form {\r\n         h3 {\r\n            margin-bottom: 13px;\r\n            text-align: left;\r\n         }\r\n\r\n         .main-image {\r\n            border: 0px;\r\n            padding: 0 10px;\r\n            width: 48px;\r\n            height: 48px;\r\n            background: #e6e6e6;\r\n            border-radius: 32px;\r\n            margin: 0 auto;\r\n\r\n            img {\r\n               padding-top: 10px;\r\n            }\r\n         }\r\n\r\n         .amount {\r\n            margin-top: 16px;\r\n            margin-bottom: 0px;\r\n            padding-top: 24px;\r\n\r\n            input {\r\n               height: 80px;\r\n               border: 0px;\r\n               font-family: Bw Seido Round;\r\n               font-size: 72px;\r\n               font-weight: 500;\r\n               line-height: 80px;\r\n               color: #4a4f54;\r\n               text-align: center;\r\n               padding: 0px;\r\n            }\r\n         }\r\n         .near-tokens {\r\n            padding-top: 14px;\r\n            padding-bottom: 36px;\r\n            text-align: center;\r\n\r\n            > button {\r\n               width: 200px;\r\n               background-color: #fff;\r\n               border: 2px solid #e6e6e6;\r\n               border-radius: 25px;\r\n               color: #999999;\r\n               font-weight: 600;\r\n\r\n               :hover {\r\n                  background-color: #e6e6e6;\r\n                  color: #fff;\r\n               }\r\n            }\r\n         }\r\n\r\n         .add-note {\r\n            > textarea {\r\n               width: 100%;\r\n               border: 0px;\r\n               padding: 12px;\r\n\r\n               :focus {\r\n                  border: 0px;\r\n               }\r\n            }\r\n         }\r\n\r\n         .send-money {\r\n            margin-top: 24px;\r\n            margin-bottom: 6px;\r\n\r\n            > button {\r\n               width: 288px;\r\n               line-height: 60px;\r\n               border-radius: 30px;\r\n               border: solid 2px #5ace84;\r\n               font-size: 18px;\r\n               font-weight: 500;\r\n               letter-spacing: 2px;\r\n               text-align: center;\r\n               padding: 0 0 0 0;\r\n               background-color: #5ace84;\r\n               color: #fff;\r\n\r\n               :hover {\r\n                  color: #5ace84;\r\n                  background: #fff;\r\n               }\r\n               :disabled {\r\n                  background-color: #e6e6e6;\r\n                  border-color: #e6e6e6;\r\n                  opacity: 1;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         padding: 0px;\r\n         width: 100%;\r\n         text-align: center;\r\n         margin-left: auto;\r\n         margin-right: auto;\r\n         border: 0px;\r\n\r\n         .near-tokens {\r\n            > button {\r\n               width: 200px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyFirstStep = ({\r\n   handleNextStep,\r\n   handleChange,\r\n   note,\r\n   loader,\r\n   paramAccountId,\r\n   accountId,\r\n   handleChangeAccountId,\r\n   successMessage,\r\n   errorMessage,\r\n   formLoader,\r\n   amount\r\n}) => (\r\n   <CustomList className='box'>\r\n      <Form autoComplete='off' onSubmit={handleChangeAccountId}>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         {paramAccountId ? (\r\n            <List.Item>\r\n               <List.Content>\r\n                  <div className='main-image'>\r\n                     <Image src={AccountGreyImage} className='' align='left' />\r\n                  </div>\r\n               </List.Content>\r\n               <List.Content as='h2'>{accountId}</List.Content>\r\n               <List.Content>@{accountId}</List.Content>\r\n            </List.Item>\r\n         ) : (\r\n            <List.Item>\r\n               <List.Content>\r\n                  <Header as='h3'>Enter a username to send:</Header>\r\n\r\n                  <CreateAccoungFormInput\r\n                     formLoader={formLoader}\r\n                     accountId={accountId}\r\n                     handleChangeAccountId={handleChangeAccountId}\r\n                     successMessage={successMessage}\r\n                     errorMessage={errorMessage}\r\n                  />\r\n               </List.Content>\r\n            </List.Item>\r\n         )}\r\n\r\n         <List.Item className='amount border-top'>\r\n            <Form.Input\r\n               type='number'\r\n               name='amount'\r\n               value={amount}\r\n               onChange={handleChange}\r\n               placeholder='0.00'\r\n               step='0.01'\r\n               min='0'\r\n            />\r\n         </List.Item>\r\n         <List.Item as='h5' className='near-tokens border-bottom'>\r\n            <Button className=''>NEAR TOKENS</Button>\r\n         </List.Item>\r\n         <List.Item as='' className='add-note border-bottom'>\r\n            <TextArea\r\n               name='note'\r\n               value={note}\r\n               onChange={handleChange}\r\n               placeholder='Add a note...'\r\n            />\r\n         </List.Item>\r\n         <List.Item as='' className='send-money'>\r\n            <Button\r\n               disabled={\r\n                  paramAccountId\r\n                     ? !(parseFloat(amount) > 0)\r\n                     : !(successMessage && parseFloat(amount) > 0)\r\n               }\r\n               onClick={handleNextStep}\r\n            >\r\n               SEND MONEY\r\n            </Button>\r\n         </List.Item>\r\n      </Form>\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneyFirstStep\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { List, Image, Button, Header } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      margin-top: 36px;\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 auto;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .amount {\r\n         margin-top: 0;\r\n         margin-bottom: 0px;\r\n         padding-top: 12px;\r\n         padding-bottom: 24px;\r\n\r\n         font-family: Bw Seido Round;\r\n         font-size: 72px;\r\n         font-weight: 500;\r\n         line-height: 72px;\r\n         color: #4a4f54;\r\n      }\r\n      .to {\r\n         width: 40px;\r\n         background: #fff;\r\n         margin: -20px auto 12px auto;\r\n      }\r\n\r\n      .with-note {\r\n         padding-top: 12px;\r\n\r\n         .expand-note {\r\n            color: #0072ce;\r\n            cursor: pointer;\r\n\r\n            :hover {\r\n               text-decoration: underline;\r\n            }\r\n         }\r\n      }\r\n\r\n      .send-money {\r\n         padding-top: 24px;\r\n         padding-bottom: 24px;\r\n         margin-top: 24px;\r\n         margin-bottom: 24px;\r\n\r\n         > .button {\r\n            width: 288px;\r\n            line-height: 60px;\r\n            border-radius: 30px;\r\n            border: solid 2px #5ace84;\r\n            font-size: 18px;\r\n            font-weight: 500;\r\n            letter-spacing: 2px;\r\n            text-align: center;\r\n            padding: 0 0 0 0;\r\n            background-color: #5ace84;\r\n            color: #fff;\r\n\r\n            :hover {\r\n               color: #5ace84;\r\n               background: #fff;\r\n            }\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         .to {\r\n            margin: -20px auto 12px auto;\r\n         }\r\n\r\n         &&& {\r\n            padding: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n\r\n            border: 0px;\r\n\r\n            .amount {\r\n               font-size: 48px !important;\r\n               padding-top: 0px;\r\n            }\r\n            .send-money {\r\n               padding-top: 14px;\r\n               padding-bottom: 14px;\r\n               margin-top: 14px;\r\n               margin-bottom: 14px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneySecondStep = ({\r\n   handleExpandNote,\r\n   expandNote,\r\n   note,\r\n   amount,\r\n   accountId\r\n}) => (\r\n   <CustomList className='box'>\r\n      <List.Item as='h2'>You are sending</List.Item>\r\n      <List.Item as='h1' className='amount border-bottom'>\r\n         {amount}\r\n         <span>Ⓝ</span>\r\n      </List.Item>\r\n      <List.Item className='to'>\r\n         <Header as='h2'>to</Header>\r\n      </List.Item>\r\n      <List.Item>\r\n         <div className='main-image'>\r\n            <Image src={AccountGreyImage} className='' align='left' />\r\n         </div>\r\n      </List.Item>\r\n      <List.Item as='h2'>{accountId}</List.Item>\r\n      <List.Item>@{accountId}</List.Item>\r\n      {note && (\r\n         <List.Item className='with-note '>\r\n            with note:\r\n            {expandNote ? (\r\n               <span className='color-black'>{note}</span>\r\n            ) : (\r\n               <span className='expand-note' onClick={handleExpandNote}>\r\n                  Expand note\r\n               </span>\r\n            )}\r\n         </List.Item>\r\n      )}\r\n      <List.Item as='' className='send-money border-top border-bottom'>\r\n         <Button as={Link} to='/contacts'>\r\n            CONFIRM & SEND\r\n         </Button>\r\n      </List.Item>\r\n      <List.Item>Once confirmed, this is not undoable.</List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneySecondStep\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport SendMoneyContainer from './SendMoneyContainer'\r\nimport SendMoneyFirstStep from './SendMoneyFirstStep'\r\nimport SendMoneySecondStep from './SendMoneySecondStep'\r\n\r\nclass SendMoney extends Component {\r\n   state = {\r\n      loader: false,\r\n      formLoader: false,\r\n      step: 1,\r\n      note: '',\r\n      expandNote: false,\r\n      paramAccountId: false,\r\n      accountId: '',\r\n      successMessage: false,\r\n      errorMessage: false,\r\n      amount: ''\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      const paramId = this.props.match.params.id\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      if (paramId) {\r\n         this.wallet\r\n            .checkAccount(paramId)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  paramAccountId: true,\r\n                  accountId: paramId\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  accountId: ''\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  loader: false\r\n               }))\r\n            })\r\n      } else {\r\n         this.setState(() => ({\r\n            loader: false\r\n         }))\r\n      }\r\n   }\r\n\r\n   handleNextStep = () => {\r\n      this.setState(state => ({\r\n         step: ++state.step\r\n      }))\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value\r\n      }))\r\n   }\r\n\r\n   handleExpandNote = () => {\r\n      this.setState(() => ({\r\n         expandNote: true\r\n      }))\r\n   }\r\n\r\n   handleChangeAccountId = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: false\r\n      }))\r\n\r\n      if (!this.wallet.isLegitAccountId(value)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         formLoader: true\r\n      }))\r\n\r\n      this.timeout && clearTimeout(this.timeout)\r\n\r\n      this.timeout = setTimeout(() => {\r\n         this.wallet\r\n            .checkAccount(value)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  successMessage: true,\r\n                  errorMessage: false\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  successMessage: false,\r\n                  errorMessage: true\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  formLoader: false\r\n               }))\r\n            })\r\n      }, 500)\r\n   }\r\n\r\n   render() {\r\n      const { step } = this.state\r\n\r\n      return (\r\n         <SendMoneyContainer>\r\n            {step === 1 && (\r\n               <SendMoneyFirstStep\r\n                  handleNextStep={this.handleNextStep}\r\n                  handleChange={this.handleChange}\r\n                  handleChangeAccountId={this.handleChangeAccountId}\r\n                  {...this.state}\r\n               />\r\n            )}\r\n            {step === 2 && (\r\n               <SendMoneySecondStep\r\n                  handleExpandNote={this.handleExpandNote}\r\n                  {...this.state}\r\n               />\r\n            )}\r\n         </SendMoneyContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({}) => ({})\r\n\r\nexport const SendMoneyWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(SendMoney))\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n         float: left;\r\n         width: auto !important;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column as='h1'>Account:</Grid.Column>\r\n            <Grid.Column as='h1' className='add'>\r\n               @eugenethedream\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default ProfileContainer\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Popup, Grid, Image } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      .row {\r\n         padding-top: 12px;\r\n         padding-bottom: 12px;\r\n      }\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .locked {\r\n         float: right;\r\n         border: 0px;\r\n         padding: 0 4px;\r\n         width: 32px;\r\n         height: 32px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n\r\n         img {\r\n            padding-top: 4px;\r\n         }\r\n      }\r\n\r\n      .row-title {\r\n         margin-top: 20px;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0px;\r\n         margin-right: 0px;\r\n\r\n         .column {\r\n            padding-left: 0px;\r\n            padding-right: 0px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileDetails = ({ loader }) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='border-top-bold'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            PROFILE\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' as='h6' textAlign='center' only='tablet'>\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column\r\n            computer='3'\r\n            tablet='3'\r\n            mobile='4'\r\n            className='color-black'\r\n         >\r\n            Username\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            @eugenethedream\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column computer='2' tablet='2' mobile='3' textAlign='right'>\r\n            <Popup\r\n               trigger={\r\n                  <div className='locked'>\r\n                     <Image src={AccountGreyImage} className='' align='left' />\r\n                  </div>\r\n               }\r\n               hoverable\r\n               position='left center'\r\n            >\r\n               <Popup.Header className='color-black'>\r\n                  Why is this locked?\r\n               </Popup.Header>\r\n               <Popup.Content>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                  Curabitur sit amet pretium mi, a molestie est.\r\n                  <a href='/'>Learn more</a>\r\n               </Popup.Content>\r\n            </Popup>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column\r\n            computer='3'\r\n            tablet='3'\r\n            mobile='4'\r\n            className='color-black'\r\n         >\r\n            Full Name\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            Evgeny Kuzyakov\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column\r\n            computer='3'\r\n            tablet='3'\r\n            mobile='4'\r\n            className='color-black'\r\n         >\r\n            Photo\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            <div className='main-image'>\r\n               <Image src={AccountGreyImage} className='' align='left' />\r\n            </div>\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className='border-top-bold row-title'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            CONTACT INFORMATION\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            computer='4'\r\n            tablet='4'\r\n            as='h6'\r\n            textAlign='center'\r\n            only='tablet'\r\n         >\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column\r\n            computer='3'\r\n            tablet='3'\r\n            mobile='4'\r\n            className='color-black'\r\n         >\r\n            Email\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            email@website.com\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column\r\n            computer='3'\r\n            tablet='3'\r\n            mobile='4'\r\n            className='color-black'\r\n         >\r\n            Phone\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            000-000-0000\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column\r\n            computer='3'\r\n            tablet='3'\r\n            mobile='4'\r\n            className='color-black'\r\n         >\r\n            Address\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            1234 N. West Ave., San Francisco, CA 98562\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className='border-top-bold row-title'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            FINANCIAL INFORMATION\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            computer='4'\r\n            tablet='4'\r\n            as='h6'\r\n            textAlign='center'\r\n            only='tablet'\r\n         >\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column\r\n            computer='3'\r\n            tablet='3'\r\n            mobile='4'\r\n            className='color-black'\r\n         >\r\n            Balance\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            2,300 Ⓝ\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Only Me\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default ProfileDetails\r\n","import React from 'react'\r\n\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nconst ProfileSection = ({ children }) => (\r\n   <Grid columns={2} stackable>\r\n      <Grid.Column computer={10}>{children[0]}</Grid.Column>\r\n      <Grid.Column computer={6}>\r\n         {children[1]}\r\n         {children[2]}\r\n      </Grid.Column>\r\n   </Grid>\r\n)\r\n\r\nexport default ProfileSection\r\n","import React from 'react'\r\n\r\nimport { List, Button, Image } from 'semantic-ui-react'\r\n\r\nimport TKeySwapImage from '../../images/icon-t-key-swap.svg'\r\nimport TContractImage from '../../images/icon-t-contract.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      margin-top: -1rem;\r\n      padding: 14px 4px 14px 14px;\r\n\r\n      .keys {\r\n         img {\r\n            width: 24px;\r\n            margin-top: 2px;\r\n         }\r\n      }\r\n      .account {\r\n         margin-top: 12px;\r\n\r\n         &-name {\r\n            margin-top: 12px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n         }\r\n         img {\r\n            width: 18px;\r\n            margin-top: 8px;\r\n            margin-right: 20px;\r\n         }\r\n         .download {\r\n            margin: 0px;\r\n         }\r\n         button {\r\n            width: 130px;\r\n            background-color: #0072ce;\r\n            border: 2px solid #0072ce;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n            margin-left: 20px;\r\n\r\n            :hover {\r\n               background-color: #fff;\r\n               color: #0072ce;\r\n            }\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n         &&& {\r\n            .account {\r\n               .download {\r\n                  float: none;\r\n                  margin: 0 0 0 16px;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         &&& {\r\n            margin-top: 20px;\r\n\r\n            .account {\r\n               button {\r\n                  margin-left: 8px;\r\n               }\r\n               .download {\r\n                  float: right;\r\n                  margin: 0 0 0 0;\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileYourKeys = ({ loader }) => (\r\n   <CustomList className='box'>\r\n      <List.Item className='keys'>\r\n         <List.Icon as={Image} src={TKeySwapImage} />\r\n         <List.Content as='h2'>Your Keys</List.Content>\r\n      </List.Item>\r\n      <List.Item className='account'>\r\n         <List.Content floated='right' className='download'>\r\n            <Button>DOWNLOAD</Button>\r\n         </List.Content>\r\n         <List.Content>\r\n            <Image align='left' src={TContractImage} />\r\n         </List.Content>\r\n         <List.Content className='account-name'>\r\n            @eugenethedream.key\r\n         </List.Content>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default ProfileYourKeys\r\n","import React from 'react'\r\n\r\nimport { List } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 8px 0 8px 20px;\r\n      margin-left: 28px;\r\n      margin-top: 20px;\r\n\r\n      .header {\r\n         line-height: 28px;\r\n      }\r\n      .content {\r\n         line-height: 20px;\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0px;\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileNotice = ({ loader }) => (\r\n   <CustomList className='border-left-bold'>\r\n      <List.Item className=''>\r\n         <List.Header>Never give your keys away</List.Header>\r\n         <List.Content>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\r\n            sit amet pretium mi, a molestie est.\r\n            <a href=''>Learn more</a>\r\n         </List.Content>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default ProfileNotice\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport ProfileContainer from './ProfileContainer'\r\nimport ProfileDetails from './ProfileDetails'\r\nimport ProfileSection from './ProfileSection'\r\nimport ProfileYourKeys from './ProfileYourKeys'\r\nimport ProfileNotice from './ProfileNotice'\r\n\r\nclass Profile extends Component {\r\n   state = {\r\n      loader: false\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n\r\n      return (\r\n         <ProfileContainer>\r\n            <ProfileSection>\r\n               <ProfileDetails />\r\n               <ProfileYourKeys />\r\n               <ProfileNotice />\r\n            </ProfileSection>\r\n         </ProfileContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const ProfileWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Profile))\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  \r\n  * {\r\n   box-sizing: inherit;\r\n   }\r\n\r\n   #root {\r\n      min-height: 100vh;\r\n   }\r\n   html {\r\n      box-sizing: border-box;\r\n      min-height: 100vh;\r\n      height: auto !important;\r\n\r\n      body {\r\n         margin: 0;\r\n         padding: 0;\r\n         min-height: 100vh !important;\r\n\r\n         position: relative;\r\n         color: #999;\r\n         font-family: \"benton-sans\",sans-serif;\r\n         font-weight: 400;\r\n         font-size: 14px !important;\r\n         \r\n\r\n      }\r\n   }\r\n\r\n   \r\n   \r\n   .pusher {\r\n      min-height: 100vh !important;\r\n      ${'' /* padding-bottom: 200px; */}\r\n   }\r\n\r\n   .pushable {\r\n      min-height: 100vh !important;\r\n      ${'' /* margin-bottom: -200px; */}\r\n   }\r\n\r\n\r\n   .App {\r\n      min-height: 100vh;\r\n      ${'' /* padding-bottom: 200px; */}\r\n   }\r\n   .App > div {\r\n      min-height: 100vh;\r\n   }\r\n   \r\n\r\n   a {\r\n      color: #0072ce;\r\n   }\r\n   a:hover {\r\n      color: #0072ce;\r\n      text-decoration: underline;\r\n   }\r\n\r\n\r\n\r\n   h1, .h1 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 48px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 100px;\r\n      color: #4a4f54;\r\n   }\r\n   h2, .h2 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 24px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 1.33;\r\n      color: #24272a !important;\r\n      margin: 0px;\r\n   }\r\n   h3, .h3 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 18px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 24px !important;\r\n      color: #24272a !important;\r\n      margin: 0px;\r\n   }\r\n   h4, .h4 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      line-height: 1.33;\r\n      color: #24272a;\r\n      margin: 0px;\r\n   }\r\n\r\n   h5, .h5 {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 13px !important;\r\n      line-height: 26px;\r\n      font-weight: 500;\r\n      color: #999999 !important;\r\n      margin: 0px;\r\n      letter-spacing: 1.8px;\r\n   }\r\n\r\n   h6, .h6 {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 12px !important;\r\n      line-height: 18px;\r\n      font-weight: 600;\r\n      color: #999999;\r\n      margin: 0px !important;\r\n      letter-spacing: 1.5px !important;\r\n   }\r\n\r\n\r\n\r\n   .font-small {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 12px !important;\r\n      color: #999 !important;\r\n      font-weight: 400 !important;\r\n\r\n      a {\r\n         font-family: \"benton-sans\",sans-serif !important;\r\n         font-size: 12px !important;\r\n         color: #999 !important;\r\n         font-weight: 500 !important;\r\n      }\r\n\r\n      a:hover {\r\n         color: #999 !important;\r\n      }\r\n   }\r\n\r\n   .ui.form input[type=text] {\r\n      font-family: \"benton-sans\",sans-serif;\r\n      font-size: 16px;\r\n   }\r\n\r\n\r\n\r\n\r\n   .bs-medium {\r\n      font-weight: 500;\r\n   }\r\n   .font-bold {\r\n      font-weight: 600;\r\n   }\r\n\r\n\r\n   .color-seafoam-blue {\r\n      color: #6ad1e3 !important;\r\n   }\r\n   .color-blue {\r\n      color: #0072ce !important;\r\n   }\r\n   .color-brown-grey {\r\n      color: #999;\r\n   }\r\n   .color-charcoal-grey {\r\n      color: #4a4f54 !important;\r\n   }\r\n   .color-black {\r\n      color: #24272a !important;\r\n\r\n      :hover {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n   .border-bottom {\r\n      border-bottom: 2px solid #f8f8f8 !important;\r\n   }\r\n   .border-bottom-bold {\r\n      border-bottom: 4px solid #e6e6e6 !important;\r\n   }\r\n   .border-bottom-light {\r\n      border-bottom: 1px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-top {\r\n      border-top: 2px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-top-bold {\r\n      border-top: 4px solid #e6e6e6 !important;\r\n   }\r\n   .border-top-light {\r\n      border-top: 1px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-left-bold {\r\n      border-left: 4px solid #f8f8f8 !important;\r\n   }\r\n\r\n\r\n   .border-right {\r\n      border-right: 2px solid #e6e6e6;\r\n   }\r\n   .border-right-light {\r\n      border-right: 1px solid #e6e6e6;\r\n   }\r\n   .background-lg {\r\n      background: #f8f8f8;\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   .button {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n   }\r\n\r\n\r\n   \r\n\r\n\r\n   .box {\r\n      border: 4px solid #e6e6e6;\r\n      border-radius: 8px;\r\n      margin-bottom: 0px;\r\n      position: relative;\r\n      min-height: 100px;\r\n      position: relative;\r\n\r\n      \r\n\r\n      .row {\r\n         padding: 0px !important;\r\n      }\r\n      .column {\r\n         padding: 24px 10px 20px 30px !important;\r\n         word-wrap: break-word;\r\n      }\r\n\r\n      .segment {\r\n         padding: 30px 0 20px 0 !important;\r\n      }\r\n\r\n      .list {\r\n\r\n         > .item {\r\n            padding: 0px !important;\r\n\r\n            > img {\r\n               top: -4px;\r\n               margin: 0 10px;\r\n            }\r\n\r\n            > img.transarrow {\r\n               width: 11px !important;\r\n            }\r\n         }\r\n         > h5.item {\r\n            top: -4px;\r\n         }\r\n      } \r\n   }\r\n\r\n\r\n\r\n   .copy-image {\r\n      width: 18px !important;\r\n      margin: 0px 10px 0 0px !important;\r\n      top: -4px !important;\r\n   }\r\n\r\n\r\n\r\n   .balance-image {\r\n      font-size: 20px !important;\r\n      font-weight: 100 !important;\r\n\r\n      &-big {\r\n         font-size: 32px !important;\r\n         font-weight: 100 !important;\r\n      }\r\n   }\r\n   \r\n\r\n\r\n   .transactions-block .item {\r\n      margin-left: 10px !important;\r\n   }\r\n\r\n\r\n   .page-title {\r\n      ${'' /* padding-top: 20px !important; */}\r\n\r\n      ${\r\n         '' /* > .column {\r\n         padding: 0px !important;\r\n         margin: 0px !important;\r\n      } */\r\n      }\r\n   }\r\n\r\n   .icon-tiny {\r\n      height: 12px !important;\r\n      margin: 6px 6px 0 0;\r\n      padding: 0px !important;\r\n      float: left;\r\n   }\r\n\r\n\r\n   .hide {\r\n      display: none !important;\r\n   }\r\n\r\n\r\n   \r\n\r\n\r\n   \r\n   \r\n\r\n\r\n\r\n\r\n   .column-icon-s {\r\n      width: 12px !important;\r\n      display: inline-block !important;\r\n      margin: -2px 10px 0 0;\r\n   }\r\n\r\n   .column-icon-r {\r\n      width: 12px !important;\r\n      display: inline-block !important;\r\n      margin: 2px 0 0 10px;\r\n   }\r\n\r\n\r\n   .App-section {\r\n      width: 860px;\r\n      margin: auto;\r\n      margin-top: 10px;\r\n      margin-bottom: 20px;\r\n   }\r\n\r\n   .App-error-message {\r\n      width: 100%;\r\n      text-align: center;\r\n      display: inline-block;\r\n      margin: auto;\r\n   }\r\n\r\n   .block-element {\r\n      padding-right: 0px !important;\r\n   }\r\n\r\n   \r\n\r\n   .ui.list .list>.item .header, .ui.list>.item .header {\r\n      font-family: \"benton-sans\",sans-serif;\r\n      \r\n   }\r\n   .ui.popup>.header, .ui.popup {\r\n      color: #999;\r\n      font-family: \"benton-sans\",sans-serif;\r\n      font-weight: 400;\r\n      font-size: 14px !important;\r\n   }\r\n   .ui.popup {\r\n      border: 1px solid #eee;\r\n   }\r\n   .ui.left.center.popup:before {\r\n      box-shadow: 1px -1px 0 0 #eee;\r\n   }\r\n   .ui.bottom.right.popup:before {\r\n      box-shadow: -1px -1px 0 0 #eee;\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   @media screen and (max-width: 767px) {\r\n      html {\r\n         body {\r\n            ${'' /* font-size: 12px !important; */}\r\n         }\r\n      }\r\n\r\n      \r\n      h1, .h1 {\r\n         font-size: 38px !important;\r\n         font-weight: 500;\r\n         line-height: 50px;\r\n         color: #4a4f54;\r\n      }\r\n      h2, .h2 {\r\n         font-size: 24px !important;\r\n         font-weight: 600;\r\n         line-height: 1.33;\r\n         margin: 0px;\r\n      }\r\n      h3, .h3 {\r\n         font-size: 16px !important;\r\n         font-weight: 500;\r\n         line-height: 1.33;\r\n         margin: 0px;\r\n      }\r\n      \r\n      h6, .h6 {\r\n         ${\r\n            '' /* font-size: 10px !important;\r\n         line-height: 18px !important;\r\n         font-weight: 400 !important;\r\n         margin: 0px !important;\r\n         letter-spacing: 2px !important; */\r\n         }\r\n      }\r\n\r\n      .box .column {\r\n         padding: 16px 10px !important;\r\n      }\r\n\r\n      .recent-x .row {\r\n         margin-left: 10px;\r\n      }\r\n\r\n      \r\n\r\n      .dashboard-list .dropdown-image {\r\n         display: none !important;\r\n      }\r\n      \r\n      .dashboard-list .main-image {\r\n         border: 1px solid #e6e6e6 !important;\r\n         background: #fff;\r\n         border-radius: 14px;\r\n         padding: 6px;\r\n         width: 26px !important;\r\n      }\r\n\r\n      .dashboard-recent-blocks {\r\n         margin: 0 20px !important;\r\n         padding: 0 0 0 10px !important;\r\n      }\r\n   }\r\n\r\n\r\n\r\n   \r\n`\r\n","import React, { Component } from 'react'\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport '../index.css'\r\n\r\nimport ResponsiveContainer from './responsive/ResponsiveContainer'\r\nimport Footer from './common/Footer'\r\nimport DashboardDetailWithRouter from './dashboard/DashboardDetail'\r\nimport { CreateAccountWithRouter } from './accounts/CreateAccount'\r\nimport { LoginWithRouter } from './login/Login'\r\nimport { ContactsWithRouter } from './contacts/Contacts'\r\nimport { AuthorizedAppsWithRouter } from './authorized-apps/AuthorizedApps'\r\nimport { SendMoneyWithRouter } from './send-money/SendMoney'\r\nimport { ProfileWithRouter } from './profile/Profile'\r\n\r\nimport { ThemeProvider } from 'styled-components'\r\nimport GlobalStyle from './GlobalStyle'\r\nconst theme = {}\r\n\r\nconst PATH_PREFIX = process.env.PUBLIC_URL\r\n\r\nclass Routing extends Component {\r\n   render() {\r\n      return (\r\n         <div className='App'>\r\n            <GlobalStyle />\r\n\r\n            <Router basename={PATH_PREFIX}>\r\n               <ThemeProvider theme={theme}>\r\n                  <ResponsiveContainer>\r\n                     <Switch>\r\n                        <Route\r\n                           exact\r\n                           path='/'\r\n                           component={DashboardDetailWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/create'\r\n                           component={CreateAccountWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/login'\r\n                           component={LoginWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/contacts'\r\n                           component={ContactsWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/authorized-apps'\r\n                           component={AuthorizedAppsWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/send-money/:id?'\r\n                           component={SendMoneyWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/profile'\r\n                           component={ProfileWithRouter}\r\n                        />\r\n\r\n                        <Route component={DashboardDetailWithRouter} />\r\n                     </Switch>\r\n                     <Footer />\r\n                  </ResponsiveContainer>\r\n               </ThemeProvider>\r\n            </Router>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Routing\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport reducer from './reducers'\nimport middleware from './middleware'\n\nimport Routing from './components/Routing'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n   <Provider store={store}>\n      <Routing />\n   </Provider>,\n   document.getElementById('root')\n)\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/icon-contacts-grey.c7048ab4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized-grey.4d2fc992.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-contract.35047442.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-right.2c9f3083.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-check-blue.6dc3bbf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-transfer.f726da93.svg\";"],"sourceRoot":""}