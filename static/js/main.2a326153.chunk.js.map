{"version":3,"sources":["images/icon-contacts.svg","images/icon-authorized.svg","images/icon-logout.svg","images/wallet.png","images/icon-account.svg","images/icon-recent.svg","images/icon-activity.svg","images/icon-arrow-right.svg","images/icon-t-transfer.svg","images/icon-m-transaction.svg","images/icon-account-grey.svg","images/icon-mobile-menu.svg","images/icon-help.svg","images/near.svg","images/icon-t-contract.svg","images/icon-arrow-grn.svg","images/icon-arrow-blk.svg","images/icon-activity-grey.svg","images/icon-authorized-grey.svg","images/icon-contacts-grey.svg","images/icon-t-stake.svg","images/near_logo.svg","images/icon-deny.svg","images/icon-app-default.svg","images/icon-authorize.svg","images/icon-add-blue.svg","images/icon-arrow-up.svg","images/icon-m-filter.svg","images/icon-arrow-left.svg","images/icon-m-search.svg","images/icon-lock.svg","images/icon-keys-grey.svg","images/icon-doc-grey.svg","images/footer-nearkat.svg","images/icon-check-blue.svg","utils/wallet.js","actions/account.js","reducers/account.js","middleware/index.js","components/responsive/PopupMenuTrigger.js","components/responsive/MobileView.js","components/responsive/DesktopPopup.js","components/responsive/DesktopView.js","components/responsive/ResponsiveContainer.js","components/common/Footer.js","components/dashboard/DashboardOtherAssets.js","components/dashboard/DashboardContainer.js","components/dashboard/DashboardNotice.js","components/dashboard/DashboardSection.js","components/dashboard/ListItem.js","components/dashboard/DashboardActivity.js","components/dashboard/DashboardDetail.js","components/accounts/CreateAccountSection.js","components/accounts/CreateAccoungFormInput.js","components/accounts/CreateAccountForm.js","components/common/Disclaimer.js","components/accounts/NearInfo.js","components/accounts/CreateAccountContainer.js","components/accounts/CreateAccount.js","components/common/RequestStatusBox.js","components/accounts/AccountFormSection.js","components/accounts/SetRecoveryInfoForm.js","components/accounts/SetRecoveryInfoContainer.js","components/accounts/SetRecoveryInfo.js","components/accounts/RecoverAccountForm.js","components/accounts/RecoverAccountContainer.js","components/accounts/RecoverAccount.js","components/login/LoginContainer.js","components/login/LoginForm.js","components/login/Login.js","components/pagination/PaginationTab.js","components/pagination/PaginationPaging.js","components/pagination/PaginationSummary.js","components/common/Search.js","components/pagination/PaginationSortBy.js","components/pagination/PaginationBlock.js","components/contacts/ContactsContainer.js","components/contacts/Contacts.js","components/authorized-apps/AuthorizedAppsContainer.js","components/authorized-apps/AuthorizedApps.js","components/send-money/SendMoneyContainer.js","components/send-money/SendMoneyFirstStep.js","components/send-money/SendMoneySecondStep.js","components/send-money/SendMoneyThirdStep.js","components/send-money/SendMoney.js","components/profile/ProfileContainer.js","components/profile/ProfileDetails.js","components/profile/ProfileSection.js","components/profile/ProfileYourKeys.js","components/profile/ProfileNotice.js","components/profile/Profile.js","components/GlobalStyle.js","components/Routing.js","serviceWorker.js","index.js","reducers/index.js","images/icon-arrow-down.svg","images/icon-problems.svg","images/icon-close.svg","images/icon-send.svg"],"names":["module","exports","__webpack_require__","p","ACCOUNT_HELPER_URL","CONTRACT_CREATE_ACCOUNT_URL","concat","NODE_URL","KEY_WALLET_ACCOUNTS","KEY_UNIQUE_PREFIX","KEY_WALLET_TOKENS","KEY_ACTIVE_ACCOUNT_ID","ACCOUNT_ID_REGEX","Wallet","Object","classCallCheck","this","key_store","nearlib","BrowserLocalStorageKeystore","near","Near","createDefaultConfig","account","Account","nearClient","accounts","JSON","parse","localStorage","getItem","tokens","accountId","createClass","key","value","setItem","stringify","save","app_url","app_title","contract_id","token","possible","i","charAt","Math","floor","random","length","isLegitAccountId","account_id","test","_sendTransaction","asyncToGenerator","regenerator_default","a","mark","_callee","senderId","receiverId","methodName","amount","args","wrap","_context","prev","next","scheduleFunctionCall","abrupt","sent","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","options","undefined","history","param","next_url","window","location","search","reset_accounts","url","WALLET_CREATE_NEW_ACCOUNT_URL","keys","map","encodeURIComponent","push","replace","isEmpty","redirectToCreateAccount","_loadAccount","_callee2","_context2","Error","viewAccount","_x6","_x7","_checkAccount","_callee3","_context3","_x8","_checkNewAccount","_callee4","remoteAccount","_context4","t0","_x9","_createNewAccount","_callee5","keyPair","_this","_context5","KeyPair","fromRandomSeed","Promise","resolve","reject","data","newAccountId","newAccountPublicKey","getPublicKey","xhr","XMLHttpRequest","open","setRequestHeader","onload","status","setKey","catch","console","log","responseText","send","_x10","_addAccessKey","_callee6","contractId","publicKey","successUrl","addAccessKeyResponse","result","parsedUrl","redirectUrl","_context6","addAccessKey","waitForTransactionResult","URL","searchParams","set","href","_x11","_x12","_x13","_x14","addEventListener","receiveMessage","bind","_processTransactionMessage","_callee7","action","app_data","hash","signature","_context7","parseInt","sendTransaction","signer","signHash","_x15","_x16","phoneNumber","sendJson","securityCode","event","e","request_id","reply","d","source","postMessage","origin","processTransactionMessage","then","success","error","REFRESH_ACCOUNT","LOADER_ACCOUNT","REFRESH_URL","handleRefreshAccount","wallet","dispatch","getState","redirectIfEmpty","getAccountId","type","loader","loadAccount","v","authToken","newAccessToken","stake","nonce","code_hash","message","indexOf","clearState","handleRefreshUrl","title","success_url","failure_url","public_key","createActions","REQUEST_CODE","requestCode","successCode","errorCode","VALIDATE_CODE","validateCode","initialState","formLoader","sentSms","requestResultReducer","handleActions","defineProperty","combineActions","state","_ref2","payload","meta","objectSpread","requestStatus","messageCode","reducer","_ref3","ready","reduceReducers","_ref","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","readyStatePromise","store","makeAction","newAction","assign","CustomDiv","styled","_templateObject","PopupMenuTrigger","handleClick","_ref$dropdown","dropdown","react_default","createElement","onClick","className","style","float","Image","src","AccountGreyImage","MobileMenuImage","CloseImage","ArrowDownImage","Loader","active","inline","size","CustomResponsive","Responsive","MobileView_templateObject","getWidth","onlyTablet","minWidth","innerWidth","MobileView","handleDropdown","setState","handleSelectAccount","selectAccount","props","redirectCreateAccount","_this2","maxWidth","Segment","basic","Menu","borderless","react_router_dom","to","LogoImage","responsive_PopupMenuTrigger","Item","RecentImage","ActivityImage","SendImage","ContactsGreyImage","AuthorizedGreyImage","LogoutImage","List","as","filter","Button","children","Component","defaultProps","mapDispatchToProps","connect","withRouter","CustomPopup","Popup","DesktopPopup_templateObject","DesktopPopup","handleToggle","popupOpen","trigger","position","Icon","AccountImage","Content","Link","DesktopView_templateObject","DesktopView","activeItem","hideFixedMenu","fixed","showFixedMenu","handleItemClick","name","DesktopView_CustomResponsive","onlyComputer","Visibility","once","onBottomPassed","onBottomPassedReverse","HelpImage","responsive_DesktopPopup","ResponsiveContainer","react","responsive_DesktopView","responsive_MobileView","FooterGrid","Grid","Footer_templateObject","columns","Column","textAlign","verticalAlign","computer","tablet","mobile","Group","LogoFooterImage","only","floated","NearkatImage","CustomGrid","DashboardOtherAssets_templateObject","TContractImage","DashboardOtherAssets","Row","horizontal","Header","Description","CustomContainer","Container","DashboardContainer_templateObject","ArrowGrnImage","ArrowRightImage","DashboardContainer","dashboard_DashboardOtherAssets","CustomList","DashboardNotice_templateObject","DashboardNotice","handleNotice","DashboardSection","notice","stackable","dashboard_DashboardNotice","CustomGridRow","ListItem_templateObject","ListItem","row","_ref$wide","wide","_ref$showSub","showSub","toggleShowSub","showSubOpen","align","ArrowBlkImage","ArrowRight","DashboardActivity_templateObject","DashboardActivity","image","activity","DashboardActivity_CustomGrid","width","Dimmer","inverted","dashboard_ListItem","DashboardDetail","authorizedaps","newcontacts","setTimeout","_","TTransferImage","TStakeImage","_this$state","dashboard_DashboardContainer","dashboard_DashboardSection","dashboard_DashboardActivity","activityGreyImage","CreateAccountSection_templateObject","CreateAccountSection","successMessage","errorMessage","CreateAccountSection_CustomGrid","CustomFormInput","Form","Input","CreateAccoungFormInput_templateObject","ProblemsImage","CheckBlueImage","CreateAccoungFormInput","handleChangeAccountId","loading","onChange","placeholder","AccountForm","CreateAccountForm_templateObject","CreateAccountForm","handleSubmit","handleRecaptcha","autoComplete","onSubmit","accounts_CreateAccoungFormInput","onlyMobile","lib_es","sitekey","disabled","DisclaimerGrid","Disclaimer_templateObject","Disclaimer","NearInfo_templateObject","NearInfo","NearInfo_CustomList","NearLogoImage","CreateAccountContainer_templateObject","CreateAccountContainer","CreateAccountContainer_CustomContainer","accounts_NearInfo","common_Disclaimer","CreateAccount","componentDidMount","timeout","clearTimeout","checkNewAccount","finally","preventDefault","createNewAccount","accounts_CreateAccountContainer","accounts_CreateAccountSection","accounts_CreateAccountForm","CreateAccountWithRouter","RequestStatusBoxGrid","RequestStatusBox_templateObject","RequestStatusBox","AccountFormSection","common_RequestStatusBox","RecoveryInfoForm","SetRecoveryInfoForm_templateObject","SetRecoveryInfoForm","isLegit","handleChange","Field","react_phone_number_input","SetRecoveryInfoContainer_templateObject","SetRecoveryInfoContainer","SetRecoveryInfoContainer_CustomContainer","SetRecoveryInfo","isLegitField","nextUrl","isValidPhoneNumber","trim","match","combinedState","accounts_SetRecoveryInfoContainer","accounts_AccountFormSection","accounts_SetRecoveryInfoForm","SetRecoveryInfoWithRouter","_ref4","_ref5","params","RecoverAccountForm_templateObject","RecoverAccountForm","RecoverAccountForm_RecoveryInfoForm","RecoverAccountContainer_templateObject","RecoverAccountContainer","RecoverAccountContainer_CustomContainer","RecoverAccount","accounts_RecoverAccountContainer","accounts_RecoverAccountForm","RecoverAccountWithRouter","LoginContainer_templateObject","DenyImage","LoginContainer","appTitle","LoginContainer_CustomContainer","Dimmable","AuthorizeImage","AppDefaultImage","largeScreen","LoginForm_templateObject","ArrowUpImage","AddBlueImage","handleOnClick","handleDeny","handleAllow","LoginForm_CustomGrid","Login","login_LoginContainer","login_LoginForm","LoginWithRouter","PaginationTabList","PaginationTab_templateObject","LEFT_PAGE","RIGHT_PAGE","range","from","step","PaginationTab","_Component","_getPrototypeOf2","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","call","currentPage","gotoPage","page","onPageChanged","evt","target","blur","handleMoveLeft","pageNeighbors","handleMoveRight","fetchPageNumbers","totalPages","getTotalPages","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","inherits","ceil","totalRecords","pageLimit","initialPage","index","circular","ArrowLeftImage","onPageChange","PaginationPagingList","PaginationPaging_templateObject","pagingTypes","PaginationFilter","handleOnClickPaging","pagingValue","pagingDropdown","handlePagingDropdownClick","backgroundImage","ArrowDown","selection","PaginationSummary","pageNumber","SearchForm","Search_templateObject","MSearchImage","Search","PaginationFilterList","PaginationSortBy_templateObject","filterTypesByType","handleDropdownClick","img","PaginationBlockGrid","PaginationBlock_templateObject","MTransactionImage","PaginationBlock","dropdownType","filterTypes","TransactionFilter","buttonRadio","buttonRadioClick","_this$props","_this$props$pageNumbe","_this$props$showSub","subPage","_this$props2","_this$props2$totalRec","_this$props2$pageLimi","_this$props2$initialP","_this$props2$onPageCh","_this$props2$pageNeig","PaginationSortBy","common_Search","backgroundColor","PaginationPaging","pagination_PaginationSummary","PaginationTab_PaginationTab","ContactsContainer_templateObject","ContactsContainer","ContactsContainer_CustomContainer","Contacts","_this3","contacts_ContactsContainer","pagination_PaginationBlock","ContactsWithRouter","AuthorizedAppsContainer_templateObject","AuthorizedAppsContainer","AuthorizedAppsContainer_CustomContainer","AuthorizedApps","authorized_apps_AuthorizedAppsContainer","AuthorizedAppsWithRouter","SendMoneyContainer_templateObject","SendMoneyContainer","SendMoneyContainer_CustomContainer","SendMoneyFirstStep_templateObject","SendMoneyFirstStep","handleNextStep","note","paramAccountId","SendMoneyFirstStep_CustomList","min","TextArea","parseFloat","SendMoneySecondStep_templateObject","SendMoneySecondStep","handleExpandNote","expandNote","SendMoneySecondStep_CustomList","SendMoneyThirdStep_templateObject","SendMoneyThirdStep","SendMoneyThirdStep_CustomList","SendMoney","checkAccount","paramId","id","send_money_SendMoneyContainer","send_money_SendMoneyFirstStep","send_money_SendMoneySecondStep","send_money_SendMoneyThirdStep","SendMoneyWithRouter","ProfileContainer_templateObject","ProfileContainer","ProfileContainer_CustomContainer","ProfileDetails_templateObject","ProfileDetails","ProfileDetails_CustomGrid","LockImage","hoverable","ProfileSection","ProfileYourKeys_templateObject","ProfileYourKeys","ProfileYourKeys_CustomList","KeysGreyImage","DocGreyImage","ProfileNotice_templateObject","ProfileNotice","ProfileNotice_CustomList","Profile","profile_ProfileContainer","profile_ProfileSection","profile_ProfileDetails","profile_ProfileYourKeys","profile_ProfileNotice","ProfileWithRouter","createGlobalStyle","GlobalStyle_templateObject","theme","Routing","GlobalStyle","esm","basename","process","styled_components_browser_esm","responsive_ResponsiveContainer","react_router","exact","path","component","DashboardDetailWithRouter","Footer","Boolean","hostname","createBrowserHistory","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","createMiddleware","ReactDOM","render","es","components_Routing","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.2a326153.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-contacts.f6e4afac.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized.2f2edb66.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-logout.9cae8fb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet.89d47110.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-account.ab010182.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-recent.83086272.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity.b48f419e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-right.2c9f3083.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-transfer.f726da93.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-transaction.23b32201.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-account-grey.4d7da491.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-mobile-menu.1acfd8f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-help.f6c0707a.svg\";","module.exports = __webpack_public_path__ + \"static/media/near.584de59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-contract.35047442.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-grn.eaf2a8e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-blk.79cca70c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity-grey.c5c92b3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized-grey.4d2fc992.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts-grey.c7048ab4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-stake.cc91ad52.svg\";","module.exports = __webpack_public_path__ + \"static/media/near_logo.f25a0b86.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-deny.6946f17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-app-default.11c1df80.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorize.377da011.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-add-blue.be7039c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-up.b5be78eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-filter.1f33be14.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-left.5e7a861f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-search.2cea301b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lock.255000ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-keys-grey.a339e56f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-doc-grey.888e4b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/footer-nearkat.3083dec6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-check-blue.6dc3bbf5.svg\";","import nearlib from 'nearlib'\r\nimport sendJson from 'fetch-send-json'\r\n\r\nconst WALLET_CREATE_NEW_ACCOUNT_URL = `/create/`\r\n\r\nconst ACCOUNT_HELPER_URL = 'https://studio.nearprotocol.com/contract-api'\r\nconst CONTRACT_CREATE_ACCOUNT_URL = `${ACCOUNT_HELPER_URL}/account`\r\nconst NODE_URL = 'https://studio.nearprotocol.com/devnet'\r\n\r\nconst KEY_UNIQUE_PREFIX = '_4:'\r\nconst KEY_WALLET_ACCOUNTS = KEY_UNIQUE_PREFIX + 'wallet:accounts_v2'\r\nconst KEY_WALLET_TOKENS = KEY_UNIQUE_PREFIX + 'wallet:tokens_v2'\r\nconst KEY_ACTIVE_ACCOUNT_ID = KEY_UNIQUE_PREFIX + 'wallet:active_account_id_v2'\r\n\r\nconst ACCOUNT_ID_REGEX = /^[a-z0-9@._-]{5,32}$/\r\n\r\nexport class Wallet {\r\n   constructor() {\r\n      this.key_store = new nearlib.BrowserLocalStorageKeystore()\r\n      this.near = nearlib.Near.createDefaultConfig(NODE_URL)\r\n      this.account = new nearlib.Account(this.near.nearClient);\r\n      this.accounts = JSON.parse(\r\n         localStorage.getItem(KEY_WALLET_ACCOUNTS) || '{}'\r\n      )\r\n      this.tokens = JSON.parse(localStorage.getItem(KEY_WALLET_TOKENS) || '{}')\r\n      this.accountId = localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID) || ''\r\n   }\r\n\r\n   save() {\r\n      localStorage.setItem(KEY_ACTIVE_ACCOUNT_ID, this.accountId)\r\n      localStorage.setItem(KEY_WALLET_ACCOUNTS, JSON.stringify(this.accounts))\r\n      localStorage.setItem(KEY_WALLET_TOKENS, JSON.stringify(this.tokens))\r\n   }\r\n\r\n   getAccountId() {\r\n      return this.accountId\r\n   }\r\n\r\n   selectAccount(accountId) {\r\n      if (!(accountId in this.accounts)) {\r\n         return false\r\n      }\r\n      this.accountId = accountId\r\n      this.save()\r\n   }\r\n\r\n   newAccessToken(app_url, app_title, contract_id) {\r\n      var token = ''\r\n      var possible =\r\n         'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n\r\n      for (var i = 0; i < 32; i++) {\r\n         token += possible.charAt(Math.floor(Math.random() * possible.length))\r\n      }\r\n\r\n      if (!this.isLegitAccountId(contract_id)) {\r\n         contract_id = ''\r\n      }\r\n\r\n      this.tokens[token] = {\r\n         app_url,\r\n         app_title,\r\n         contract_id,\r\n         account_id: this.accountId\r\n      }\r\n      this.save()\r\n      return token\r\n   }\r\n\r\n   isLegitAccountId(accountId) {\r\n      return ACCOUNT_ID_REGEX.test(accountId)\r\n   }\r\n\r\n   async sendTransaction(senderId, receiverId, methodName, amount, args) {\r\n      return await this.near.scheduleFunctionCall(\r\n         amount,\r\n         senderId,\r\n         receiverId,\r\n         methodName,\r\n         args || {}\r\n      )\r\n   }\r\n\r\n   redirectToCreateAccount(options = {}, history) {\r\n      const param = {\r\n         next_url: window.location.search\r\n      }\r\n      if (options.reset_accounts) {\r\n         param.reset_accounts = true\r\n      }\r\n      //  let url = WALLET_CREATE_NEW_ACCOUNT_URL + \"?\" + $.param(param)\r\n      let url =\r\n         WALLET_CREATE_NEW_ACCOUNT_URL +\r\n         '?' +\r\n         Object.keys(param).map(\r\n            (p, i) =>\r\n               `${i ? '&' : ''}${encodeURIComponent(p)}=${encodeURIComponent(\r\n                  param[p]\r\n               )}`\r\n         )\r\n      history ? history.push(url) : window.location.replace(url)\r\n   }\r\n\r\n   isEmpty() {\r\n      return !this.accounts || !Object.keys(this.accounts).length\r\n   }\r\n\r\n   redirectIfEmpty(history) {\r\n      if (this.isEmpty()) {\r\n         this.redirectToCreateAccount({}, history)\r\n      }\r\n   }\r\n\r\n   async loadAccount(accountId, history) {\r\n      if (!(accountId in this.accounts)) {\r\n         throw new Error('Account ' + accountId + \" doesn't exist.\")\r\n      }\r\n      return await this.near.nearClient.viewAccount(accountId)\r\n   }\r\n\r\n   async checkAccount(accountId) {\r\n      if (accountId !== this.accountId) {\r\n         return await this.near.nearClient.viewAccount(accountId)\r\n      } else {\r\n         throw new Error('You are logged into account ' + accountId + ' .')\r\n      }\r\n   }\r\n\r\n   async checkNewAccount(accountId) {\r\n      if (accountId in this.accounts) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let remoteAccount = null\r\n      try {\r\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\r\n      } catch (e) {\r\n         // expected\r\n      }\r\n      if (!!remoteAccount) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n   }\r\n\r\n   async createNewAccount(accountId) {\r\n      if (accountId in this.accounts) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let remoteAccount = null\r\n      try {\r\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\r\n      } catch (e) {\r\n         // expected\r\n      }\r\n      if (!!remoteAccount) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let keyPair = await nearlib.KeyPair.fromRandomSeed();\r\n      return await new Promise((resolve, reject) => {\r\n         let data = JSON.stringify({\r\n            newAccountId: accountId,\r\n            newAccountPublicKey: keyPair.getPublicKey()\r\n         })\r\n\r\n         let xhr = new XMLHttpRequest()\r\n         xhr.open('POST', CONTRACT_CREATE_ACCOUNT_URL)\r\n         xhr.setRequestHeader('Content-Type', 'application/json')\r\n         xhr.onload = () => {\r\n            if (xhr.status === 200) {\r\n               this.key_store.setKey(accountId, keyPair).catch(console.log)\r\n               this.accounts[accountId] = true\r\n               this.accountId = accountId\r\n               this.save()\r\n               resolve(xhr)\r\n            } else if (xhr.status !== 200) {\r\n               reject(xhr.responseText)\r\n            }\r\n         }\r\n         xhr.send(data)\r\n      })\r\n   }\r\n\r\n   async addAccessKey(accountId, contractId, publicKey, successUrl) {\r\n      const addAccessKeyResponse = await this.account.addAccessKey(\r\n         accountId,\r\n         publicKey,\r\n         contractId,\r\n         '',  // methodName\r\n         '',  // fundingOwner\r\n         0,  // fundingAmount\r\n      );\r\n      try {\r\n         const result = await this.near.waitForTransactionResult(addAccessKeyResponse);\r\n         const parsedUrl = new URL(successUrl);\r\n         parsedUrl.searchParams.set('account_id', accountId);\r\n         parsedUrl.searchParams.set('public_key', publicKey);\r\n         const redirectUrl = parsedUrl.href;\r\n         if (result.status === \"Completed\") {\r\n            window.location.href = redirectUrl;\r\n         }\r\n      } catch (e) {\r\n         // TODO: handle errors\r\n         console.log(\"Error on adding access key \", e);\r\n      }\r\n   }\r\n\r\n   subscribeForMessages() {\r\n      //  window.addEventListener(\"message\", $.proxy(this.receiveMessage, this), false);\r\n      window.addEventListener('message', this.receiveMessage.bind(this), false)\r\n   }\r\n\r\n   clearState() {\r\n      this.accounts = {}\r\n      this.tokens = {}\r\n      this.accountId = ''\r\n      this.save()\r\n   }\r\n\r\n   async processTransactionMessage(action, data) {\r\n      let token = data['token'] || ''\r\n      if (!(token in this.tokens)) {\r\n         // Unknown token.\r\n         throw new Error('The token ' + token + ' is not found ')\r\n      }\r\n      let app_data = this.tokens[token]\r\n      let accountId = app_data['account_id']\r\n      if (!(accountId in this.accounts)) {\r\n         // Account is no longer authorized.\r\n         throw new Error(\r\n            'The account ' + accountId + ' is not part of the wallet anymore.'\r\n         )\r\n      }\r\n      let contract_id = app_data['contract_id']\r\n      let receiverId = data['receiver_id'] || contract_id\r\n      if (receiverId !== contract_id || !this.isLegitAccountId(receiverId)) {\r\n         // Bad receiver account ID or it doesn't match contract id.\r\n         throw new Error(\r\n            \"Bad receiver's account ID ('\" +\r\n               receiverId +\r\n               \"') or it doesn't match the authorized contract id\"\r\n         )\r\n      }\r\n      let amount = parseInt(data['amount']) || 0\r\n      if (amount !== 0) {\r\n         // Automatic authorization denied since for amounts greater than 0.\r\n         throw new Error('Transaction amount should be 0.')\r\n      }\r\n      let methodName = data['methodName'] || ''\r\n      if (!methodName) {\r\n         // Method name can't be empty since the amount is 0.\r\n         throw new Error(\"Method name can't be empty since the amount is 0\")\r\n      }\r\n      let args = data['args'] || {}\r\n      if (action === 'send_transaction') {\r\n         // Sending the transaction on behalf of the accountId\r\n         return await this.sendTransaction(\r\n            accountId,\r\n            receiverId,\r\n            methodName,\r\n            amount,\r\n            args\r\n         )\r\n      } else if (action === 'sign_transaction') {\r\n         // Signing the provided hash of the transaction. It's a security issue here.\r\n         // In the future we would sign the transaction above and don't depend on the given hash.\r\n         let hash = data['hash'] || ''\r\n         let signature = await this.near.nearClient.signer.signHash(\r\n            hash,\r\n            accountId\r\n         )\r\n         return signature\r\n      } else {\r\n         throw new Error('Unknown action')\r\n      }\r\n   }\r\n\r\n   requestCode(phoneNumber, accountId) {\r\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/requestCode`);\r\n   }\r\n\r\n   validateCode(phoneNumber, accountId, securityCode) {\r\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/validateCode`, { securityCode });\r\n   }\r\n\r\n   receiveMessage(event) {\r\n      let data\r\n      try {\r\n         data = JSON.parse(event.data)\r\n      } catch (e) {\r\n         // Silently dying.\r\n         return\r\n      }\r\n      const action = data['action'] || ''\r\n      if (action !== 'send_transaction' && action !== 'sign_transaction') {\r\n         // Unknown action, skipping silently.\r\n         return\r\n      }\r\n      const request_id = data['request_id'] || ''\r\n\r\n      let reply = d => event.source.postMessage(JSON.stringify(d), event.origin)\r\n\r\n      this.processTransactionMessage(action, data)\r\n         .then(result => {\r\n            console.log('Wallet: OK ' + action)\r\n            reply({\r\n               success: true,\r\n               request_id,\r\n               result\r\n            })\r\n         })\r\n         .catch(error => {\r\n            console.error('Wallet: failed to ' + action, error)\r\n            reply({\r\n               success: false,\r\n               request_id,\r\n               error\r\n            })\r\n         })\r\n   }\r\n}\r\n","import { parse } from 'query-string'\r\nimport { createActions } from 'redux-actions';\r\nimport { Wallet } from '../utils/wallet';\r\n\r\nexport const REFRESH_ACCOUNT = 'REFRESH_ACCOUNT'\r\nexport const LOADER_ACCOUNT = 'LOADER_ACCOUNT'\r\nexport const REFRESH_URL = 'REFRESH_URL'\r\n\r\nexport function handleRefreshAccount(wallet, history) {\r\n   return (dispatch, getState) => {\r\n      wallet.redirectIfEmpty(history)\r\n      const accountId = wallet.getAccountId()\r\n\r\n      dispatch({\r\n         type: LOADER_ACCOUNT,\r\n         loader: true\r\n      })\r\n\r\n      wallet\r\n         .loadAccount(accountId, history)\r\n         .then(v => {\r\n            dispatch({\r\n               type: REFRESH_ACCOUNT,\r\n               data: {\r\n                  accountId: accountId,\r\n                  authToken: wallet.newAccessToken(\r\n                     getState().account.url.app_title,\r\n                     getState().account.url.app_url,\r\n                     getState().account.url.contract_id\r\n                  ),\r\n                  amount: v['amount'] || 0,\r\n                  stake: v['stake'],\r\n                  nonce: v['nonce'],\r\n                  code_hash: v['code_hash'],\r\n                  accounts: wallet.accounts\r\n               }\r\n            })\r\n\r\n            dispatch({\r\n               type: LOADER_ACCOUNT,\r\n               loader: false\r\n            })\r\n         })\r\n         .catch(e => {\r\n            console.log(e)\r\n\r\n            if (e.message && e.message.indexOf('is not valid') !== -1) {\r\n               // We have an account in the storage, but it doesn't exist on blockchain. We probably nuked storage so just redirect to create account\r\n               wallet.clearState()\r\n               wallet.redirectToCreateAccount(\r\n                  {\r\n                     reset_accounts: true\r\n                  },\r\n                  history\r\n               )\r\n            }\r\n         })\r\n   }\r\n}\r\n\r\nexport function handleRefreshUrl(location) {\r\n   return dispatch => {\r\n      dispatch({\r\n         type: REFRESH_URL,\r\n         url: {\r\n            app_title: parse(location.search).title || '',\r\n            app_url: parse(location.search).app_url || '',\r\n            contract_id: parse(location.search).contract_id || '',\r\n            success_url: parse(location.search).success_url || '',\r\n            failure_url: parse(location.search).failure_url || '',\r\n            public_key: parse(location.search).public_key || ''\r\n         }\r\n      })\r\n   }\r\n}\r\n\r\nconst wallet = new Wallet()\r\n\r\nexport const { requestCode, validateCode } = createActions({\r\n   REQUEST_CODE: [\r\n      wallet.requestCode.bind(wallet),\r\n      () => ({ successCode: 'account.requestCode.success', errorCode: 'account.requestCode.error' })\r\n   ],\r\n   VALIDATE_CODE: [\r\n      wallet.validateCode.bind(wallet),\r\n      () => ({ successCode: 'account.validateCode.success', errorCode: 'account.validateCode.error' })\r\n   ]\r\n})\r\n\r\n\r\n\r\n\r\n","import { handleActions, combineActions } from 'redux-actions'\r\nimport {\r\n   REFRESH_ACCOUNT,\r\n   LOADER_ACCOUNT,\r\n   REFRESH_URL,\r\n   requestCode,\r\n   validateCode\r\n} from '../actions/account'\r\nimport reduceReducers from 'reduce-reducers';\r\n\r\nconst initialState = {\r\n   formLoader: false,\r\n   sentSms: false\r\n}\r\n\r\nconst loaderReducer = (state, { ready }) => {\r\n   if (typeof ready === 'undefined') {\r\n      return state\r\n   }\r\n   return { ...state, formLoader: !ready }\r\n}\r\n\r\nconst requestResultReducer = handleActions({\r\n   [combineActions(requestCode, validateCode)]: (state, { error, payload, meta }) => ({\r\n      ...state,\r\n      requestStatus: !!payload || error ? {\r\n         success: !error,\r\n         messageCode: error ? payload.messageCode || meta.errorCode : meta.successCode \r\n      } : undefined\r\n   })\r\n}, initialState)\r\n\r\nconst reducer = handleActions({\r\n   [requestCode]: (state, { error, ready }) => {\r\n      if (ready && !error) {\r\n         return { ...state, sentSms: true }\r\n      }\r\n      return state\r\n   },\r\n}, initialState)\r\n\r\n// TODO: Migrate everything to redux-actions\r\nfunction account(state = {}, action) {\r\n   switch (action.type) {\r\n      case REFRESH_ACCOUNT:\r\n         return {\r\n            ...state,\r\n            ...action.data\r\n         }\r\n      case LOADER_ACCOUNT: {\r\n         return {\r\n            ...state,\r\n            loader: action.loader\r\n         }\r\n      }\r\n      case REFRESH_URL: {\r\n         return {\r\n            ...state,\r\n            url: action.url\r\n         }\r\n      }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport default reduceReducers(\r\n   initialState,\r\n   loaderReducer,\r\n   requestResultReducer,\r\n   reducer,\r\n   account)\r\n\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware, compose } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n/**\r\n * Lets you dispatch special actions with a { promise } field.\r\n *\r\n * This middleware will turn them into a single action at the beginning,\r\n * and a single success (or failure) action when the `promise` resolves.\r\n *\r\n * For convenience, `dispatch` will return the promise so the caller can wait.\r\n */\r\nconst readyStatePromise = store => next => action => {\r\n    if (!action.payload || !action.payload.then) {\r\n      return next(action)\r\n    }\r\n  \r\n    function makeAction(ready, data) {\r\n      const newAction = Object.assign({}, action)\r\n      delete newAction.payload\r\n      return Object.assign(newAction, { ready }, data)\r\n    }\r\n  \r\n    next(makeAction(false))\r\n    return action.payload.then(\r\n      payload => next(makeAction(true, { payload })),\r\n      error => next(makeAction(true, { error: true, payload: error }))\r\n    )\r\n  }\r\n\r\nexport default (history) => composeEnhancers(\r\n    applyMiddleware(\r\n        routerMiddleware(history),\r\n        readyStatePromise,\r\n        thunk))\r\n","import React from 'react'\r\n\r\nimport { Image, Loader } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport MobileMenuImage from '../../images/icon-mobile-menu.svg'\r\nimport CloseImage from '../../images/icon-close.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomDiv = styled('div')`\r\n   overflow: hidden;\r\n   width: 100%;\r\n   cursor: pointer;\r\n\r\n   font-family: 'benton-sans', sans-serif;\r\n   font-weight: 600;\r\n\r\n   > div {\r\n      .account-img {\r\n         width: 36px;\r\n         height: 36px;\r\n         background: #4a4f54;\r\n         padding-right: 0px;\r\n         padding-left: 6px;\r\n         border-radius: 18px;\r\n         margin-top: 16px;\r\n         margin-right: 10px;\r\n\r\n         > img {\r\n            width: 24px;\r\n            height: 24px;\r\n            margin-top: 5px;\r\n         }\r\n      }\r\n      .overflow {\r\n         overflow: hidden;\r\n      }\r\n      .account-arrow {\r\n         float: right;\r\n         padding-right: 14px;\r\n         padding-left: 14px;\r\n         padding-top: 24px;\r\n\r\n         img {\r\n            width: 20px;\r\n         }\r\n\r\n         &.desktop {\r\n            padding-top: 32px;\r\n            padding-right: 26px;\r\n\r\n            img {\r\n               width: 12px;\r\n            }\r\n         }\r\n      }\r\n      .account-tokens {\r\n         float: right;\r\n         line-height: 29px;\r\n         font-size: 14px;\r\n\r\n         color: #fff;\r\n\r\n         margin: 21px 0 0 10px;\r\n         height: 28px;\r\n         background: #111314;\r\n         border-radius: 14px;\r\n         padding: 0 10px;\r\n\r\n         letter-spacing: normal;\r\n\r\n         max-width: 140px;\r\n\r\n         :hover {\r\n            color: #fff;\r\n         }\r\n\r\n         > div {\r\n            display: flex;\r\n\r\n            > div {\r\n               text-overflow: ellipsis;\r\n               overflow: hidden;\r\n            }\r\n         }\r\n         .near {\r\n            font-size: 18px;\r\n            padding-left: 4px;\r\n            font-weight: 500;\r\n         }\r\n      }\r\n      .account-name {\r\n         overflow: hidden;\r\n         padding-right: 0px;\r\n         text-align: right;\r\n         padding-left: 0px;\r\n         line-height: 72px;\r\n\r\n         > div {\r\n            font-size: 14px;\r\n            letter-spacing: normal;\r\n            padding-left: 0px;\r\n            padding-right: 0px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            color: #fff;\r\n\r\n            :hover {\r\n               color: #fff;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst PopupMenuTrigger = ({ account, handleClick, type, dropdown = false }) => (\r\n   <CustomDiv onClick={handleClick}>\r\n      <div>\r\n         {type === 'desktop' && (\r\n            <div className='account-img' style={{ float: 'left' }}>\r\n               <Image src={AccountGreyImage} />\r\n            </div>\r\n         )}\r\n         <div className={`account-arrow ${type}`}>\r\n            {type === 'mobile' && (\r\n               <Image src={dropdown ? MobileMenuImage : CloseImage} />\r\n            )}\r\n            {type === 'desktop' && <Image src={ArrowDownImage} />}\r\n         </div>\r\n         <div className='overflow'>\r\n            <div className='account-tokens'>\r\n               {account.loader || !account.accountId ? (\r\n                  <Loader active inline size='mini' />\r\n               ) : (\r\n                  <div>\r\n                     <div>{account.amount} </div>\r\n                     <div className='near'>Ⓝ</div>\r\n                  </div>\r\n               )}\r\n            </div>\r\n            <div className='account-name'>\r\n               {account.loader || !account.accountId ? (\r\n                  <Loader active inline size='mini' />\r\n               ) : (\r\n                  <div>@{account.accountId}</div>\r\n               )}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </CustomDiv>\r\n)\r\n\r\nexport default PopupMenuTrigger\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport {\r\n   Image,\r\n   Menu,\r\n   Responsive,\r\n   Segment,\r\n   List,\r\n   Button\r\n} from 'semantic-ui-react'\r\n\r\nimport PopupMenuTrigger from './PopupMenuTrigger'\r\n\r\nimport SendImage from '../../images/icon-send.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\r\nimport LogoutImage from '../../images/icon-logout.svg'\r\nimport LogoImage from '../../images/wallet.png'\r\nimport AccountGreyImage from '../../images/icon-account.svg'\r\nimport RecentImage from '../../images/icon-recent.svg'\r\nimport ActivityImage from '../../images/icon-activity.svg'\r\n\r\nimport { handleRefreshAccount } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomResponsive = styled(Responsive)`\r\n   &&& {\r\n      padding-bottom: 240px;\r\n\r\n      .navbar {\r\n         padding: 0px;\r\n\r\n         &-main {\r\n            background-color: #24272a;\r\n            height: 72px;\r\n            border-radius: 0;\r\n            margin-bottom: 0;\r\n\r\n            .mainlogo {\r\n               float: left;\r\n               padding: 4px 10px 0px 0px;\r\n\r\n               div {\r\n                  width: 50px;\r\n                  overflow: hidden;\r\n\r\n                  > img.image {\r\n                     width: 160px;\r\n                     max-width: none;\r\n                  }\r\n               }\r\n            }\r\n            .trigger {\r\n               width: 100%;\r\n               overflow: hidden;\r\n            }\r\n         }\r\n         &-sub {\r\n            margin: 0px;\r\n            padding: 0px;\r\n            background-color: #24272a;\r\n\r\n            &.hide {\r\n               display: none;\r\n            }\r\n\r\n            .main {\r\n               font-family: 'benton-sans', sans-serif;\r\n               font-weight: 400;\r\n               font-size: 14px;\r\n               padding: 18px 6px;\r\n               margin: 0 1rem;\r\n               border-top: 1px solid #4a4f54;\r\n\r\n               &.border {\r\n                  border-bottom: 1px solid #4a4f54;\r\n               }\r\n\r\n               a {\r\n                  color: #fff;\r\n                  letter-spacing: 2px;\r\n               }\r\n\r\n               img {\r\n                  margin-top: -4px;\r\n                  width: 24px;\r\n                  margin-right: 20px;\r\n                  display: inline-block !important;\r\n               }\r\n            }\r\n\r\n            .sub {\r\n               padding: 10px 1rem 0 1rem;\r\n\r\n               .item {\r\n                  font-family: 'benton-sans', sans-serif;\r\n                  font-weight: 400;\r\n                  font-size: 14px;\r\n                  padding: 8px 9px;\r\n\r\n                  a {\r\n                     color: #8fd6bd;\r\n                     letter-spacing: 2px;\r\n                  }\r\n\r\n                  img {\r\n                     margin-top: -2px;\r\n                     width: 18px;\r\n                     margin-right: 22px;\r\n                     display: inline-block !important;\r\n                  }\r\n               }\r\n            }\r\n\r\n            .switch-account {\r\n               background: #000;\r\n               padding: 0 1rem;\r\n\r\n               padding: 20px;\r\n\r\n               .item {\r\n                  padding: 0 10px;\r\n               }\r\n\r\n               h6.item {\r\n                  padding-bottom: 10px;\r\n                  border: 0px;\r\n               }\r\n\r\n               .account-title {\r\n                  height: 40px;\r\n                  line-height: 40px;\r\n                  color: #fff;\r\n                  font-weight: 500;\r\n                  border-bottom: 1px solid #323434;\r\n                  letter-spacing: normal;\r\n\r\n                  text-overflow: ellipsis;\r\n                  overflow: hidden;\r\n               }\r\n\r\n               button {\r\n                  width: 100%;\r\n                  border-radius: 30px;\r\n                  background: #24272a;\r\n                  color: #6ad1e3;\r\n\r\n                  :hover {\r\n                     background: #fff;\r\n                     color: #6ad1e3;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst getWidth = () => {\r\n   const isSSR = typeof window === 'undefined'\r\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\nclass MobileView extends Component {\r\n   static propTypes = {\r\n      children: PropTypes.node\r\n   }\r\n\r\n   static defaultProps = {\r\n      children: ''\r\n   }\r\n\r\n   state = {\r\n      dropdown: true\r\n   }\r\n\r\n   handleDropdown = () =>\r\n      this.setState(state => ({\r\n         dropdown: !state.dropdown\r\n      }))\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n      this.handleDropdown()\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet = new Wallet()\r\n      this.handleDropdown()\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { dropdown } = this.state\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <CustomResponsive\r\n            getWidth={getWidth}\r\n            maxWidth={Responsive.onlyTablet.maxWidth}\r\n         >\r\n            <Segment basic className='navbar'>\r\n               <Menu className='navbar-main' borderless>\r\n                  <div className='mainlogo'>\r\n                     <Link to='/'>\r\n                        <div>\r\n                           <Image src={LogoImage} />\r\n                        </div>\r\n                     </Link>\r\n                  </div>\r\n\r\n                  {account.accountId && (\r\n                     <div className='trigger'>\r\n                        <PopupMenuTrigger\r\n                           account={account}\r\n                           handleClick={this.handleDropdown}\r\n                           type='mobile'\r\n                           dropdown={dropdown}\r\n                        />\r\n                     </div>\r\n                  )}\r\n               </Menu>\r\n               <Segment\r\n                  basic\r\n                  className={`navbar-sub ${dropdown ? `hide` : ``}`}\r\n               >\r\n                  <Menu.Menu>\r\n                     <Menu.Item className='main'>\r\n                        <Link to='/' onClick={this.handleDropdown}>\r\n                           <Image src={RecentImage} />\r\n                           SUMMARY\r\n                        </Link>\r\n                     </Menu.Item>\r\n                     <Menu.Item className='main'>\r\n                        <Link to='/activity' onClick={this.handleDropdown}>\r\n                           <Image src={ActivityImage} />\r\n                           ACTIVITY\r\n                        </Link>\r\n                     </Menu.Item>\r\n                     <Menu.Item className='main border'>\r\n                        <Link to='/send-money' onClick={this.handleDropdown}>\r\n                           <Image src={SendImage} />\r\n                           SEND MONEY\r\n                        </Link>\r\n                     </Menu.Item>\r\n\r\n                     <Menu.Menu className='sub'>\r\n                        <Menu.Item>\r\n                           <Link to='/profile' onClick={this.handleDropdown}>\r\n                              <Image src={AccountGreyImage} />\r\n                              Profile\r\n                           </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                           <Link to='/contacts' onClick={this.handleDropdown}>\r\n                              <Image src={ContactsGreyImage} />\r\n                              Contacts\r\n                           </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                           <Link\r\n                              to='/authorized-apps'\r\n                              onClick={this.handleDropdown}\r\n                           >\r\n                              <Image src={AuthorizedGreyImage} />\r\n                              Authorized Apps\r\n                           </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                           <Link to='/' onClick={this.handleDropdown}>\r\n                              <Image src={LogoutImage} />\r\n                              Logout\r\n                           </Link>\r\n                        </Menu.Item>\r\n                     </Menu.Menu>\r\n                     <Segment basic className='switch-account'>\r\n                        <List>\r\n                           <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\r\n\r\n                           {account.accounts &&\r\n                              Object.keys(account.accounts)\r\n                                 .filter(a => a !== account.accountId)\r\n                                 .map((account, i) => (\r\n                                    <List.Item\r\n                                       as='a'\r\n                                       key={`mf-${i}`}\r\n                                       onClick={() =>\r\n                                          this.handleSelectAccount(account)\r\n                                       }\r\n                                       className='account-title'\r\n                                    >\r\n                                       @{account}\r\n                                    </List.Item>\r\n                                 ))}\r\n                        </List>\r\n                        <Button onClick={this.redirectCreateAccount}>\r\n                           CREATE NEW ACCOUNT\r\n                        </Button>\r\n                     </Segment>\r\n                  </Menu.Menu>\r\n               </Segment>\r\n            </Segment>\r\n\r\n            {this.props.children}\r\n         </CustomResponsive>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(MobileView))\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Image, Segment, List, Button, Popup } from 'semantic-ui-react'\r\n\r\nimport PopupMenuTrigger from './PopupMenuTrigger'\r\n\r\nimport AccountImage from '../../images/icon-account.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\r\nimport LogoutImage from '../../images/icon-logout.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomPopup = styled(Popup)`\r\n   &&& {\r\n      padding: 0px;\r\n      right: 12px !important;\r\n      top: 50px !important;\r\n      position: fixed !important;\r\n\r\n      .account-dropdown {\r\n         width: 290px;\r\n         min-height: 100px;\r\n         background-color: #f8f8f8;\r\n\r\n         padding: 20px;\r\n\r\n         .item {\r\n            color: #999999;\r\n         }\r\n\r\n         .submenu {\r\n            margin: -20px;\r\n            padding: 20px;\r\n            background: #fff;\r\n\r\n            .icon {\r\n               width: 20px;\r\n            }\r\n            .content {\r\n               line-height: 26px;\r\n               padding-left: 10px;\r\n            }\r\n            .item {\r\n               margin: 4px 0;\r\n            }\r\n         }\r\n\r\n         .switch-account {\r\n            margin-top: 40px;\r\n            margin-bottom: 0px;\r\n         }\r\n\r\n         &-scroll {\r\n            max-height: 226px;\r\n            overflow-y: auto;\r\n            width: 270px;\r\n            margin-top: 0px;\r\n\r\n            > .item {\r\n               width: 250px;\r\n               margin: 0px;\r\n               padding: 0px;\r\n\r\n               :hover {\r\n                  text-decoration: underline;\r\n               }\r\n               ::before {\r\n                  display: none;\r\n               }\r\n               ::after {\r\n                  display: none;\r\n               }\r\n            }\r\n         }\r\n\r\n         h6 {\r\n            padding-bottom: 6px;\r\n         }\r\n         .account-title {\r\n            height: 40px;\r\n            line-height: 40px;\r\n            color: #4a4f54;\r\n            font-weight: 500;\r\n            border-bottom: 2px solid #e6e6e6;\r\n            letter-spacing: normal;\r\n\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n         }\r\n         button {\r\n            width: 100%;\r\n            border-radius: 30px;\r\n            background: #fff;\r\n            color: #6ad1e3;\r\n\r\n            :hover {\r\n               background: #6ad1e3;\r\n               color: #fff;\r\n            }\r\n         }\r\n      }\r\n\r\n      :hover {\r\n         .account-dropdown {\r\n            display: block;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DesktopPopup = ({\r\n   account,\r\n   handleSelectAccount,\r\n   redirectCreateAccount,\r\n   handleToggle,\r\n   popupOpen\r\n}) => (\r\n   <CustomPopup\r\n      trigger={\r\n         <PopupMenuTrigger\r\n            account={account}\r\n            handleClick={handleToggle}\r\n            type='desktop'\r\n         />\r\n      }\r\n      position='right center'\r\n      open={popupOpen}\r\n   >\r\n      <Segment basic className='account-dropdown'>\r\n         <List className='submenu'>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={AccountImage} />\r\n               <List.Content as={Link} to='/profile' onClick={handleToggle}>\r\n                  Profile\r\n               </List.Content>\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={ContactsGreyImage} />\r\n               <List.Content as={Link} to='/contacts' onClick={handleToggle}>\r\n                  Contacts\r\n               </List.Content>\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={AuthorizedGreyImage} />\r\n               <List.Content\r\n                  as={Link}\r\n                  to='authorized-apps'\r\n                  onClick={handleToggle}\r\n               >\r\n                  Authorized Apps\r\n               </List.Content>\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={LogoutImage} />\r\n               <List.Content as={Link} to='/logout' onClick={handleToggle}>\r\n                  Logout\r\n               </List.Content>\r\n            </List.Item>\r\n         </List>\r\n         <List className='switch-account'>\r\n            <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\r\n         </List>\r\n         <List className='account-dropdown-scroll'>\r\n            {account.accounts &&\r\n               Object.keys(account.accounts)\r\n                  .filter(a => a !== account.accountId)\r\n                  .map((account, i) => (\r\n                     <List.Item\r\n                        as='a'\r\n                        key={`mf-${i}`}\r\n                        onClick={() => handleSelectAccount(account)}\r\n                        className='account-title'\r\n                     >\r\n                        @{account}\r\n                     </List.Item>\r\n                  ))}\r\n         </List>\r\n         <Button onClick={redirectCreateAccount}>CREATE NEW ACCOUNT</Button>\r\n      </Segment>\r\n   </CustomPopup>\r\n)\r\n\r\nexport default DesktopPopup\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport DesktopPopup from './DesktopPopup'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { Image, Responsive, Segment, Visibility } from 'semantic-ui-react'\r\n\r\nimport LogoImage from '../../images/wallet.png'\r\nimport HelpImage from '../../images/icon-help.svg'\r\nimport ActivityImage from '../../images/icon-activity.svg'\r\nimport RecentImage from '../../images/icon-recent.svg'\r\nimport SendImage from '../../images/icon-send.svg'\r\n\r\nimport { handleRefreshAccount } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomResponsive = styled(Responsive)`\r\n   padding-bottom: 180px;\r\n\r\n   .spacer {\r\n      height: 72px;\r\n   }\r\n\r\n   &&& .navbar {\r\n      width: 100%;\r\n      background-color: #24272a;\r\n      height: 72px;\r\n      border-radius: 0;\r\n      position: fixed;\r\n      top: 0px;\r\n\r\n      .left {\r\n         float: left;\r\n      }\r\n      .right {\r\n         float: right;\r\n      }\r\n\r\n      .overflow {\r\n         overflow: hidden;\r\n      }\r\n      .devider {\r\n         float: left;\r\n         width: 2px;\r\n         height: 40px;\r\n         background: #5d5f60;\r\n         padding: 0px;\r\n         margin: 16px 28px 0 0;\r\n      }\r\n\r\n      .help {\r\n         float: left;\r\n         margin-top: 22px;\r\n         margin-right: 28px;\r\n      }\r\n\r\n      &-icon {\r\n         height: 24px;\r\n\r\n         display: inline-block;\r\n      }\r\n\r\n      .mainlogo {\r\n         float: left;\r\n         padding-right: 6px;\r\n\r\n         img {\r\n            height: 72px;\r\n         }\r\n      }\r\n\r\n      .item {\r\n         float: left;\r\n\r\n         color: white;\r\n         font-family: 'benton-sans', sans-serif;\r\n         font-weight: 600;\r\n         font-size: 14px;\r\n         padding-left: 0px;\r\n         padding-right: 30px;\r\n         letter-spacing: 2px;\r\n         line-height: 72px;\r\n\r\n         img {\r\n            margin-right: 10px;\r\n         }\r\n         a {\r\n            color: #fff;\r\n         }\r\n         a:hover {\r\n            color: #6ad1e3;\r\n            text-decoration: none;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst getWidth = () => {\r\n   const isSSR = typeof window === 'undefined'\r\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\nclass DesktopView extends Component {\r\n   static propTypes = {\r\n      children: PropTypes.node\r\n   }\r\n\r\n   static defaultProps = {\r\n      children: ''\r\n   }\r\n\r\n   state = {\r\n      activeItem: 'home',\r\n      popupOpen: false\r\n   }\r\n\r\n   hideFixedMenu = () => this.setState({ fixed: false })\r\n\r\n   showFixedMenu = () => this.setState({ fixed: true })\r\n\r\n   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n      this.setState(() => ({\r\n         popupOpen: false\r\n      }))\r\n   }\r\n\r\n   handleToggle = () =>\r\n      this.setState(state => ({\r\n         popupOpen: !state.popupOpen\r\n      }))\r\n\r\n   render() {\r\n      const { popupOpen } = this.state\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <CustomResponsive\r\n            getWidth={getWidth}\r\n            minWidth={Responsive.onlyComputer.minWidth}\r\n         >\r\n            <Visibility\r\n               once={false}\r\n               onBottomPassed={this.showFixedMenu}\r\n               onBottomPassedReverse={this.hideFixedMenu}\r\n            >\r\n               <Segment className='spacer' basic />\r\n               <div className='navbar'>\r\n                  <div className='left'>\r\n                     <div>\r\n                        <div className='mainlogo'>\r\n                           <Link to='/'>\r\n                              <Image src={LogoImage} />\r\n                           </Link>\r\n                        </div>\r\n                        <div className='item'>\r\n                           <Link to='/'>\r\n                              <Image\r\n                                 className='navbar-icon'\r\n                                 src={RecentImage}\r\n                              />\r\n                              SUMMARY\r\n                           </Link>\r\n                        </div>\r\n                        <div className='item'>\r\n                           <Link to='/'>\r\n                              <Image\r\n                                 className='navbar-icon'\r\n                                 src={ActivityImage}\r\n                              />\r\n                              ACTIVITY\r\n                           </Link>\r\n                        </div>\r\n                        <div className='item'>\r\n                           <Link to='/send-money'>\r\n                              <Image className='navbar-icon' src={SendImage} />\r\n                              SEND MONEY\r\n                           </Link>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n                  <div className='overflow'>\r\n                     {account.accountId && (\r\n                        <div className='right'>\r\n                           <div className='help'>\r\n                              <a href='http://near.chat/'>\r\n                                 <Image\r\n                                    className='navbar-icon'\r\n                                    src={HelpImage}\r\n                                 />\r\n                              </a>\r\n                           </div>\r\n                           <div className='devider' />\r\n                           <div className='overflow'>\r\n                              <DesktopPopup\r\n                                 account={account}\r\n                                 handleSelectAccount={this.handleSelectAccount}\r\n                                 redirectCreateAccount={\r\n                                    this.redirectCreateAccount\r\n                                 }\r\n                                 handleToggle={this.handleToggle}\r\n                                 popupOpen={popupOpen}\r\n                              />\r\n                           </div>\r\n                        </div>\r\n                     )}\r\n                  </div>\r\n               </div>\r\n            </Visibility>\r\n\r\n            {this.props.children}\r\n         </CustomResponsive>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(DesktopView))\r\n","import React, { Fragment } from 'react'\r\n\r\nimport MobileView from './MobileView'\r\nimport DesktopView from './DesktopView'\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n   <Fragment>\r\n      <DesktopView>{children}</DesktopView>\r\n      <MobileView>{children}</MobileView>\r\n   </Fragment>\r\n)\r\n\r\nexport default ResponsiveContainer\r\n","import React from 'react'\r\nimport { Grid, Image, List, Item } from 'semantic-ui-react'\r\n\r\nimport LogoFooterImage from '../../images/near.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst FooterGrid = styled(Grid)`\r\n   position: absolute;\r\n   bottom: 0px;\r\n   width: 100%;\r\n\r\n   height: 100px;\r\n   background-color: #f8f8f8;\r\n\r\n   font-size: 12px;\r\n   font-weight: 300;\r\n   color: #999999;\r\n\r\n   &&& {\r\n      margin-bottom: 0px;\r\n      margin-left: 0px;\r\n\r\n      .near-logo {\r\n         .content {\r\n            a {\r\n               font-size: 12px;\r\n               font-weight: 300;\r\n               color: #999999;\r\n               text-decoration: underline;\r\n\r\n               :hover {\r\n                  text-decoration: none;\r\n               }\r\n            }\r\n            .color-brown-grey {\r\n               color: #e6e6e6;\r\n               padding: 0 6px;\r\n            }\r\n         }\r\n         .image {\r\n            width: 140px;\r\n            padding-left: 14px;\r\n\r\n            img {\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   &&&& .help {\r\n      padding-right: 0px;\r\n      padding-top: 10px;\r\n      padding-bottom: 0px;\r\n\r\n      > .list {\r\n         width: 230px;\r\n         height: 80px;\r\n         padding: 20px 0;\r\n         background: #fff;\r\n         text-align: left;\r\n\r\n         > img {\r\n            width: 80px;\r\n            position: absolute;\r\n            bottom: 0px;\r\n            right: 200px;\r\n         }\r\n\r\n         > h3 {\r\n            font-weight: 600 !important;\r\n            padding: 0 0 0 40px;\r\n            color: #999999 !important;\r\n\r\n            &.color {\r\n               color: #0072ce !important;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         height: 180px;\r\n\r\n         .near-logo {\r\n            .item {\r\n            }\r\n            .content {\r\n               text-align: center;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ResponsiveContainer = () => (\r\n   <FooterGrid columns={2}>\r\n      <Grid.Column\r\n         textAlign='left'\r\n         verticalAlign='middle'\r\n         computer={10}\r\n         tablet={10}\r\n         mobile={16}\r\n      >\r\n         <Item.Group className='near-logo'>\r\n            <Item>\r\n               <Item.Image src={LogoFooterImage} />\r\n               <Item.Content>\r\n                  © 2019 NEAR Inc. All Rights Reserved.\r\n                  <br />\r\n                  <a href='/'>Terms of Service</a>\r\n                  <span className='color-brown-grey'>|</span>\r\n                  <a href='/'>Privacy Policy</a>\r\n               </Item.Content>\r\n            </Item>\r\n         </Item.Group>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         only='tablet computer'\r\n         computer={6}\r\n         tablet={6}\r\n         textAlign='right'\r\n         className='help'\r\n      >\r\n         <List floated='right'>\r\n            <List.Item as='h3'>Need Help?</List.Item>\r\n            <List.Item as='h3' className='color'>\r\n               <a href='https://discordapp.com/invite/gBtUFKR'>\r\n                  Contact Support\r\n               </a>\r\n            </List.Item>\r\n            <Image className='nearkat' src={NearkatImage} />\r\n         </List>\r\n      </Grid.Column>\r\n   </FooterGrid>\r\n)\r\n\r\nexport default ResponsiveContainer\r\n","import React from 'react'\r\n\r\nimport TContractImage from '../../images/icon-t-contract.svg'\r\n\r\nimport { Grid, List } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&&& {\r\n      margin-top: 0px;\r\n\r\n      .other-assets {\r\n         background: #f8f8f8;\r\n         border-top: 2px solid #e6e6e6;\r\n         border-bottom: 4px solid #e6e6e6;\r\n         padding: 0px;\r\n\r\n         .column {\r\n            border-right: 2px solid #e6e6e6;\r\n            padding: 10px 0px 10px 18px;\r\n\r\n            :last-of-type {\r\n               border: 0px;\r\n            }\r\n\r\n            .content {\r\n               width: auto;\r\n            }\r\n\r\n            .icon {\r\n               background-image: url(${TContractImage});\r\n               background-repeat: no-repeat;\r\n               background-position: center top;\r\n               background-size: 24px 24px;\r\n               width: 24px;\r\n               height: 38px;\r\n               margin: 0 6px 0 0;\r\n            }\r\n\r\n            h5 {\r\n               font-weight: 600;\r\n               line-height: 16px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   && .other-assets-title {\r\n      padding-bottom: 6px;\r\n      color: #24272a;\r\n      font-weight: 600;\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      &&&& .other-assets {\r\n         .column {\r\n            .content {\r\n               h2 {\r\n                  font-size: 16px !important;\r\n               }\r\n            }\r\n            .icon {\r\n               background-size: 18px 24px;\r\n               width: 18px;\r\n               margin: 8px 6px 0 0;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&&& .other-assets {\r\n         background: #fff;\r\n         margin-top: 18px !important;\r\n         border-right: 0px;\r\n\r\n         > .column {\r\n            width: 100% !important;\r\n            border-right: 0px;\r\n            border-bottom: 2px solid #f8f8f8;\r\n            padding: 6px 0px 6px 4px;\r\n\r\n            .list {\r\n               width: 100%;\r\n\r\n               .item {\r\n                  width: 100%;\r\n\r\n                  .content {\r\n                     float: right;\r\n                     text-align: right;\r\n\r\n                     h2 {\r\n                        font-size: 14px !important;\r\n                     }\r\n                  }\r\n                  .icon {\r\n                     height: 20px;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n\r\n         &-title {\r\n            display: none;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardOtherAssets = () => (\r\n   <CustomGrid>\r\n      <Grid.Row className='other-assets-title' as='h6'>\r\n         OTHER ASSETS\r\n      </Grid.Row>\r\n      <Grid.Row columns={6} className='other-assets'>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        12.125\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ETH\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        3.2501\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        XRP\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        8.0987\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ZEC\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        13.258\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        BNB\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        2.5897\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        XMR\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        1.2589\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ZIL\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default DashboardOtherAssets\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport DashboardOtherAssets from './DashboardOtherAssets'\r\n\r\nimport ArrowGrnImage from '../../images/icon-arrow-grn.svg'\r\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\r\n\r\nimport { Container, Grid, Button, Header } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n\r\n         :first-child {\r\n            padding-left: 0px;\r\n         }\r\n      }\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-left: 0px;\r\n         line-height: 48px;\r\n      }\r\n   }\r\n\r\n   .near {\r\n      font-size: 48px;\r\n      color: #24272a;\r\n   }\r\n\r\n   &&& .send-money {\r\n      margin: -8px 0 0 0;\r\n\r\n      > .button {\r\n         width: 100%;\r\n         line-height: 60px;\r\n         border-radius: 30px;\r\n         border: solid 2px #5ace84;\r\n         font-size: 18px;\r\n         font-weight: 600;\r\n         letter-spacing: 2px;\r\n         color: #5ace84;\r\n         background: #fff;\r\n         text-align: left;\r\n         padding: 0 0 0 40px;\r\n\r\n         background-image: url(${ArrowGrnImage});\r\n         background-repeat: no-repeat;\r\n         background-position: 90% center;\r\n         background-size: 14px 20px;\r\n\r\n         :hover {\r\n            background-color: #5ace84;\r\n            color: #fff;\r\n            background-image: url(${ArrowRightImage});\r\n         }\r\n      }\r\n   }\r\n\r\n   &&& {\r\n      .right-section {\r\n         padding-left: 40px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      > .grid {\r\n         margin-left: 0px;\r\n         margin-right: 0px;\r\n      }\r\n\r\n      &&& .send-money {\r\n         margin-top: 20px;\r\n         margin-top: 0px;\r\n      }\r\n\r\n      &&& .creating-info {\r\n         padding-top: 24px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 12px 0;\r\n         }\r\n         .balance {\r\n            display: none;\r\n         }\r\n         .button {\r\n            width: 240px;\r\n            line-height: 44px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row className='creating-info'>\r\n            <Grid.Column computer={12} tablet={11} mobile={16}>\r\n               <Header as='h1'>\r\n                  <span className='balance'>Balance: </span>\r\n                  <span className='color-black'>2,300.562</span>\r\n                  <span className='near'>Ⓝ</span>\r\n               </Header>\r\n            </Grid.Column>\r\n            <Grid.Column\r\n               computer={4}\r\n               tablet={5}\r\n               mobile={16}\r\n               className='send-money'\r\n            >\r\n               <Button as={Link} to='/contacts'>\r\n                  SEND MONEY\r\n               </Button>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      <DashboardOtherAssets />\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default DashboardContainer\r\n","import React from 'react'\r\n\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nimport CloseImage from '../../images/icon-close.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 20px;\r\n      margin: 12px 0 12px 0;\r\n\r\n      .img {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 20px;\r\n         right: 20px;\r\n\r\n         img {\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      .text {\r\n         margin: 0 10% 0 0;\r\n         color: #24272a;\r\n         float: left;\r\n\r\n         .header {\r\n            font-family: 'benton-sans', sans-serif;\r\n         }\r\n         .content {\r\n            color: #999999;\r\n            padding-top: 12px;\r\n            line-height: 20px;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardNotice = ({ handleNotice }) => (\r\n   <CustomList horizontal className='box'>\r\n      <List.Item className='text'>\r\n         <List.Header>Here’s a Notice of some sort</List.Header>\r\n         <List.Content>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce nec\r\n            ex non augue volutpat finibus. Suspendisse fringilla consequat magna\r\n            a finibus.{` `}\r\n            <a href='/'>Call to Action</a>\r\n         </List.Content>\r\n      </List.Item>\r\n      <List.Item className='img'>\r\n         <Image onClick={handleNotice} src={CloseImage} />\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default DashboardNotice\r\n","import React from 'react'\r\n\r\nimport DashboardNotice from './DashboardNotice'\r\n\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nconst DashboardSection = ({ children, notice, handleNotice }) => (\r\n   <Grid columns={2} stackable>\r\n      <Grid.Column computer={10}>\r\n         {notice && <DashboardNotice handleNotice={handleNotice} />}\r\n         {children[0]}\r\n      </Grid.Column>\r\n      <Grid.Column computer={6} className='right-section'>\r\n         {children[1]}\r\n         {children[2]}\r\n      </Grid.Column>\r\n   </Grid>\r\n)\r\n\r\nexport default DashboardSection\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Grid, Image } from 'semantic-ui-react'\r\n\r\nimport ArrowRight from '../../images/icon-arrow-right.svg'\r\nimport ArrowBlkImage from '../../images/icon-arrow-blk.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGridRow = styled(Grid.Row)`\r\n   &&& {\r\n      margin-left: 20px;\r\n      border-left: 4px solid #f8f8f8;\r\n\r\n      .col-image {\r\n         margin-left: -33px;\r\n         width: 40px;\r\n         flex: 0 0 40px;\r\n         padding-left: 0px;\r\n\r\n         .main-image {\r\n            border: 1px solid #e6e6e6;\r\n            background: #fff;\r\n            border-radius: 14px;\r\n            padding: 5px;\r\n            width: 26px;\r\n            height: 26px;\r\n            margin: 0 24px 0 18px;\r\n            overflow: hidden;\r\n\r\n            img {\r\n               margin: 0 0 0 0;\r\n            }\r\n         }\r\n      }\r\n\r\n      &.wide {\r\n         margin-left: 0px;\r\n         border-left: 0px;\r\n\r\n         .col-image {\r\n            margin-left: 6px;\r\n            width: 56px;\r\n            flex: 0 0 56px;\r\n         }\r\n\r\n         .main-image {\r\n            border: 0px;\r\n            padding: 0 10px;\r\n            width: 48px;\r\n            height: 48px;\r\n            background: #e6e6e6;\r\n            border-radius: 32px;\r\n            margin: 0 24px 0 0;\r\n\r\n            img {\r\n               padding-top: 10px;\r\n            }\r\n         }\r\n      }\r\n\r\n      .main-row-title {\r\n         font-weight: 600;\r\n         width: auto;\r\n         padding-right: 0px;\r\n         flex: 1;\r\n      }\r\n\r\n      .dropdown-image-right {\r\n         width: 10px;\r\n         margin: 0 0 0 0;\r\n         cursor: pointer;\r\n      }\r\n      .dropdown-image {\r\n         float: right;\r\n      }\r\n\r\n      &.dropdown-down {\r\n         background-color: #f8f8f8;\r\n\r\n         .dropdown-image-right {\r\n            width: 10px;\r\n            top: 0px;\r\n            left: 12px;\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      &.showsub {\r\n         .dropdown-image-right {\r\n            left: -24px;\r\n         }\r\n      }\r\n      &.showsub.dropdown-down {\r\n         .dropdown-image-right {\r\n            left: -6px;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         &.showsub {\r\n            .dropdown-image-right {\r\n               left: -14px;\r\n            }\r\n         }\r\n         &.showsub.dropdown-down {\r\n            .dropdown-image-right {\r\n               left: 4px;\r\n            }\r\n         }\r\n\r\n         .main-row-title {\r\n            a {\r\n               font-size: 14px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ListItem = ({\r\n   row,\r\n   i,\r\n   wide = false,\r\n   showSub = false,\r\n   toggleShowSub,\r\n   showSubOpen\r\n}) => (\r\n   <CustomGridRow\r\n      verticalAlign='middle'\r\n      className={`border-bottom-light ${wide ? `wide` : ``} ${\r\n         showSub && showSubOpen === i ? `dropdown-down` : ``\r\n      } ${showSub ? `showsub` : ``}`}\r\n   >\r\n      <Grid.Column computer={8} tablet={wide ? 14 : 8} mobile={wide ? 14 : 10}>\r\n         <Grid verticalAlign='middle'>\r\n            <Grid.Column className='col-image'>\r\n               <div className='main-image'>\r\n                  <Image src={row[0]} align='left' />\r\n               </div>\r\n            </Grid.Column>\r\n            <Grid.Column className='main-row-title'>\r\n               <Link to='/' className='color-black'>\r\n                  {row[1]}\r\n               </Link>\r\n               {row[2] && (\r\n                  <span className='font-small'>\r\n                     <br />\r\n                     <Link to='/'>{row[2]}</Link>\r\n                  </span>\r\n               )}\r\n            </Grid.Column>\r\n         </Grid>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         computer={8}\r\n         tablet={wide ? 2 : 8}\r\n         mobile={wide ? 2 : 6}\r\n         textAlign='right'\r\n      >\r\n         {wide ? (\r\n            <Image\r\n               onClick={() => toggleShowSub(i)}\r\n               src={showSub && showSubOpen === i ? ArrowBlkImage : ArrowRight}\r\n               className='dropdown-image dropdown-image-right'\r\n            />\r\n         ) : (\r\n            <span className='font-small'>{row[3]}</span>\r\n         )}\r\n      </Grid.Column>\r\n   </CustomGridRow>\r\n)\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ListItem from './ListItem'\r\n\r\nimport { Loader, Grid, Dimmer, Button, Header, Image } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      margin-bottom: 20px;\r\n\r\n      .row:first-child {\r\n         padding-bottom: 0px;\r\n      }\r\n\r\n      .row:last-child {\r\n         padding: 14px 0 0 4px;\r\n         margin-left: 20px;\r\n         border-left: 4px solid #f8f8f8;\r\n      }\r\n\r\n      .dashboard-header {\r\n         padding: 14px 0 10px 0;\r\n      }\r\n\r\n      link.view-all,\r\n      button.view-all,\r\n      a.view-all {\r\n         background: #f8f8f8;\r\n         margin: 0;\r\n         padding: 10px 20px;\r\n         color: #0072ce;\r\n         font-weight: 600;\r\n         border-radius: 20px;\r\n         border: 2px solid #f8f8f8;\r\n\r\n         :hover {\r\n            background: #fff;\r\n         }\r\n      }\r\n\r\n      .column-icon {\r\n         width: 28px;\r\n         display: inline-block;\r\n         margin: -4px 10px 0 8px;\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardActivity = ({ loader, image, title, to, activity }) => (\r\n   <CustomGrid>\r\n      <Grid.Row>\r\n         <Grid.Column className='dashboard-header' textAlign='left' width={16}>\r\n            <Header className='h2'>\r\n               <Image className='column-icon' src={image} />\r\n               {title}\r\n            </Header>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Dimmer inverted active={loader}>\r\n         <Loader />\r\n      </Dimmer>\r\n\r\n      {activity.map((row, i) => (\r\n         <ListItem key={`d-${i}`} row={row} />\r\n      ))}\r\n\r\n      <Grid.Row>\r\n         <Grid.Column textAlign='left' width={16}>\r\n            <Button as={Link} to={to} className='view-all'>\r\n               VIEW ALL\r\n            </Button>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default DashboardActivity\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport DashboardContainer from './DashboardContainer'\r\nimport DashboardSection from './DashboardSection'\r\nimport DashboardActivity from './DashboardActivity'\r\n\r\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\r\n\r\nimport TStakeImage from '../../images/icon-t-stake.svg'\r\nimport TTransferImage from '../../images/icon-t-transfer.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nclass DashboardDetail extends Component {\r\n   state = {\r\n      loader: false,\r\n      notice: true,\r\n      activity: [],\r\n      authorizedaps: [],\r\n      newcontacts: []\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [\r\n                  TTransferImage,\r\n                  'Sent: 125 Ⓝ  to @jake.near',\r\n                  'Some details about this activity here',\r\n                  '3 min ago'\r\n               ],\r\n               [\r\n                  TStakeImage,\r\n                  'You Staked 10 tokens',\r\n                  'Some details about this activity here',\r\n                  '20 min ago'\r\n               ],\r\n               [\r\n                  TTransferImage,\r\n                  'Sent: 125 Ⓝ  to @vlad.near',\r\n                  'Some details about this activity here',\r\n                  '1 hr ago'\r\n               ]\r\n            ],\r\n            authorizedaps: [\r\n               [NearkatImage, 'NEAR Place', '', '3 hrs ago'],\r\n               [NearkatImage, 'Cryptocats', '', '5 hrs ago'],\r\n               [NearkatImage, 'Knights App', '', '2 days ago']\r\n            ],\r\n            newcontacts: [\r\n               [AccountGreyImage, 'Alex Skidanov ', '', 'Connected 2 days ago'],\r\n               [AccountGreyImage, '@vlad.near', '', '2 days ago'],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  '',\r\n                  'Connected 2 days ago'\r\n               ]\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   handleNotice = () => {\r\n      this.setState(state => ({\r\n         notice: !state.notice\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         loader,\r\n         notice,\r\n         activity,\r\n         authorizedaps,\r\n         newcontacts\r\n      } = this.state\r\n\r\n      return (\r\n         <DashboardContainer>\r\n            <DashboardSection notice={notice} handleNotice={this.handleNotice}>\r\n               <DashboardActivity\r\n                  loader={loader}\r\n                  image={activityGreyImage}\r\n                  title='Activity'\r\n                  to='/'\r\n                  activity={activity}\r\n               />\r\n               <DashboardActivity\r\n                  loader={loader}\r\n                  image={AuthorizedGreyImage}\r\n                  title='Authorized Apps'\r\n                  to='/authorized-apps'\r\n                  activity={authorizedaps}\r\n               />\r\n               <DashboardActivity\r\n                  loader={loader}\r\n                  image={ContactsGreyImage}\r\n                  title='New Contacts'\r\n                  to='/contacts'\r\n                  activity={newcontacts}\r\n               />\r\n            </DashboardSection>\r\n         </DashboardContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(DashboardDetail))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid, List, Responsive } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      .username-row {\r\n         padding-bottom: 0px;\r\n         margin-left: -1rem;\r\n      }\r\n\r\n      .alert-info {\r\n         font-size: 18px;\r\n         font-weight: 600;\r\n         line-height: 64px;\r\n         margin: 0 0 0 0;\r\n         padding-left: 0px;\r\n\r\n         &.problem {\r\n            color: #ff585d;\r\n         }\r\n         &.success {\r\n            color: #6ad1e3;\r\n         }\r\n      }\r\n\r\n      .note-box {\r\n         padding-left: 30px;\r\n\r\n         .border-left-bold {\r\n            padding-bottom: 20px;\r\n         }\r\n      }\r\n\r\n      .note-info {\r\n         .title {\r\n            letter-spacing: 2px;\r\n            font-weight: 600;\r\n            line-height: 20px;\r\n            color: #4a4f54;\r\n         }\r\n      }\r\n\r\n      .form-row {\r\n         margin-left: -1rem;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      .note-box {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         .username-row {\r\n            margin-left: 0;\r\n         }\r\n\r\n         .alert-info {\r\n            padding: 0 0 6px 24px;\r\n            line-height: 34px;\r\n            font-size: 14px;\r\n            margin-top: -6px;\r\n         }\r\n\r\n         .note-box {\r\n            padding-left: 1rem;\r\n            margin-top: 10px;\r\n         }\r\n\r\n         .note-box {\r\n            .border-left-bold {\r\n               padding-bottom: 0px;\r\n            }\r\n         }\r\n\r\n         .form-row {\r\n            padding-top: 6px;\r\n            margin-left: 0;\r\n         }\r\n\r\n         &&& .note-info {\r\n            font-size: 12px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst CreateAccountSection = ({ successMessage, errorMessage, children }) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='username-row'>\r\n         <Grid.Column as='h3' computer={16} tablet={16} mobile={16}>\r\n            Choose a Username\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='form-row'>\r\n         <Grid.Column computer={8} tablet={8} mobile={16}>\r\n            {children}\r\n         </Grid.Column>\r\n         <Grid.Column computer={8} tablet={8} mobile={16}>\r\n            <Grid className='note-box'>\r\n               {successMessage && (\r\n                  <Responsive\r\n                     as={Grid.Row}\r\n                     minWidth={Responsive.onlyTablet.minWidth}\r\n                  >\r\n                     <Grid.Column className='alert-info success'>\r\n                        Congrats! this name is available.\r\n                     </Grid.Column>\r\n                  </Responsive>\r\n               )}\r\n               {errorMessage && (\r\n                  <Responsive\r\n                     as={Grid.Row}\r\n                     minWidth={Responsive.onlyTablet.minWidth}\r\n                  >\r\n                     <Grid.Column className='alert-info problem'>\r\n                        Username is taken. Try something else.\r\n                     </Grid.Column>\r\n                  </Responsive>\r\n               )}\r\n\r\n               <Grid.Row>\r\n                  <Grid.Column className='border-left-bold'>\r\n                     <List className='note-info'>\r\n                        <List.Item className='title'>NOTE</List.Item>\r\n                        <List.Item>\r\n                           Your username can be 5-32 characters\r\n                        </List.Item>\r\n                        <List.Item>\r\n                           long and contain any of the following:\r\n                        </List.Item>\r\n                        <List.Item>• Lowercase characters (a-z)</List.Item>\r\n                        <List.Item>• Digits (0-9)</List.Item>\r\n                        <List.Item>• Special characters (@._-)</List.Item>\r\n                     </List>\r\n                  </Grid.Column>\r\n               </Grid.Row>\r\n            </Grid>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nCreateAccountSection.propTypes = {\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default CreateAccountSection\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nimport ProblemsImage from '../../images/icon-problems.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomFormInput = styled(Form.Input)`\r\n   &&& input {\r\n      width: 100%;\r\n      height: 64px;\r\n      border: 4px solid #f8f8f8;\r\n      padding: 0 0 0 20px;\r\n\r\n      font-size: 18px;\r\n      color: #4a4f54;\r\n      font-weight: 400;\r\n      background: 0;\r\n\r\n      position: relative;\r\n\r\n      :focus {\r\n         border-color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   &&&&& .spinner {\r\n      margin-right: 20px;\r\n\r\n      :before,\r\n      :after {\r\n         top: 28px;\r\n         width: 24px;\r\n         height: 24px;\r\n      }\r\n   }\r\n\r\n   &.problem > .input > input,\r\n   &.problem > .input > input:focus {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n\r\n   &.success > .input > input,\r\n   &.success > .input > input:focus {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n`\r\n\r\nconst CreateAccoungFormInput = ({\r\n   formLoader,\r\n   accountId,\r\n   handleChangeAccountId,\r\n   successMessage,\r\n   errorMessage\r\n}) => (\r\n   <CustomFormInput\r\n      loading={formLoader}\r\n      className={`create ${successMessage ? 'success' : ''}${\r\n         errorMessage ? 'problem' : ''\r\n      }`}\r\n      name='accountId'\r\n      value={accountId}\r\n      onChange={handleChangeAccountId}\r\n      placeholder='example: satoshi.near'\r\n   />\r\n)\r\n\r\nCreateAccoungFormInput.propTypes = {\r\n   formLoader: PropTypes.bool.isRequired,\r\n   accountId: PropTypes.string,\r\n   handleChangeAccountId: PropTypes.func.isRequired,\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default CreateAccoungFormInput\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Segment, Form, Button, Responsive } from 'semantic-ui-react'\r\n\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nimport CreateAccoungFormInput from './CreateAccoungFormInput'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst AccountForm = styled(Form)`\r\n   && button {\r\n      width: 288px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n      font-weight: 600;\r\n\r\n      background: #0072ce;\r\n      margin: 10px 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n         opacity: 1 !important;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   .recoverAccount {\r\n      display: block;\r\n      margin-top: 2em;\r\n      font-size: 18px\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n   }\r\n`\r\n\r\nconst CreateAccountForm = ({\r\n   formLoader,\r\n   accountId,\r\n   successMessage,\r\n   errorMessage,\r\n   handleSubmit,\r\n   handleChangeAccountId,\r\n   handleRecaptcha\r\n}) => (\r\n   <AccountForm autoComplete='off' onSubmit={handleSubmit}>\r\n      <CreateAccoungFormInput\r\n         formLoader={formLoader}\r\n         accountId={accountId}\r\n         handleChangeAccountId={handleChangeAccountId}\r\n         successMessage={successMessage}\r\n         errorMessage={errorMessage}\r\n      />\r\n\r\n      <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\r\n         {successMessage && (\r\n            <Segment basic className='alert-info success'>\r\n               Congrats! this name is available.\r\n            </Segment>\r\n         )}\r\n         {errorMessage && (\r\n            <Segment basic className='alert-info problem'>\r\n               Username is taken. Try something else.\r\n            </Segment>\r\n         )}\r\n      </Responsive>\r\n\r\n      <ReCAPTCHA\r\n         sitekey='6LfNjp8UAAAAAByZu30I-2-an14USj3yVbbUI3eN'\r\n         onChange={handleRecaptcha}\r\n      />\r\n\r\n      <Button type='submit' disabled={!successMessage}>\r\n         CREATE ACCOUNT\r\n      </Button>\r\n\r\n      <Link to='/recover-account' className=\"recoverAccount\">I already have an account</Link>\r\n   </AccountForm>\r\n)\r\n\r\nCreateAccountForm.propTypes = {\r\n   formLoader: PropTypes.bool.isRequired,\r\n   accountId: PropTypes.string,\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired,\r\n   handleSubmit: PropTypes.func.isRequired,\r\n   handleChangeAccountId: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CreateAccountForm\r\n","import React from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\n\r\nconst DisclaimerGrid = styled(Grid)`\r\n   && .disclaimer {\r\n      margin-left: 1rem;\r\n      margin-right: 1rem;\r\n      margin-top: 100px;\r\n\r\n      > .column {\r\n         padding-left: 0px;\r\n         padding-right: 0px;\r\n      }\r\n   }\r\n   .disclaimer-info {\r\n      font-weight: 600;\r\n      letter-spacing: 2px;\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && .disclaimer {\r\n         margin-top: 50px;\r\n         font-size: 12px;\r\n      }\r\n   }\r\n`\r\n\r\nconst Disclaimer = () => (\r\n    <DisclaimerGrid>\r\n        <Grid.Row className='disclaimer border-top-bold'>\r\n        <Grid.Column computer={16} tablet={16} mobile={16}>\r\n            <span className='disclaimer-info'>DISCLAIMER: </span>\r\n            This is a developers&apos; preview Wallet. It should be used for\r\n            NEAR Protocol DevNet only. Learn more at <a href='http://nearprotocol.com'>nearprotocol.com</a>\r\n        </Grid.Column>\r\n        </Grid.Row>\r\n    </DisclaimerGrid>\r\n)\r\n\r\nexport default Disclaimer\r\n","import React from 'react'\r\n\r\nimport { Image, List } from 'semantic-ui-react'\r\n\r\nimport NearLogoImage from '../../images/near_logo.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   background: #f8f8f8;\r\n   width: 360px;\r\n   float: right;\r\n\r\n   img {\r\n      width: 160px;\r\n   }\r\n\r\n   .text {\r\n      margin: 0 16px 16px 64px;\r\n      line-height: 20px !important;\r\n      color: #24272a;\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         margin-top: 14px;\r\n         float: left;\r\n         width: 100%;\r\n      }\r\n   }\r\n`\r\n\r\nconst NearInfo = () => (\r\n   <CustomList className='box'>\r\n      <List.Item>\r\n         <Image src={NearLogoImage} />\r\n      </List.Item>\r\n      <List.Item className='text'>\r\n         NEAR is a scalable computing and storage platform that changes how the\r\n         web works for the better.{' '}\r\n         <a href='https://nearprotocol.com/'>Learn More</a>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default NearInfo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\r\n\r\nimport { parse } from 'query-string'\r\n\r\nimport Disclaimer from '../common/Disclaimer'\r\nimport NearInfo from './NearInfo'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n         }\r\n         h1 {\r\n            margin-bottom: 0px;\r\n         }\r\n         h2 {\r\n            font-size: 16px !important;\r\n            line-height: 22px !important;\r\n            color: #999 !important;\r\n         }\r\n         .column.add {\r\n            text-align: left;\r\n            padding-top: 0px !important;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst CreateAccountContainer = ({ loader, children, location }) => (\r\n   <CustomContainer>\r\n      <Grid stackable>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column>\r\n               <h1>Create Account</h1>\r\n               <h2>\r\n                  Creating a NEAR account is easy. Just choose a username and\r\n                  you’re ready to go.\r\n               </h2>\r\n               {parse(location.search).reset_accounts && (\r\n                  <Header as='h3' className='color-blue'>\r\n                     You have been redirected to this page because we had to\r\n                     reset the developer accounts. Please create a new account.\r\n                     We apologize for the inconveience.\r\n                  </Header>\r\n               )}\r\n            </Grid.Column>\r\n            <Grid.Column className='add'>\r\n               <NearInfo />\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n\r\n      <Disclaimer />\r\n   </CustomContainer>\r\n)\r\n\r\nCreateAccountContainer.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired,\r\n   location: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CreateAccountContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport CreateAccountSection from './CreateAccountSection'\r\nimport CreateAccountForm from './CreateAccountForm'\r\nimport CreateAccountContainer from './CreateAccountContainer'\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nclass CreateAccount extends Component {\r\n   state = {\r\n      loader: false,\r\n      formLoader: false,\r\n      accountId: '',\r\n      successMessage: false,\r\n      errorMessage: false\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n      // this.props.handleRefreshUrl(this.props.location)\r\n      // this.props.handleRefreshAccount(this.wallet)\r\n   }\r\n\r\n   handleChangeAccountId = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: false\r\n      }))\r\n\r\n      if (!this.wallet.isLegitAccountId(value)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         formLoader: true\r\n      }))\r\n\r\n      this.timeout && clearTimeout(this.timeout)\r\n\r\n      this.timeout = setTimeout(() => {\r\n         this.wallet\r\n            .checkNewAccount(value)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  successMessage: true,\r\n                  errorMessage: false\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  successMessage: false,\r\n                  errorMessage: true\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  formLoader: false\r\n               }))\r\n            })\r\n      }, 500)\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.wallet.isLegitAccountId(this.state.accountId)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: true\r\n      }))\r\n\r\n      this.wallet\r\n         .createNewAccount(this.state.accountId)\r\n         .then(d => {\r\n            this.setState(() => ({\r\n               successMessage: true\r\n            }))\r\n            this.props.history.push(`/set-recovery/${this.state.accountId}`)\r\n         })\r\n         .catch(e => {\r\n            this.setState(() => ({\r\n               errorMessage: true\r\n            }))\r\n            console.error('Error creating account:', e)\r\n         })\r\n         .finally(() => {\r\n            this.setState(() => ({\r\n               formLoader: false\r\n            }))\r\n         })\r\n   }\r\n\r\n   handleRecaptcha = value => {\r\n      console.log(value)\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n\r\n      return (\r\n         <CreateAccountContainer loader={loader} location={this.props.location}>\r\n            <CreateAccountSection {...this.state}>\r\n               <CreateAccountForm\r\n                  {...this.state}\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleRecaptcha={this.handleRecaptcha}\r\n                  handleChangeAccountId={this.handleChangeAccountId}\r\n               />\r\n            </CreateAccountSection>\r\n         </CreateAccountContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const CreateAccountWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(CreateAccount)\r\n","import React from 'react'\r\nimport { Grid, Responsive } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\n\r\nconst RequestStatusBoxGrid = styled(Grid)`\r\n   &&& .alert-info {\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n      line-height: 64px;\r\n      margin: 0 0 0 0;\r\n      padding-left: 0px;\r\n\r\n      &.problem {\r\n         color: #ff585d;\r\n      }\r\n      &.success {\r\n         color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   && {\r\n      padding-left: 30px;\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      .note-box {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .alert-info {\r\n         padding: 0 0 0 24px;\r\n         line-height: 34px;\r\n         font-size: 14px;\r\n      }\r\n\r\n      && {\r\n         padding-left: 1rem;\r\n         margin-top: 10px;\r\n      }\r\n  }\r\n`\r\n\r\nconst RequestStatusBox = ({ requestStatus }) => (\r\n   requestStatus ?\r\n      <RequestStatusBoxGrid>\r\n         <Responsive\r\n            as={Grid.Row}\r\n            minWidth={Responsive.onlyTablet.minWidth}\r\n         >\r\n            <Grid.Column className={`alert-info ${requestStatus.success ? 'success' : 'problem'}`}>\r\n               {requestStatus.messageCode}\r\n            </Grid.Column>\r\n         </Responsive>\r\n      </RequestStatusBoxGrid>\r\n      : null\r\n)\r\n\r\nexport default RequestStatusBox","import React from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nimport RequestStatusBox from '../common/RequestStatusBox'\r\n\r\nconst AccountFormSection = ({ requestStatus, children }) => (\r\n   <Grid>\r\n      <Grid.Column computer={8} tablet={8} mobile={16}>\r\n         {children}\r\n      </Grid.Column>\r\n      <Grid.Column computer={8} tablet={8} mobile={16}>\r\n         <RequestStatusBox requestStatus={requestStatus} />\r\n      </Grid.Column>\r\n   </Grid>\r\n)\r\n\r\nexport default AccountFormSection\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button } from 'semantic-ui-react'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nimport ProblemsImage from '../../images/icon-problems.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst RecoveryInfoForm = styled(Form)`\r\n   &&& input {\r\n      width: 100%;\r\n      height: 64px;\r\n      border: 4px solid #f8f8f8;\r\n      padding: 0 0 0 20px;\r\n\r\n      font-size: 18px;\r\n      color: #4a4f54;\r\n      font-weight: 400;\r\n      background: 0;\r\n\r\n      position: relative;\r\n\r\n      :focus {\r\n         border-color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   &&&&& .spinner {\r\n      margin-right: 20px;\r\n\r\n      :before,\r\n      :after {\r\n         top: 28px;\r\n         width: 24px;\r\n         height: 24px;\r\n      }\r\n   }\r\n\r\n   .problem > .input > input {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .problem > .input > input:focus {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n\r\n   .success > .input > input {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .success > .input > input:focus {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n\r\n   &&& button {\r\n      width: 288px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n\r\n      background: #0072ce;\r\n      margin: 10px 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n         opacity: 1 !important;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   .ui.button {\r\n      height: 60px;\r\n      margin: 10px 0 0 1em;\r\n\r\n      background-color: #fff;\r\n      border-radius: 30px;\r\n      border: 4px solid #e6e6e6;\r\n      color: #999999;\r\n\r\n      font-size: 18px;\r\n      line-height: 24px;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background-color: #e6e6e6;\r\n         color: #fff;\r\n      }\r\n   }\r\n\r\n   & h3 {\r\n      margin-bottom: 1rem;\r\n   }\r\n\r\n   select.react-phone-number-input__country-select {\r\n      height: 100%;\r\n   }\r\n`\r\n\r\nconst SetRecoveryInfoForm = ({\r\n   formLoader,\r\n   phoneNumber,\r\n   sentSms,\r\n   isLegit,\r\n   requestStatus,\r\n   handleSubmit,\r\n   handleChange\r\n}) => (\r\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\r\n      {!sentSms && (\r\n         <Form.Field>\r\n            <h3>Phone Number</h3>\r\n            <PhoneInput\r\n               className={`create ${requestStatus ? (requestStatus.success ? 'success' : 'problem') : ''} ${formLoader ? 'loading' : '' }`}\r\n               name='phoneNumber'\r\n               value={phoneNumber}\r\n               onChange={ value => handleChange(null, { name: 'phoneNumber', value })}\r\n               placeholder='example: +1 555 123 4567'\r\n            />\r\n         </Form.Field>\r\n      )}\r\n\r\n      {sentSms && (\r\n         <Form.Field>\r\n            <h3>Security Code from SMS</h3>\r\n            <Input\r\n               name='securityCode'\r\n               onChange={handleChange}\r\n               placeholder='example: 123456'\r\n            />\r\n         </Form.Field>\r\n      )}\r\n\r\n      <Form.Field>\r\n         <Button type='submit' disabled={!isLegit}>PROTECT ACCOUNT</Button>\r\n         <Link to=\"/dashboard\" className=\"ui button\">NOT NOW</Link>\r\n      </Form.Field>\r\n   </RecoveryInfoForm>\r\n)\r\n\r\nexport default SetRecoveryInfoForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\r\n\r\nimport Disclaimer from '../common/Disclaimer'\r\nimport NearInfo from './NearInfo'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-bottom: 24px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .creating-info {\r\n         padding-right: 1rem;\r\n      }\r\n   }\r\n`\r\n\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nconst SetRecoveryInfoContainer = ({ loader, children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         <Grid.Row className='creating-info'>\r\n            <Grid.Column computer={8} tablet={8} mobile={16}>\r\n               <Header as='h1'>Protect your Account</Header>\r\n               <Header as='h2'>\r\n                  Enter your phone number to make your account easy for you to recover in the future.\r\n               </Header>\r\n               <Header as='h3' className='color-blue'>\r\n                  If you want to backup your account keys manually, you can skip this.\r\n                  However if you choose this option, we won't be able to assist you with account recovery.\r\n               </Header>\r\n            </Grid.Column>\r\n            <Grid.Column computer={8} tablet={8} mobile={16}>\r\n               <NearInfo />\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n\r\n      <Disclaimer />\r\n   </CustomContainer>\r\n)\r\n\r\nSetRecoveryInfoContainer.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired,\r\n   location: PropTypes.object.isRequired\r\n}\r\n\r\nexport default SetRecoveryInfoContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { isValidPhoneNumber } from 'react-phone-number-input'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport AccountFormSection from './AccountFormSection'\r\nimport SetRecoveryInfoForm from './SetRecoveryInfoForm'\r\nimport SetRecoveryInfoContainer from './SetRecoveryInfoContainer'\r\nimport { requestCode, validateCode } from '../../actions/account';\r\n\r\nclass SetRecoveryInfo extends Component {\r\n   state = {\r\n      loader: false,\r\n      phoneNumber: '',\r\n      isLegit: false,\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         isLegit: this.isLegitField(name, value)\r\n      }))\r\n   }\r\n\r\n   isLegitField(name, value) {\r\n      // TODO: Use some validation framework?\r\n      let validators = {\r\n         phoneNumber: isValidPhoneNumber,\r\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\r\n      }\r\n      return validators[name](value);\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.state.isLegit) {\r\n         return false\r\n      }\r\n\r\n      const { dispatch } = this.props;\r\n      if (!this.props.sentSms) {\r\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\r\n      } else {\r\n         dispatch(validateCode(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\r\n            .then(({error}) => {\r\n               if (error) return\r\n\r\n               let nextUrl = `/login/${(this.props.url && this.props.url.next_url) || '/'}`\r\n               setTimeout(() => {\r\n                  this.props.history.push(nextUrl)\r\n               }, 1500)\r\n            })\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n      const combinedState = {\r\n         ...this.props,\r\n         ...this.state,\r\n         isLegit: this.state.isLegit && !this.props.formLoader\r\n      }\r\n      return (\r\n         <SetRecoveryInfoContainer loader={loader} location={this.props.location}>\r\n            <AccountFormSection {...combinedState}>\r\n               <SetRecoveryInfoForm\r\n                  {...combinedState}\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleChange={this.handleChange}\r\n               />\r\n            </AccountFormSection>\r\n         </SetRecoveryInfoContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = ({ account }, { match }) => {\r\n   return {\r\n      ...account,\r\n      accountId: match.params.accountId\r\n   }\r\n}\r\n\r\nexport const SetRecoveryInfoWithRouter = connect(mapStateToProps)(SetRecoveryInfo)\r\n","import React from 'react'\r\nimport { Form, Input, Button } from 'semantic-ui-react'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nimport ProblemsImage from '../../images/icon-problems.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst RecoveryInfoForm = styled(Form)`\r\n   &&& input {\r\n      width: 100%;\r\n      height: 64px;\r\n      border: 4px solid #f8f8f8;\r\n      padding: 0 0 0 20px;\r\n\r\n      font-size: 18px;\r\n      color: #4a4f54;\r\n      font-weight: 400;\r\n      background: 0;\r\n\r\n      position: relative;\r\n\r\n      :focus {\r\n         border-color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   &&&&& .spinner {\r\n      margin-right: 20px;\r\n\r\n      :before,\r\n      :after {\r\n         top: 28px;\r\n         width: 24px;\r\n         height: 24px;\r\n      }\r\n   }\r\n\r\n   .problem > .input > input {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .problem > .input > input:focus {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n\r\n   .success > .input > input {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .success > .input > input:focus {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n\r\n   &&& button {\r\n      width: 288px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n\r\n      background: #0072ce;\r\n      margin: 10px 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n         opacity: 1 !important;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   .ui.button {\r\n      height: 60px;\r\n      margin: 10px 0 0 1em;\r\n\r\n      background-color: #fff;\r\n      border-radius: 30px;\r\n      border: 4px solid #e6e6e6;\r\n      color: #999999;\r\n\r\n      font-size: 18px;\r\n      line-height: 24px;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background-color: #e6e6e6;\r\n         color: #fff;\r\n      }\r\n   }\r\n\r\n   & h3 {\r\n      margin-bottom: 1rem;\r\n   }\r\n\r\n   select.react-phone-number-input__country-select {\r\n      height: 100%;\r\n   }\r\n`\r\n\r\nconst RecoverAccountForm = ({\r\n   formLoader,\r\n   accountId,\r\n   phoneNumber,\r\n   sentSms,\r\n   isLegit,\r\n   requestStatus,\r\n   handleSubmit,\r\n   handleChange\r\n}) => (\r\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\r\n      <Form.Field>\r\n         <h3>Username</h3>\r\n         <Form.Input\r\n            loading={formLoader}\r\n            className={`create ${requestStatus ? (requestStatus.success ? 'success' : 'problem') : ''}`}\r\n            name='accountId'\r\n            value={accountId}\r\n            onChange={handleChange}\r\n            placeholder='example: satoshi.near'\r\n            disabled={sentSms}\r\n         />\r\n      </Form.Field>\r\n      {!sentSms && (\r\n         <Form.Field>\r\n            <h3>Phone Number</h3>\r\n            <PhoneInput\r\n               className={`create ${requestStatus ? (requestStatus.success ? 'success' : 'problem') : ''} ${formLoader ? 'loading' : '' }`}\r\n               name='phoneNumber'\r\n               value={phoneNumber}\r\n               onChange={ value => handleChange(null, { name: 'phoneNumber', value })}\r\n               placeholder='example: +1 555 123 4567'\r\n            />\r\n         </Form.Field>\r\n      )}\r\n\r\n      {sentSms && (\r\n         <Form.Field>\r\n            <h3>Security Code from SMS</h3>\r\n            <Input\r\n               name='securityCode'\r\n               onChange={handleChange}\r\n               placeholder='example: 123456'\r\n            />\r\n         </Form.Field>\r\n      )}\r\n\r\n      <Form.Field>\r\n         <Button type='submit' disabled={!isLegit}>RECOVER ACCOUNT</Button>\r\n      </Form.Field>\r\n   </RecoveryInfoForm>\r\n)\r\n\r\nexport default RecoverAccountForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\r\n\r\nimport Disclaimer from '../common/Disclaimer'\r\nimport NearInfo from './NearInfo'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-bottom: 24px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .creating-info {\r\n         padding-right: 1rem;\r\n      }\r\n   }\r\n`\r\n\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nconst RecoverAccountContainer = ({ loader, children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         <Grid.Row className='creating-info'>\r\n            <Grid.Column computer={8} tablet={8} mobile={16}>\r\n               <Header as='h1'>Recover your Account</Header>\r\n               <Header as='h2'>\r\n                  Please enter your account name and phone number you used to protect account.\r\n               </Header>\r\n            </Grid.Column>\r\n            <Grid.Column computer={8} tablet={8} mobile={16}>\r\n               <NearInfo />\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n\r\n      <Disclaimer />\r\n   </CustomContainer>\r\n)\r\n\r\nRecoverAccountContainer.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired,\r\n   location: PropTypes.object.isRequired\r\n}\r\n\r\nexport default RecoverAccountContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { isValidPhoneNumber } from 'react-phone-number-input'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport AccountFormSection from './AccountFormSection'\r\nimport RecoverAccountForm from './RecoverAccountForm'\r\nimport RecoverAccountContainer from './RecoverAccountContainer'\r\nimport { requestCode, validateCode } from '../../actions/account';\r\n\r\nclass RecoverAccount extends Component {\r\n   state = {\r\n      loader: false,\r\n      phoneNumber: '',\r\n      isLegit: false,\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         isLegit: this.isLegitField(name, value)\r\n      }))\r\n   }\r\n\r\n   isLegitField(name, value) {\r\n      // TODO: Use some validation framework?\r\n      let validators = {\r\n         accountId: value => this.wallet.isLegitAccountId(value),\r\n         phoneNumber: isValidPhoneNumber,\r\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\r\n      }\r\n      return validators[name](value);\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.state.isLegit) {\r\n         return false\r\n      }\r\n\r\n      const { dispatch } = this.props;\r\n      if (!this.props.sentSms) {\r\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\r\n      } else {\r\n         dispatch(validateCode(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\r\n            .then(({error}) => {\r\n               if (error) return\r\n\r\n               let nextUrl = `/login/${(this.props.url && this.props.url.next_url) || '/'}`\r\n               setTimeout(() => {\r\n                  this.props.history.push(nextUrl)\r\n               }, 1500)\r\n            })\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n      const combinedState = {\r\n         ...this.props,\r\n         ...this.state,\r\n         isLegit: this.state.isLegit && !this.props.formLoader\r\n      }\r\n      return (\r\n         <RecoverAccountContainer loader={loader} location={this.props.location}>\r\n            <AccountFormSection {...combinedState}>\r\n               <RecoverAccountForm\r\n                  {...combinedState}\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleChange={this.handleChange}\r\n               />\r\n            </AccountFormSection>\r\n         </RecoverAccountContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = ({ account }, { match }) => {\r\n   return {\r\n      ...account,\r\n      accountId: match.params.accountId\r\n   }\r\n}\r\n\r\nexport const RecoverAccountWithRouter = connect(mapStateToProps)(RecoverAccount)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n   Container,\r\n   Loader,\r\n   Grid,\r\n   Dimmer,\r\n   Image,\r\n   List,\r\n   Segment\r\n} from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\nimport DenyImage from '../../images/icon-deny.svg'\r\nimport AppDefaultImage from '../../images/icon-app-default.svg'\r\nimport AuthorizeImage from '../../images/icon-authorize.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   && .title {\r\n      padding-top: 40px;\r\n   }\r\n\r\n   && .contract {\r\n      padding-bottom: 40px;\r\n   }\r\n\r\n   &&& .authorize {\r\n      margin-top: 40px;\r\n\r\n      .bg {\r\n         width: 64px;\r\n         height: 64px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n\r\n         > img {\r\n            width: 40px;\r\n            height: 40px;\r\n            margin-top: 8px;\r\n         }\r\n      }\r\n      .md {\r\n         > img {\r\n            margin-top: 8px;\r\n            padding: 0 24px;\r\n         }\r\n      }\r\n   }\r\n\r\n   && .cont {\r\n      background: #f8f8f8;\r\n      padding: 16px 0px;\r\n\r\n      > div {\r\n         padding: 20px 0 20px 50px;\r\n      }\r\n      img {\r\n         height: 24px;\r\n         margin-right: 6px;\r\n      }\r\n      div.item {\r\n         padding-top: 24px;\r\n\r\n         .content {\r\n            line-height: 24px;\r\n         }\r\n      }\r\n   }\r\n\r\n   .list-item {\r\n      background: url(${CheckBlueImage}) no-repeat left 24px;\r\n      background-size: 24px 24px;\r\n\r\n      > .content {\r\n         padding-left: 32px;\r\n      }\r\n   }\r\n\r\n   .list-item-deny {\r\n      background: url(${DenyImage}) no-repeat left 24px;\r\n      background-size: 24px 24px;\r\n\r\n      > .content {\r\n         padding-left: 32px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      && .cont {\r\n         > div {\r\n            padding: 20px 0 20px 20px;\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && .title {\r\n         padding-top: 0px;\r\n\r\n         h2 {\r\n            font-size: 18px !important;\r\n            line-height: 24px !important;\r\n         }\r\n      }\r\n\r\n      && .contract {\r\n         padding-top: 0px;\r\n         padding-bottom: 20px;\r\n      }\r\n\r\n      && .cont {\r\n         > div {\r\n            border: 0px;\r\n            padding: 10px 0 10px 0;\r\n\r\n            h3 {\r\n               font-size: 14px !important;\r\n            }\r\n         }\r\n\r\n         div.item {\r\n            padding-top: 24px;\r\n\r\n            .content {\r\n               font-size: 12px;\r\n               line-height: 14px;\r\n            }\r\n         }\r\n      }\r\n\r\n      &&& .authorize {\r\n         margin-top: 20px;\r\n      }\r\n   }\r\n`\r\n\r\nconst LoginContainer = ({ loader, children, appTitle }) => (\r\n   <CustomContainer>\r\n      <Dimmer.Dimmable as={Segment} basic>\r\n         <Grid>\r\n            <Dimmer inverted active={loader}>\r\n               <Loader />\r\n            </Dimmer>\r\n\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  <List horizontal className='authorize'>\r\n                     <List.Item className='bg'>\r\n                        <Image src={AccountGreyImage} />\r\n                     </List.Item>\r\n                     <List.Item className='md'>\r\n                        <Image src={AuthorizeImage} />\r\n                     </List.Item>\r\n                     <List.Item className='bg'>\r\n                        <Image src={AppDefaultImage} />\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row className='title'>\r\n               <Grid.Column\r\n                  as='h2'\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  <span className='font-bold'>{appTitle} </span> is requesting\r\n                  to use your NEAR account.\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row className='contract'>\r\n               <Grid.Column\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  Contract: @contractname.near\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  largeScreen={2}\r\n                  computer={1}\r\n                  mobile={16}\r\n                  only='large screen computer mobile'\r\n               />\r\n               <Grid.Column\r\n                  largeScreen={6}\r\n                  computer={7}\r\n                  tablet={8}\r\n                  mobile={8}\r\n                  className='cont'\r\n               >\r\n                  <List className='border-right-light'>\r\n                     <List.Item as='h3'>This allows:</List.Item>\r\n                     <List.Item className='list-item'>\r\n                        <List.Content className='color-black'>\r\n                           View your Account Name\r\n                        </List.Content>\r\n                     </List.Item>\r\n                     <List.Item className='list-item'>\r\n                        <List.Content className='color-black'>\r\n                           Write Chat messages with your name\r\n                        </List.Content>\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  largeScreen={6}\r\n                  computer={7}\r\n                  tablet={8}\r\n                  mobile={8}\r\n                  className='cont'\r\n               >\r\n                  <List>\r\n                     <List.Item as='h3'>Does not allow:</List.Item>\r\n                     <List.Item className='list-item-deny'>\r\n                        <List.Content className='color-black'>\r\n                           View your private account details\r\n                        </List.Content>\r\n                     </List.Item>\r\n                     <List.Item className='list-item-deny'>\r\n                        <List.Content className='color-black'>\r\n                           Buy, Sell, or Transfer on your behalf\r\n                        </List.Content>\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  largeScreen={2}\r\n                  computer={1}\r\n                  mobile={16}\r\n                  only='large screen computer mobile'\r\n               />\r\n            </Grid.Row>\r\n         </Grid>\r\n\r\n         {children}\r\n      </Dimmer.Dimmable>\r\n   </CustomContainer>\r\n)\r\n\r\nLoginContainer.propTypes = {\r\n   loader: PropTypes.bool,\r\n   children: PropTypes.element,\r\n   appTitle: PropTypes.string\r\n}\r\n\r\nexport default LoginContainer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, Segment, List, Form, Button } from 'semantic-ui-react'\r\n\r\nimport AddBlueImage from '../../images/icon-add-blue.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\nimport ArrowUpImage from '../../images/icon-arrow-up.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   && button {\r\n      width: 190px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n\r\n      background: #0072ce;\r\n      margin: 0 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   && .deny {\r\n      width: 190px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #e6e6e6;\r\n\r\n      background: transparent;\r\n\r\n      font-size: 18px;\r\n      color: #999;\r\n      letter-spacing: 2px;\r\n\r\n      margin: 0 0 0 0;\r\n\r\n      :hover {\r\n         border: 4px solid #0072ce;\r\n         color: #0072ce;\r\n      }\r\n      :active,\r\n      :focus {\r\n         border: 4px solid #0072ce;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   .segment {\r\n      width: 100%;\r\n      padding: 0px;\r\n      margin: 0px;\r\n   }\r\n\r\n   .dropdown-list {\r\n      width: 100%;\r\n      position: relative;\r\n      cursor: pointer;\r\n\r\n      .element {\r\n         width: 100%;\r\n         min-height: 64px;\r\n         border: solid 4px #24272a;\r\n         margin: 0px;\r\n         padding: 0px;\r\n\r\n         background: #fff;\r\n\r\n         :hover {\r\n            background: #f8f8f8;\r\n         }\r\n         .img {\r\n            float: left;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-color: #d8d8d8;\r\n            background-image: url(${AccountGreyImage});\r\n            background-position: center center;\r\n            background-repeat: no-repeat;\r\n            background-size: 36px 36px;\r\n         }\r\n         .name {\r\n            margin-top: 12px;\r\n            margin-left: 18px;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n            flex: 1;\r\n         }\r\n         .arrow {\r\n            float: right;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-image: url(${ArrowDownImage});\r\n            background-repeat: no-repeat;\r\n            background-position: center center;\r\n            background-size: 24px auto;\r\n\r\n            &.up {\r\n               background-image: url(${ArrowUpImage});\r\n            }\r\n         }\r\n      }\r\n      .trigger {\r\n         display: flex;\r\n      }\r\n      .dropdown {\r\n         .element {\r\n            margin-top: -4px;\r\n            display: flex;\r\n         }\r\n      }\r\n      .create-account {\r\n         width: 100%;\r\n         min-height: 64px;\r\n         border: solid 4px #24272a;\r\n         margin: 0px;\r\n         padding: 0px;\r\n         cursor: pointer;\r\n\r\n         background: #24272a;\r\n\r\n         :hover {\r\n         }\r\n         .img {\r\n            float: left;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-image: url(${AddBlueImage});\r\n            background-position: center center;\r\n            background-repeat: no-repeat;\r\n            background-size: 24px 24px;\r\n         }\r\n         .name {\r\n            float: left;\r\n            margin-top: 12px;\r\n            margin-left: 18px;\r\n         }\r\n         .arrow {\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && {\r\n         button,\r\n         .deny {\r\n            width: 140px;\r\n            border-radius: 35px;\r\n         }\r\n\r\n         .buttons,\r\n         .dropdown {\r\n            .column {\r\n               padding: 0px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst LoginForm = ({\r\n   dropdown,\r\n   account,\r\n   handleOnClick,\r\n   handleDeny,\r\n   handleAllow,\r\n   handleSelectAccount,\r\n   redirectCreateAccount\r\n}) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='dropdown'>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\r\n            <Segment className='dropdown-list' onClick={handleOnClick} basic>\r\n               <List verticalAlign='middle' className={`element trigger`}>\r\n                  <List.Item className='img' />\r\n                  <List.Item as='h3' className='name'>\r\n                     @{account.accountId}\r\n                  </List.Item>\r\n                  <List.Item className={`arrow ${dropdown ? 'up' : ''}`} />\r\n               </List>\r\n\r\n               <Segment basic className={`dropdown ${dropdown ? '' : 'hide'}`}>\r\n                  {Object.keys(account.accounts)\r\n                     .filter(a => a !== account.accountId)\r\n                     .map((account, i) => (\r\n                        <List\r\n                           key={`lf-${i}`}\r\n                           onClick={() => handleSelectAccount(account)}\r\n                           className='element'\r\n                        >\r\n                           <List.Item className='img' />\r\n                           <List.Item as='h3' className='name'>\r\n                              @{account}\r\n                           </List.Item>\r\n                        </List>\r\n                     ))}\r\n                  <List\r\n                     onClick={redirectCreateAccount}\r\n                     className='create-account'\r\n                  >\r\n                     <List.Item className='img' />\r\n                     <List.Item className='h3 name color-seafoam-blue'>\r\n                        Create New Account\r\n                     </List.Item>\r\n                  </List>\r\n               </Segment>\r\n            </Segment>\r\n         </Grid.Column>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n      </Grid.Row>\r\n      <Grid.Row className={`buttons ${dropdown ? 'hide' : ''}`}>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\r\n            <Form action={account.url.success_url}>\r\n               <input\r\n                  type='hidden'\r\n                  name='authToken'\r\n                  value={account.authToken}\r\n               />\r\n               <input\r\n                  type='hidden'\r\n                  name='accountId'\r\n                  value={account.accountId}\r\n               />\r\n               <Button className='deny' onClick={handleDeny}>\r\n                  DENY\r\n               </Button>\r\n               <Button floated='right' onClick={handleAllow}>\r\n                  ALLOW\r\n               </Button>\r\n            </Form>\r\n         </Grid.Column>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nLoginForm.propTypes = {\r\n   dropdown: PropTypes.bool.isRequired,\r\n   handleOnClick: PropTypes.func.isRequired,\r\n   handleDeny: PropTypes.func.isRequired,\r\n   handleSelectAccount: PropTypes.func.isRequired,\r\n   redirectCreateAccount: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(mapStateToProps)(LoginForm)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport LoginContainer from './LoginContainer'\r\nimport LoginForm from './LoginForm'\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nclass Login extends Component {\r\n   state = {\r\n      dropdown: false\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   handleOnClick = () => {\r\n      this.setState({\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handleDeny = e => {\r\n      e.preventDefault();\r\n      if (this.props.account.url.failure_url) {\r\n         window.location.href = this.props.account.url.failure_url\r\n      }\r\n   }\r\n\r\n   handleAllow = e => {\r\n      e.preventDefault()\r\n      this.wallet.addAccessKey(this.props.account.accountId, this.props.account.url.contract_id, this.props.account.url.public_key, this.props.account.url.success_url);\r\n   }\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <LoginContainer\r\n            loader={account.loader}\r\n            appTitle={account.url && account.url.app_title}\r\n         >\r\n            {account.accountId && (\r\n               <LoginForm\r\n                  {...this.state}\r\n                  handleOnClick={this.handleOnClick}\r\n                  handleDeny={this.handleDeny}\r\n                  handleAllow={this.handleAllow}\r\n                  handleSelectAccount={this.handleSelectAccount}\r\n                  redirectCreateAccount={this.redirectCreateAccount}\r\n               />\r\n            )}\r\n         </LoginContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const LoginWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Login))\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Image, List } from 'semantic-ui-react'\r\n\r\nimport ArrowLeftImage from '../../images/icon-arrow-left.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationTabList = styled(List)`\r\n   .ui.button {\r\n      background: #f8f8f8;\r\n      color: #0072ce;\r\n      height: 36px;\r\n      font-weight: 500;\r\n      padding-left: 1em;\r\n      padding-right: 1em;\r\n\r\n      &.active {\r\n         background: #999999;\r\n         color: #ffffff;\r\n      }\r\n\r\n      :hover {\r\n         background: #999999;\r\n         color: #ffffff;\r\n      }\r\n   }\r\n\r\n   .ui.image {\r\n      width: 0.5em;\r\n      padding-bottom: 0px;\r\n   }\r\n`\r\n\r\nconst LEFT_PAGE = 'LEFT'\r\nconst RIGHT_PAGE = 'RIGHT'\r\n\r\nconst range = (from, to, step = 1) => {\r\n   let i = from\r\n   const range = []\r\n\r\n   while (i <= to) {\r\n      range.push(i)\r\n      i += step\r\n   }\r\n\r\n   return range\r\n}\r\n\r\nexport class PaginationTab extends Component {\r\n   static propTypes = {\r\n      totalRecords: PropTypes.number.isRequired,\r\n      pageLimit: PropTypes.number,\r\n      pageNeighbors: PropTypes.number,\r\n      onPageChanged: PropTypes.func,\r\n      initialPage: PropTypes.number.isRequired\r\n   }\r\n\r\n   static defaultProps = {\r\n      pageLimit: 10,\r\n      pageNeighbors: 1,\r\n      onPageChange: () => {},\r\n      initialPage: 0\r\n   }\r\n\r\n   state = {\r\n      currentPage: null\r\n   }\r\n\r\n   getTotalPages() {\r\n      return Math.ceil(this.props.totalRecords / this.props.pageLimit)\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ currentPage: this.props.initialPage + 1 })\r\n   }\r\n\r\n   gotoPage = page => {\r\n      const currentPage = this.props.onPageChanged(page) + 1\r\n      this.setState({ currentPage })\r\n   }\r\n\r\n   handleClick = (page, evt) => {\r\n      evt.preventDefault()\r\n      this.gotoPage(page)\r\n      evt.target.blur()\r\n   }\r\n\r\n   handleMoveLeft = evt => {\r\n      evt.preventDefault()\r\n      this.gotoPage(this.state.currentPage - this.props.pageNeighbors * 2 - 1)\r\n      evt.target.blur()\r\n   }\r\n\r\n   handleMoveRight = evt => {\r\n      evt.preventDefault()\r\n      this.gotoPage(this.state.currentPage + this.props.pageNeighbors * 2 + 1)\r\n      evt.target.blur()\r\n   }\r\n\r\n   fetchPageNumbers = () => {\r\n      const totalPages = this.getTotalPages()\r\n      const currentPage = this.state.currentPage\r\n      const pageNeighbors = this.props.pageNeighbors\r\n\r\n      const totalNumbers = pageNeighbors * 2 + 3\r\n      const totalBlocks = totalNumbers + 2\r\n\r\n      if (totalPages > totalBlocks) {\r\n         let pages = []\r\n\r\n         const leftBound = currentPage - pageNeighbors\r\n         const rightBound = currentPage + pageNeighbors\r\n         const beforeLastPage = totalPages - 1\r\n\r\n         const startPage = leftBound > 2 ? leftBound : 2\r\n         const endPage =\r\n            rightBound < beforeLastPage ? rightBound : beforeLastPage\r\n\r\n         pages = range(startPage, endPage)\r\n\r\n         const pagesCount = pages.length\r\n         const singleSpillOffset = totalNumbers - pagesCount - 1\r\n\r\n         const leftSpill = startPage > 2\r\n         const rightSpill = endPage < beforeLastPage\r\n\r\n         const leftSpillPage = LEFT_PAGE\r\n         const rightSpillPage = RIGHT_PAGE\r\n\r\n         if (leftSpill && !rightSpill) {\r\n            const extraPages = range(\r\n               startPage - singleSpillOffset,\r\n               startPage - 1\r\n            )\r\n            pages = [leftSpillPage, ...extraPages, ...pages]\r\n         } else if (!leftSpill && rightSpill) {\r\n            const extraPages = range(endPage + 1, endPage + singleSpillOffset)\r\n            pages = [...pages, ...extraPages, rightSpillPage]\r\n         } else if (leftSpill && rightSpill) {\r\n            pages = [leftSpillPage, ...pages, rightSpillPage]\r\n         }\r\n\r\n         return [1, ...pages, totalPages]\r\n      }\r\n\r\n      return range(1, totalPages)\r\n   }\r\n\r\n   render() {\r\n      if (!this.props.totalRecords) return null\r\n      if (this.totalPages === 1) return null\r\n\r\n      const pages = this.fetchPageNumbers()\r\n      return (\r\n         <PaginationTabList horizontal className='PaginationTab'>\r\n            {pages.map((page, index) => {\r\n               if (page === LEFT_PAGE)\r\n                  return (\r\n                     <List.Item key={index}>\r\n                        <Button circular onClick={this.handleMoveLeft}>\r\n                           <Image src={ArrowLeftImage} />\r\n                        </Button>\r\n                     </List.Item>\r\n                  )\r\n\r\n               if (page === RIGHT_PAGE)\r\n                  return (\r\n                     <List.Item key={index}>\r\n                        <Button circular onClick={this.handleMoveRight}>\r\n                           ...\r\n                        </Button>\r\n                     </List.Item>\r\n                  )\r\n\r\n               return (\r\n                  <List.Item key={index}>\r\n                     <Button\r\n                        circular\r\n                        active={this.state.currentPage === page}\r\n                        onClick={e => this.handleClick(page, e)}\r\n                     >\r\n                        {page}\r\n                     </Button>\r\n                  </List.Item>\r\n               )\r\n            })}\r\n         </PaginationTabList>\r\n      )\r\n   }\r\n}\r\n","import React from 'react'\r\n\r\nimport { Button, List } from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationPagingList = styled(List)`\r\n   && .paging-dropdown-tr {\r\n      width: 66px;\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n\r\n      border-radius: 18px;\r\n      background-position: 38px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 12px auto;\r\n      padding: 0 20px 0 0;\r\n\r\n      line-height: 32px;\r\n   }\r\n\r\n   && .paging-dropdown {\r\n      padding-top: 0px;\r\n      width: 66px;\r\n      min-height: 30px;\r\n\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 6px;\r\n\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 7px;\r\n      }\r\n\r\n      & > .item > .content {\r\n         font-size: 14px;\r\n         line-height: 18px;\r\n         font-weight: 600;\r\n         padding-left: 6px;\r\n      }\r\n   }\r\n\r\n   &&& .filter-by {\r\n      padding-left: 10px;\r\n      padding-right: 20px;\r\n   }\r\n`\r\n\r\nconst pagingTypes = [10, 20, 50, 100]\r\n\r\nconst PaginationFilter = ({\r\n   handleOnClickPaging,\r\n   pagingValue,\r\n   pagingDropdown,\r\n   handlePagingDropdownClick\r\n}) => (\r\n   <PaginationPagingList horizontal className='border-right-light'>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClickPaging}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='paging-dropdown-tr'\r\n            style={{ backgroundImage: ` url(${ArrowDown})` }}\r\n         >\r\n            {pagingValue}\r\n         </Button>\r\n\r\n         <List\r\n            selection\r\n            verticalAlign='middle'\r\n            className={`paging-dropdown ${pagingDropdown ? '' : 'hide'}`}\r\n         >\r\n            {pagingTypes.map((type, i) => (\r\n               <List.Item\r\n                  key={`page-${i}`}\r\n                  onClick={() => handlePagingDropdownClick(type)}\r\n               >\r\n                  <List.Content verticalAlign='middle'>{type}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n      <List.Item as='h6' className='filter-by'>\r\n         PER PAGE\r\n      </List.Item>\r\n   </PaginationPagingList>\r\n)\r\n\r\nexport default PaginationFilter\r\n","import React, { Fragment } from 'react'\r\n\r\nconst PaginationSummary = ({ pageNumber, pageLimit, totalRecords }) => (\r\n   <Fragment>\r\n      <span className='color-charcoal-grey'>\r\n         {pageNumber * pageLimit + 1}-{(pageNumber + 1) * pageLimit}{' '}\r\n      </span>\r\n      OF {totalRecords} TOTAL\r\n   </Fragment>\r\n)\r\n\r\nexport default PaginationSummary\r\n","import React from 'react'\r\n\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nimport MSearchImage from '../../images/icon-m-search.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst SearchForm = styled(Form)`\r\n   float: right;\r\n\r\n   &&&& .search input {\r\n      width: 360px;\r\n\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      border-radius: 25px;\r\n      padding-left: 40px;\r\n\r\n      font-size: 14px;\r\n\r\n      background-color: #f8f8f8;\r\n      background-image: url(${MSearchImage});\r\n      background-position: 12px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 14px auto;\r\n   }\r\n`\r\n\r\nconst Search = ({ handleSubmit, handleChange, search }) => (\r\n   <SearchForm onSubmit={handleSubmit}>\r\n      <Form.Input\r\n         className='search'\r\n         name='search'\r\n         value={search}\r\n         onChange={handleChange}\r\n         placeholder='Search transactions and receipts...'\r\n      />\r\n   </SearchForm>\r\n)\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nimport { Button, List } from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationFilterList = styled(List)`\r\n   && .sortby-dropdown-tr {\r\n      width: 210px;\r\n      line-height: 32px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n      border-radius: 18px;\r\n      background-position: 180px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 12px auto;\r\n      background-image: url(${ArrowDown});\r\n      text-align: left;\r\n      padding-top: 0px;\r\n      padding-bottom: 0px;\r\n      letter-spacing: 1.8px;\r\n   }\r\n\r\n   && .sortby-dropdown {\r\n      padding-top: 0px;\r\n      width: 210px;\r\n      min-height: 30px;\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 2px;\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 10px;\r\n      }\r\n\r\n      .item {\r\n         height: 36px !important;\r\n\r\n         img {\r\n            width: 18px !important;\r\n            margin: 0 10px !important;\r\n         }\r\n         .content {\r\n            margin: 2px 0 0 0 !important;\r\n         }\r\n      }\r\n   }\r\n\r\n   &&& .sortby {\r\n      padding-left: 10px;\r\n      padding-right: 0px;\r\n   }\r\n`\r\n\r\nconst PaginationFilter = ({\r\n   filterTypesByType,\r\n   handleOnClick,\r\n   handleDropdownClick,\r\n   dropdown\r\n}) => (\r\n   <PaginationFilterList horizontal>\r\n      <List.Item as='h6' className='sortby'>\r\n         SORT BY\r\n      </List.Item>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClick}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='sortby-dropdown-tr'\r\n         >\r\n            RECENTLY ADDED\r\n         </Button>\r\n\r\n         <List\r\n            selection\r\n            verticalAlign='middle'\r\n            className={`sortby-dropdown ${dropdown ? '' : 'hide'}`}\r\n         >\r\n            {filterTypesByType.map((type, i) => (\r\n               <List.Item\r\n                  key={`sortby-${i}`}\r\n                  onClick={() => handleDropdownClick(type.img)}\r\n               >\r\n                  <List.Content as='h6'>{type.name}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n   </PaginationFilterList>\r\n)\r\n\r\nexport default PaginationFilter\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Grid, List, Image, Button } from 'semantic-ui-react'\r\n\r\nimport TransactionFilter from '../../images/icon-m-filter.svg'\r\nimport CloseImage from '../../images/icon-close.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport MTransactionImage from '../../images/icon-m-transaction.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport { PaginationTab } from './PaginationTab'\r\nimport PaginationPaging from './PaginationPaging'\r\nimport PaginationSummary from './PaginationSummary'\r\nimport Search from '../common/Search'\r\n\r\nimport PaginationSortBy from './PaginationSortBy'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationBlockGrid = styled(Grid)`\r\n   & > .row:first-child {\r\n      min-height: 70px;\r\n   }\r\n\r\n   &&& .pagination-block-paging {\r\n      padding: 0px;\r\n   }\r\n\r\n   &&& .pagination-block-top {\r\n      padding-left: 0px;\r\n\r\n      &-paging-summary {\r\n         padding-left: 20px;\r\n      }\r\n\r\n      &-search {\r\n         padding: 0px;\r\n      }\r\n\r\n      &-paging {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   &&& .show-sub {\r\n      padding: 0 0 0 0;\r\n      margin-top: -16px;\r\n   }\r\n\r\n   &&& .sub-list {\r\n      background: #fff;\r\n      width: 100%;\r\n      min-height: 448px;\r\n      padding: 0 0;\r\n\r\n      > .item {\r\n         padding: 18px 20px;\r\n      }\r\n\r\n      .img {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 20px;\r\n         right: 20px;\r\n         padding: 0px;\r\n\r\n         img {\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      .text {\r\n         margin: 0 10% 0 0;\r\n         color: #24272a;\r\n         float: left;\r\n\r\n         .header {\r\n            font-family: 'benton-sans', sans-serif;\r\n         }\r\n         .content {\r\n            color: #999999;\r\n            padding-top: 12px;\r\n            line-height: 20px;\r\n         }\r\n      }\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 0 0 0;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .remove-connection {\r\n         > button {\r\n            width: 100%;\r\n            background-color: #ff585d;\r\n            border: 2px solid #ff585d;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               background: #fff;\r\n               color: #ff585d;\r\n            }\r\n         }\r\n      }\r\n      .recent-transactions {\r\n         background-color: #f8f8f8;\r\n         margin: 0 0 0 0;\r\n      }\r\n      .recent-transactions-title {\r\n         padding: 0 0 0 24px;\r\n         background: url(${MTransactionImage}) no-repeat left 2px;\r\n         background-size: 12px auto;\r\n      }\r\n      .recent-transactions-row {\r\n         margin: 0 0 0 24px;\r\n         padding: 12px 0;\r\n         border-bottom: 2px solid #e6e6e6;\r\n      }\r\n      .recent-transactions-row:last-child {\r\n         border-bottom: 0px solid #e6e6e6;\r\n      }\r\n\r\n      .authorized-transactions {\r\n         background-color: #fff;\r\n         margin: 0 0 0 0;\r\n         padding-top: 0px;\r\n      }\r\n      .authorized-transactions-title {\r\n         padding: 12px 0 0 24px;\r\n         background: url(${MTransactionImage}) no-repeat left 14px;\r\n         background-size: 12px auto;\r\n      }\r\n      .authorized-transactions-row {\r\n         margin: 0 0 0 24px;\r\n         padding: 12px 0 0 32px;\r\n         background: url(${CheckBlueImage}) no-repeat left 14px;\r\n         line-height: 32px;\r\n      }\r\n      .authorized-transactions-row:last-child {\r\n         border-bottom: 0px solid #e6e6e6;\r\n      }\r\n\r\n      .send-money {\r\n         > .button {\r\n            width: 100%;\r\n            background-color: #5ace84;\r\n            border: 2px solid #5ace84;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               background-color: #fff;\r\n               color: #5ace84;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   @media screen and (max-width: 991px) {\r\n      &&& .sub-list {\r\n         .img {\r\n            top: 6px;\r\n            right: 6px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nclass PaginationBlock extends Component {\r\n   static defaultProps = {\r\n      onPageChanged: () => {}\r\n   }\r\n\r\n   state = {\r\n      search: '',\r\n      dropdown: false,\r\n      dropdownType: this.props.type\r\n         ? this.props.filterTypes[this.props.type].img\r\n         : TransactionFilter,\r\n      pagingDropdown: false,\r\n      pagingValue: 10,\r\n\r\n      buttonRadio: false\r\n   }\r\n\r\n   handleOnClick = () => {\r\n      this.setState({\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handleOnClickPaging = () => {\r\n      this.setState({\r\n         pagingDropdown: !this.state.pagingDropdown\r\n      })\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({ [name]: value }))\r\n   }\r\n\r\n   handleSubmit = () => {\r\n      console.log('not ready yet')\r\n   }\r\n\r\n   handleDropdownClick = dropdownType => {\r\n      this.setState({\r\n         dropdownType,\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handlePagingDropdownClick = pagingValue => {\r\n      this.setState({\r\n         pagingValue,\r\n         pagingDropdown: !this.state.pagingDropdown\r\n      })\r\n\r\n      this.props.onPageChanged(1, pagingValue)\r\n   }\r\n\r\n   handleTabChange(pageNumber) {\r\n      // this.setState({\r\n      //    pageNumber: pageNumber,\r\n      //    loader: true,\r\n      // })\r\n      // this.updateBlock(pageNumber)\r\n      // return pageNumber\r\n   }\r\n\r\n   buttonRadioClick = () => {\r\n      this.setState(state => ({\r\n         buttonRadio: !state.buttonRadio\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         filterTypes,\r\n         type,\r\n         pageNumber = 0,\r\n         showSub = false,\r\n         subPage\r\n      } = this.props\r\n\r\n      const {\r\n         dropdownType,\r\n         dropdown,\r\n         search,\r\n         pagingValue,\r\n         pagingDropdown\r\n      } = this.state\r\n\r\n      const {\r\n         totalRecords = 1100,\r\n         pageLimit = 10,\r\n         initialPage = 0,\r\n         onPageChanged = () => {},\r\n         pageNeighbors = 1\r\n      } = this.props\r\n\r\n      const filterTypesByType = type ? [filterTypes[type]] : filterTypes\r\n\r\n      return (\r\n         <PaginationBlockGrid\r\n            className='border-top-bold border-bottom-bold'\r\n            stackable\r\n            columns={2}\r\n         >\r\n            <Grid.Row className='border-bottom-light'>\r\n               <Grid.Column\r\n                  width={10}\r\n                  verticalAlign='middle'\r\n                  className='pagination-block-top'\r\n               >\r\n                  <PaginationSortBy\r\n                     filterTypesByType={filterTypesByType}\r\n                     handleOnClick={this.handleOnClick}\r\n                     dropdownType={dropdownType}\r\n                     handleDropdownClick={this.handleDropdownClick}\r\n                     dropdown={dropdown}\r\n                  />\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  width={6}\r\n                  textAlign='right'\r\n                  verticalAlign='middle'\r\n                  className='pagination-block-top-search'\r\n               >\r\n                  <Search\r\n                     handleSubmit={this.handleSubmit}\r\n                     handleChange={this.handleChange}\r\n                     search={search}\r\n                  />\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n               <Grid.Column computer={showSub ? 10 : 16}>\r\n                  <Grid>{this.props.children}</Grid>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  computer={6}\r\n                  className={`show-sub ${showSub ? `` : `hide`}`}\r\n               >\r\n                  <List className='box sub-list'>\r\n                     <List.Item className='img'>\r\n                        <Image\r\n                           onClick={() => this.props.toggleShowSub()}\r\n                           src={CloseImage}\r\n                        />\r\n                     </List.Item>\r\n\r\n                     {subPage === 'authorized-apps' ? (\r\n                        <Fragment>\r\n                           <List.Item>\r\n                              <List horizontal>\r\n                                 <List.Item>\r\n                                    <div\r\n                                       className='main-image'\r\n                                       style={{ backgroundColor: '#fff' }}\r\n                                    >\r\n                                       <Image src={NearkatImage} align='left' />\r\n                                    </div>\r\n                                 </List.Item>\r\n                                 <List.Item>\r\n                                    <List.Header as='h2'>\r\n                                       NEAR Place\r\n                                    </List.Header>\r\n                                    <List.Item as='h5' className='color-blue'>\r\n                                       www.nearplace.com\r\n                                    </List.Item>\r\n                                 </List.Item>\r\n                              </List>\r\n                           </List.Item>\r\n                           <List.Item className='remove-connection border-top'>\r\n                              <Button>DEAUTHORIZE</Button>\r\n                           </List.Item>\r\n                           <List.Item className='authorized-transactions'>\r\n                              <List.Item\r\n                                 as='h6'\r\n                                 className='authorized-transactions-title border-top'\r\n                              >\r\n                                 AUTHORIZED TO\r\n                              </List.Item>\r\n                              <List.Item className='authorized-transactions-row color-black'>\r\n                                 View your Account Name\r\n                              </List.Item>\r\n                              <List.Item className='authorized-transactions-row color-black'>\r\n                                 Do something else on your behalf\r\n                              </List.Item>\r\n                           </List.Item>\r\n                           <List.Item className='recent-transactions'>\r\n                              <List.Item\r\n                                 as='h6'\r\n                                 className='recent-transactions-title border-top'\r\n                              >\r\n                                 RECENT TRANSACTIONS\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Another thing here</List.Header>\r\n                                 <List.Item>3h ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>\r\n                                    Another Thing Happened\r\n                                 </List.Header>\r\n                                 <List.Item>3d ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>\r\n                                    In-app purchase: 20 Ⓝ\r\n                                 </List.Header>\r\n                                 <List.Item>1w ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Staked: 10 Ⓝ</List.Header>\r\n                                 <List.Item>2w ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Authorized</List.Header>\r\n                                 <List.Item>2w ago</List.Item>\r\n                              </List.Item>\r\n                           </List.Item>\r\n                        </Fragment>\r\n                     ) : (\r\n                        <Fragment>\r\n                           <List.Item>\r\n                              <List horizontal>\r\n                                 <List.Item>\r\n                                    <div className='main-image'>\r\n                                       <Image\r\n                                          src={AccountGreyImage}\r\n                                          align='left'\r\n                                       />\r\n                                    </div>\r\n                                 </List.Item>\r\n                                 <List.Item>\r\n                                    <List.Header as='h2'>\r\n                                       Alex Skidanov\r\n                                    </List.Header>\r\n                                    <List.Item as='h5'>@alex.near</List.Item>\r\n                                 </List.Item>\r\n                              </List>\r\n                           </List.Item>\r\n                           <List.Item className='remove-connection border-top'>\r\n                              <Button>REMOVE CONNECTION</Button>\r\n                           </List.Item>\r\n                           <List.Item className='recent-transactions'>\r\n                              <List.Item\r\n                                 as='h6'\r\n                                 className='recent-transactions-title border-top'\r\n                              >\r\n                                 RECENT TRANSACTIONS\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>You sent 20 Ⓝ</List.Header>\r\n                                 <List.Item>3h ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Alex sent you 1020 Ⓝ</List.Header>\r\n                                 <List.Item>3d ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>\r\n                                    You and Alex played NEAR Chess\r\n                                 </List.Header>\r\n                                 <List.Item>1w ago</List.Item>\r\n                              </List.Item>\r\n                           </List.Item>\r\n                           <List.Item className='send-money border-top'>\r\n                              <Button as={Link} to='/send-money/marcin'>\r\n                                 SEND MONEY\r\n                              </Button>\r\n                           </List.Item>\r\n                        </Fragment>\r\n                     )}\r\n                  </List>\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row className='border-top-light'>\r\n               <Grid.Column\r\n                  width={8}\r\n                  verticalAlign='middle'\r\n                  className='pagination-block-top-paging'\r\n               >\r\n                  <List horizontal verticalAlign='middle'>\r\n                     <List.Item width={6}>\r\n                        <PaginationPaging\r\n                           handleOnClickPaging={this.handleOnClickPaging}\r\n                           pagingValue={pagingValue}\r\n                           pagingDropdown={pagingDropdown}\r\n                           handlePagingDropdownClick={\r\n                              this.handlePagingDropdownClick\r\n                           }\r\n                        />\r\n                     </List.Item>\r\n                     <List.Item\r\n                        width={6}\r\n                        as='h6'\r\n                        className='pagination-block-top-paging-summary'\r\n                     >\r\n                        <PaginationSummary\r\n                           pageNumber={pageNumber}\r\n                           pageLimit={pageLimit}\r\n                           totalRecords={totalRecords}\r\n                        />\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  width={8}\r\n                  className='pagination-block-paging'\r\n                  textAlign='right'\r\n               >\r\n                  <PaginationTab\r\n                     totalRecords={totalRecords}\r\n                     pageLimit={pageLimit}\r\n                     initialPage={initialPage}\r\n                     onPageChanged={onPageChanged}\r\n                     pageNeighbors={pageNeighbors}\r\n                  />\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n         </PaginationBlockGrid>\r\n      )\r\n   }\r\n}\r\n\r\nexport default PaginationBlock\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n         text-align: right;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n            text-align: center;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ContactsContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column computer='10' tablet='10' mobile='16' as='h1'>\r\n               Contacts\r\n            </Grid.Column>\r\n            <Grid.Column\r\n               computer='6'\r\n               tablet='6'\r\n               mobile='16'\r\n               as='h1'\r\n               className='add'\r\n            >\r\n               203<span className='color-brown-grey'> total</span>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default ContactsContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport PaginationBlock from '../pagination/PaginationBlock'\r\nimport ListItem from '../dashboard/ListItem'\r\n\r\nimport ContactsContainer from './ContactsContainer'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nclass Contacts extends Component {\r\n   state = {\r\n      loader: false,\r\n      showSub: false,\r\n      showSubOpen: 0,\r\n      activity: [],\r\n      filterTypes: [\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' }\r\n      ]\r\n   }\r\n\r\n   toggleShowSub = i => {\r\n      i = i == null ? this.state.showSubOpen : i\r\n\r\n      this.setState(state => ({\r\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\r\n         showSubOpen: i\r\n      }))\r\n   }\r\n\r\n   componentDidMount() {\r\n      // this.wallet = new Wallet()\r\n      // this.props.handleRefreshUrl(this.props.location)\r\n      // this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', '']\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\r\n\r\n      return (\r\n         <ContactsContainer>\r\n            <PaginationBlock\r\n               filterTypes={filterTypes}\r\n               showSub={showSub}\r\n               toggleShowSub={this.toggleShowSub}\r\n            >\r\n               {activity.map((row, i) => (\r\n                  <ListItem\r\n                     key={`c-${i}`}\r\n                     row={row}\r\n                     i={i}\r\n                     wide={true}\r\n                     showSub={showSub}\r\n                     toggleShowSub={this.toggleShowSub}\r\n                     showSubOpen={showSubOpen}\r\n                  />\r\n               ))}\r\n            </PaginationBlock>\r\n         </ContactsContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nexport const ContactsWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Contacts))\r\n","import React from 'react'\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n         text-align: right;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n            text-align: center;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst AuthorizedAppsContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column computer='10' tablet='10' mobile='16' as='h1'>\r\n               Authorized Apps\r\n            </Grid.Column>\r\n            <Grid.Column\r\n               computer='6'\r\n               tablet='6'\r\n               mobile='16'\r\n               as='h1'\r\n               className='add'\r\n            >\r\n               23<span className='color-brown-grey'> total</span>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default AuthorizedAppsContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport PaginationBlock from '../pagination/PaginationBlock'\r\nimport ListItem from '../dashboard/ListItem'\r\n\r\nimport AuthorizedAppsContainer from './AuthorizedAppsContainer'\r\n\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nclass AuthorizedApps extends Component {\r\n   state = {\r\n      loader: false,\r\n      showSub: false,\r\n      showSubOpen: 0,\r\n      activity: [],\r\n      filterTypes: [\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' }\r\n      ]\r\n   }\r\n\r\n   toggleShowSub = i => {\r\n      i = i == null ? this.state.showSubOpen : i\r\n\r\n      this.setState(state => ({\r\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\r\n         showSubOpen: i\r\n      }))\r\n   }\r\n\r\n   componentDidMount() {\r\n      // this.wallet = new Wallet()\r\n      // this.props.handleRefreshUrl(this.props.location)\r\n      // this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\r\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\r\n               [NearkatImage, 'Knights App', '2 days ago', ''],\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\r\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\r\n               [NearkatImage, 'Knights App', '2 days ago', ''],\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\r\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\r\n               [NearkatImage, 'Knights App', '2 days ago', ''],\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', '']\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\r\n\r\n      return (\r\n         <AuthorizedAppsContainer>\r\n            <PaginationBlock\r\n               filterTypes={filterTypes}\r\n               showSub={showSub}\r\n               toggleShowSub={this.toggleShowSub}\r\n               subPage='authorized-apps'\r\n            >\r\n               {activity.map((row, i) => (\r\n                  <ListItem\r\n                     key={`a-${i}`}\r\n                     row={row}\r\n                     i={i}\r\n                     wide={true}\r\n                     showSub={showSub}\r\n                     toggleShowSub={this.toggleShowSub}\r\n                     showSubOpen={showSubOpen}\r\n                  />\r\n               ))}\r\n            </PaginationBlock>\r\n         </AuthorizedAppsContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nexport const AuthorizedAppsWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(AuthorizedApps))\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n\r\n         :first-child {\r\n            padding-left: 0px;\r\n         }\r\n      }\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-left: 0px;\r\n         line-height: 48px;\r\n      }\r\n   }\r\n\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .creating-info {\r\n         padding-left: 1rem;\r\n         padding-right: 1rem;\r\n      }\r\n\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyContainer = ({ children, step }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='1' className='page-title'>\r\n            <Grid.Column as='h1' textAlign='center'>\r\n               {step === 3 ? `Success!` : `Send Money`}\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default SendMoneyContainer\r\n","import React from 'react'\r\n\r\nimport {\r\n   Header,\r\n   TextArea,\r\n   List,\r\n   Image,\r\n   Button,\r\n   Form,\r\n   Dimmer,\r\n   Loader,\r\n   Segment\r\n} from 'semantic-ui-react'\r\n\r\nimport CreateAccoungFormInput from '../accounts/CreateAccoungFormInput'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&&&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin: 36px auto 0 auto;\r\n\r\n      form {\r\n         h3 {\r\n            margin-bottom: 13px;\r\n            text-align: left;\r\n         }\r\n\r\n         .alert-info {\r\n            font-weight: 600;\r\n            margin: 0 0 -8px 0;\r\n            padding: 0 0 0 24px !important;\r\n            line-height: 34px;\r\n            font-size: 14px;\r\n            margin-top: -6px;\r\n            text-align: left;\r\n\r\n            &.problem {\r\n               color: #ff585d;\r\n            }\r\n            &.success {\r\n               color: #6ad1e3;\r\n            }\r\n         }\r\n\r\n         .main-image {\r\n            border: 0px;\r\n            padding: 0 10px;\r\n            width: 48px;\r\n            height: 48px;\r\n            background: #e6e6e6;\r\n            border-radius: 32px;\r\n            margin: 0 auto;\r\n\r\n            img {\r\n               padding-top: 10px;\r\n            }\r\n         }\r\n\r\n         .amount {\r\n            margin-top: 16px;\r\n            margin-bottom: 0px;\r\n            padding-top: 24px;\r\n\r\n            input {\r\n               height: 80px;\r\n               border: 0px;\r\n               font-family: Bw Seido Round;\r\n               font-size: 72px;\r\n               font-weight: 500;\r\n               line-height: 80px;\r\n               color: #4a4f54;\r\n               text-align: center;\r\n               padding: 0px;\r\n            }\r\n         }\r\n         .near-tokens {\r\n            margin: 14px auto 36px auto;\r\n            text-align: center;\r\n            padding: 2px;\r\n\r\n            width: 200px;\r\n            background-color: #fff;\r\n            border: 2px solid #e6e6e6;\r\n            border-radius: 25px;\r\n            color: #999999;\r\n            font-weight: 700;\r\n\r\n            :hover {\r\n               background-color: #e6e6e6;\r\n               color: #fff;\r\n            }\r\n         }\r\n\r\n         .add-note {\r\n            > textarea {\r\n               width: 100%;\r\n               border: 0px;\r\n               padding: 12px;\r\n\r\n               :focus {\r\n                  border: 0px;\r\n               }\r\n            }\r\n         }\r\n\r\n         .send-money {\r\n            margin-top: 24px;\r\n            margin-bottom: 6px;\r\n\r\n            > button {\r\n               width: 288px;\r\n               line-height: 56px;\r\n               border-radius: 30px;\r\n               border: solid 2px #5ace84;\r\n               font-size: 18px;\r\n               font-weight: 600;\r\n               letter-spacing: 2px;\r\n               text-align: center;\r\n               padding: 0 0 0 0;\r\n               background-color: #5ace84;\r\n               color: #fff;\r\n\r\n               :hover {\r\n                  color: #5ace84;\r\n                  background: #fff;\r\n               }\r\n               :disabled {\r\n                  background-color: #e6e6e6;\r\n                  border-color: #e6e6e6;\r\n                  opacity: 1 !important;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         padding: 0px;\r\n         width: 100%;\r\n         text-align: center;\r\n         margin-left: auto;\r\n         margin-right: auto;\r\n         border: 0px;\r\n\r\n         .near-tokens {\r\n            width: 200px;\r\n         }\r\n\r\n         form {\r\n            .near-tokens {\r\n               margin: 14px auto 24px auto;\r\n            }\r\n            .add-note {\r\n               margin-left: -1rem;\r\n               margin-right: -1rem;\r\n\r\n               > textarea {\r\n                  width: 100%;\r\n                  height: 98px;\r\n                  border: 0px;\r\n                  padding: 12px;\r\n                  background: #f8f8f8;\r\n\r\n                  :focus {\r\n                     border: 0px;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyFirstStep = ({\r\n   handleNextStep,\r\n   handleChange,\r\n   note,\r\n   loader,\r\n   paramAccountId,\r\n   accountId,\r\n   handleChangeAccountId,\r\n   successMessage,\r\n   errorMessage,\r\n   formLoader,\r\n   amount\r\n}) => (\r\n   <CustomList className='box'>\r\n      <Form autoComplete='off' onSubmit={handleChangeAccountId}>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         {paramAccountId ? (\r\n            <List.Item>\r\n               <List.Content>\r\n                  <div className='main-image'>\r\n                     <Image src={AccountGreyImage} align='left' />\r\n                  </div>\r\n               </List.Content>\r\n               <List.Content as='h2'>{accountId}</List.Content>\r\n               <List.Content>@{accountId}</List.Content>\r\n            </List.Item>\r\n         ) : (\r\n            <List.Item>\r\n               <List.Content>\r\n                  <Header as='h3'>Enter a username to send:</Header>\r\n\r\n                  <CreateAccoungFormInput\r\n                     formLoader={formLoader}\r\n                     accountId={accountId}\r\n                     handleChangeAccountId={handleChangeAccountId}\r\n                     successMessage={successMessage}\r\n                     errorMessage={errorMessage}\r\n                  />\r\n\r\n                  {successMessage && (\r\n                     <Segment basic className='alert-info success'>\r\n                        Username is available.\r\n                     </Segment>\r\n                  )}\r\n                  {errorMessage && (\r\n                     <Segment basic className='alert-info problem'>\r\n                        Username is unavailable.\r\n                     </Segment>\r\n                  )}\r\n               </List.Content>\r\n            </List.Item>\r\n         )}\r\n\r\n         <List.Item className='amount border-top'>\r\n            <Form.Input\r\n               type='number'\r\n               name='amount'\r\n               value={amount}\r\n               onChange={handleChange}\r\n               placeholder='0.00'\r\n               step='0.01'\r\n               min='0'\r\n            />\r\n         </List.Item>\r\n         <List.Item as='h5' className='near-tokens'>\r\n            NEAR TOKENS\r\n         </List.Item>\r\n         <List.Item className='add-note border-bottom border-top'>\r\n            <TextArea\r\n               name='note'\r\n               value={note}\r\n               onChange={handleChange}\r\n               placeholder='Add a note...'\r\n            />\r\n         </List.Item>\r\n         <List.Item className='send-money'>\r\n            <Button\r\n               disabled={\r\n                  paramAccountId\r\n                     ? !(parseFloat(amount) > 0)\r\n                     : !(successMessage && parseFloat(amount) > 0)\r\n               }\r\n               onClick={handleNextStep}\r\n            >\r\n               SEND MONEY\r\n            </Button>\r\n         </List.Item>\r\n      </Form>\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneyFirstStep\r\n","import React from 'react'\r\n\r\nimport { List, Image, Button, Header } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      margin-top: 36px;\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 auto;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .amount {\r\n         margin-top: 0;\r\n         margin-bottom: 0px;\r\n         padding-top: 12px;\r\n         padding-bottom: 24px;\r\n\r\n         font-family: Bw Seido Round;\r\n         font-size: 72px;\r\n         font-weight: 500;\r\n         line-height: 72px;\r\n         color: #4a4f54;\r\n      }\r\n      .to {\r\n         width: 40px;\r\n         background: #fff;\r\n         margin: -20px auto 12px auto;\r\n      }\r\n\r\n      .with-note {\r\n         padding-top: 12px;\r\n\r\n         .expand-note {\r\n            color: #0072ce;\r\n            cursor: pointer;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               text-decoration: underline;\r\n            }\r\n         }\r\n      }\r\n\r\n      .send-money {\r\n         padding-top: 24px;\r\n         padding-bottom: 24px;\r\n         margin-top: 24px;\r\n         margin-bottom: 24px;\r\n\r\n         > .button {\r\n            width: 288px;\r\n            line-height: 60px;\r\n            border-radius: 30px;\r\n            border: solid 2px #5ace84;\r\n            font-size: 18px;\r\n            font-weight: 600;\r\n            letter-spacing: 2px;\r\n            text-align: center;\r\n            padding: 0 0 0 0;\r\n            background-color: #5ace84;\r\n            color: #fff;\r\n\r\n            :hover {\r\n               color: #5ace84;\r\n               background: #fff;\r\n            }\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         .to {\r\n            margin: -20px auto 12px auto;\r\n         }\r\n\r\n         &&& {\r\n            padding: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n\r\n            border: 0px;\r\n\r\n            .amount {\r\n               font-size: 48px !important;\r\n               padding-top: 0px;\r\n            }\r\n            .send-money {\r\n               padding-top: 14px;\r\n               padding-bottom: 14px;\r\n               margin-top: 14px;\r\n               margin-bottom: 14px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneySecondStep = ({\r\n   handleNextStep,\r\n   handleExpandNote,\r\n   expandNote,\r\n   note,\r\n   amount,\r\n   accountId\r\n}) => (\r\n   <CustomList className='box'>\r\n      <List.Item as='h2'>You are sending</List.Item>\r\n      <List.Item as='h1' className='amount border-bottom'>\r\n         {amount}\r\n         <span>Ⓝ</span>\r\n      </List.Item>\r\n      <List.Item className='to'>\r\n         <Header as='h2'>to</Header>\r\n      </List.Item>\r\n      <List.Item>\r\n         <div className='main-image'>\r\n            <Image src={AccountGreyImage} align='left' />\r\n         </div>\r\n      </List.Item>\r\n      <List.Item as='h2'>{accountId}</List.Item>\r\n      <List.Item>@{accountId}</List.Item>\r\n      {note && (\r\n         <List.Item className='with-note '>\r\n            with note:\r\n            <br />\r\n            {expandNote ? (\r\n               <span className='color-black'>{note}</span>\r\n            ) : (\r\n               <span className='expand-note' onClick={handleExpandNote}>\r\n                  Expand note\r\n               </span>\r\n            )}\r\n         </List.Item>\r\n      )}\r\n      <List.Item className='send-money border-top border-bottom'>\r\n         <Button onClick={handleNextStep}>CONFIRM & SEND</Button>\r\n      </List.Item>\r\n      <List.Item>Once confirmed, this is not undoable.</List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneySecondStep\r\n","import React from 'react'\r\n\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport SendImage from '../../images/icon-send.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      margin-top: 12px;\r\n\r\n      .send-money img {\r\n         width: 24px;\r\n      }\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 auto;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .amount {\r\n         margin-top: 32px;\r\n         margin-bottom: 0px;\r\n         padding-top: 12px;\r\n         padding-bottom: 24px;\r\n      }\r\n\r\n      .with-note {\r\n         padding-top: 24px;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         &&& {\r\n            padding: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n\r\n            border: 0px;\r\n\r\n            .send-money img {\r\n               margin-top: 12px;\r\n            }\r\n            .amount {\r\n               padding-top: 0px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyThirdStep = ({ note, amount, accountId }) => (\r\n   <CustomList>\r\n      <List.Item className='send-money'>\r\n         <Image src={SendImage} />\r\n      </List.Item>\r\n      <List.Item as='h2' className='amount'>\r\n         {amount}\r\n         <span>Ⓝ</span> was sent to:\r\n      </List.Item>\r\n      <List.Item>\r\n         <div className='main-image'>\r\n            <Image src={AccountGreyImage} align='left' />\r\n         </div>\r\n      </List.Item>\r\n      <List.Item as='h2'>{accountId}</List.Item>\r\n      <List.Item>@{accountId}</List.Item>\r\n      {note && (\r\n         <List.Item className='with-note'>\r\n            <span className='font-bold'>with note:</span>\r\n            <br />\r\n            {note}\r\n         </List.Item>\r\n      )}\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneyThirdStep\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport SendMoneyContainer from './SendMoneyContainer'\r\nimport SendMoneyFirstStep from './SendMoneyFirstStep'\r\nimport SendMoneySecondStep from './SendMoneySecondStep'\r\nimport SendMoneyThirdStep from './SendMoneyThirdStep'\r\n\r\nclass SendMoney extends Component {\r\n   state = {\r\n      loader: false,\r\n      formLoader: false,\r\n      step: 1,\r\n      note: '',\r\n      expandNote: false,\r\n      paramAccountId: false,\r\n      accountId: '',\r\n      successMessage: false,\r\n      errorMessage: false,\r\n      amount: ''\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      const paramId = this.props.match.params.id\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      if (paramId) {\r\n         this.wallet\r\n            .checkAccount(paramId)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  paramAccountId: true,\r\n                  accountId: paramId\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  accountId: ''\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  loader: false\r\n               }))\r\n            })\r\n      } else {\r\n         this.setState(() => ({\r\n            loader: false\r\n         }))\r\n      }\r\n   }\r\n\r\n   handleNextStep = () => {\r\n      this.setState(state => ({\r\n         step: ++state.step\r\n      }))\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value\r\n      }))\r\n   }\r\n\r\n   handleExpandNote = () => {\r\n      this.setState(() => ({\r\n         expandNote: true\r\n      }))\r\n   }\r\n\r\n   handleChangeAccountId = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: false\r\n      }))\r\n\r\n      if (!this.wallet.isLegitAccountId(value)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         formLoader: true\r\n      }))\r\n\r\n      this.timeout && clearTimeout(this.timeout)\r\n\r\n      this.timeout = setTimeout(() => {\r\n         this.wallet\r\n            .checkAccount(value)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  successMessage: true,\r\n                  errorMessage: false\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  successMessage: false,\r\n                  errorMessage: true\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  formLoader: false\r\n               }))\r\n            })\r\n      }, 500)\r\n   }\r\n\r\n   render() {\r\n      const { step } = this.state\r\n\r\n      return (\r\n         <SendMoneyContainer step={step}>\r\n            {step === 1 && (\r\n               <SendMoneyFirstStep\r\n                  handleNextStep={this.handleNextStep}\r\n                  handleChange={this.handleChange}\r\n                  handleChangeAccountId={this.handleChangeAccountId}\r\n                  {...this.state}\r\n               />\r\n            )}\r\n            {step === 2 && (\r\n               <SendMoneySecondStep\r\n                  handleNextStep={this.handleNextStep}\r\n                  handleExpandNote={this.handleExpandNote}\r\n                  {...this.state}\r\n               />\r\n            )}\r\n            {step === 3 && <SendMoneyThirdStep {...this.state} />}\r\n         </SendMoneyContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nexport const SendMoneyWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(SendMoney))\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n         float: left;\r\n         width: auto !important;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column as='h1'>Account:</Grid.Column>\r\n            <Grid.Column as='h1' className='add'>\r\n               @eugenethedream\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default ProfileContainer\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Popup, Grid, Image } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport LockImage from '../../images/icon-lock.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      .row {\r\n         padding-top: 12px;\r\n         padding-bottom: 12px;\r\n\r\n         .edit-link {\r\n            font-weight: 600;\r\n         }\r\n         .title {\r\n            font-weight: 600;\r\n            color: #24272a;\r\n         }\r\n      }\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 120px;\r\n         height: 120px;\r\n         background: #e6e6e6;\r\n         border-radius: 60px;\r\n\r\n         img {\r\n            width: 100px;\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .locked {\r\n         float: right;\r\n         border: 0px;\r\n         padding: 1px 7px;\r\n         width: 32px;\r\n         height: 32px;\r\n         background: #f8f8f8;\r\n         border-radius: 32px;\r\n\r\n         img {\r\n            padding-top: 4px;\r\n         }\r\n      }\r\n\r\n      .row-title {\r\n         margin-top: 20px;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0px;\r\n         margin-right: 0px;\r\n\r\n         .column {\r\n            padding-left: 0px;\r\n            padding-right: 0px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileDetails = ({ loader }) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='border-top-bold'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            PROFILE\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' as='h6' textAlign='center' only='tablet'>\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Username\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            @eugenethedream\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column computer='2' tablet='2' mobile='3' textAlign='right'>\r\n            <Popup\r\n               trigger={\r\n                  <div className='locked'>\r\n                     <Image src={LockImage} align='left' />\r\n                  </div>\r\n               }\r\n               hoverable\r\n               position='left center'\r\n            >\r\n               <Popup.Header>Why is this locked?</Popup.Header>\r\n               <Popup.Content>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                  Curabitur sit amet pretium mi, a molestie est.{` `}\r\n                  <a href='/'>Learn more</a>\r\n               </Popup.Content>\r\n            </Popup>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Full Name\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            Evgeny Kuzyakov\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Photo\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            <div className='main-image'>\r\n               <Image src={AccountGreyImage} align='left' />\r\n            </div>\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className='border-top-bold row-title'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            CONTACT INFORMATION\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            computer='4'\r\n            tablet='4'\r\n            as='h6'\r\n            textAlign='center'\r\n            only='tablet'\r\n         >\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Email\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            email@website.com\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Phone\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            000-000-0000\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Address\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            1234 N. West Ave., San Francisco, CA 98562\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className='border-top-bold row-title'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            FINANCIAL INFORMATION\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            computer='4'\r\n            tablet='4'\r\n            as='h6'\r\n            textAlign='center'\r\n            only='tablet'\r\n         >\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Balance\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            2,300 Ⓝ\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Only Me\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default ProfileDetails\r\n","import React from 'react'\r\n\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nconst ProfileSection = ({ children }) => (\r\n   <Grid columns={2} stackable>\r\n      <Grid.Column computer={10}>{children[0]}</Grid.Column>\r\n      <Grid.Column computer={6}>\r\n         {children[1]}\r\n         {children[2]}\r\n      </Grid.Column>\r\n   </Grid>\r\n)\r\n\r\nexport default ProfileSection\r\n","import React from 'react'\r\n\r\nimport { List, Button, Image } from 'semantic-ui-react'\r\n\r\nimport KeysGreyImage from '../../images/icon-keys-grey.svg'\r\nimport DocGreyImage from '../../images/icon-doc-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      margin-top: -1rem;\r\n      padding: 14px 4px 14px 14px;\r\n\r\n      .keys {\r\n         img {\r\n            width: 24px;\r\n            margin-top: 2px;\r\n         }\r\n      }\r\n      .account {\r\n         margin-top: 12px;\r\n\r\n         &-name {\r\n            margin-top: 12px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n         }\r\n         img {\r\n            width: 18px;\r\n            margin-top: 8px;\r\n            margin-right: 20px;\r\n         }\r\n         .download {\r\n            margin: 0px;\r\n         }\r\n         button {\r\n            width: 130px;\r\n            background-color: #0072ce;\r\n            border: 2px solid #0072ce;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n            margin-left: 20px;\r\n\r\n            :hover {\r\n               background-color: #fff;\r\n               color: #0072ce;\r\n            }\r\n         }\r\n         .account-name {\r\n            color: #24272a;\r\n            font-weight: 600;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n         &&& {\r\n            .account {\r\n               .download {\r\n                  float: none;\r\n                  margin: 0 0 0 16px;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         &&& {\r\n            margin-top: 20px;\r\n\r\n            .account {\r\n               button {\r\n                  margin-left: 8px;\r\n               }\r\n               .download {\r\n                  float: right;\r\n                  margin: 0 0 0 0;\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileYourKeys = () => (\r\n   <CustomList className='box'>\r\n      <List.Item className='keys'>\r\n         <List.Icon as={Image} src={KeysGreyImage} />\r\n         <List.Content as='h2'>Your Keys</List.Content>\r\n      </List.Item>\r\n      <List.Item className='account'>\r\n         <List.Content floated='right' className='download'>\r\n            <Button>DOWNLOAD</Button>\r\n         </List.Content>\r\n         <List.Content>\r\n            <Image align='left' src={DocGreyImage} />\r\n         </List.Content>\r\n         <List.Content className='account-name'>\r\n            @eugenethedream.key\r\n         </List.Content>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default ProfileYourKeys\r\n","import React from 'react'\r\n\r\nimport { List } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 8px 0 8px 20px;\r\n      margin-left: 28px;\r\n      margin-top: 20px;\r\n      border-left: 4px solid #f8f8f8;\r\n\r\n      .header {\r\n         line-height: 28px;\r\n      }\r\n      .content {\r\n         line-height: 20px;\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0px;\r\n         border-left: 0px;\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileNotice = () => (\r\n   <CustomList>\r\n      <List.Item>\r\n         <List.Header>Never give your keys away</List.Header>\r\n         <List.Content>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\r\n            sit amet pretium mi, a molestie est.\r\n            <a href='/'>Learn more</a>\r\n         </List.Content>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default ProfileNotice\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport ProfileContainer from './ProfileContainer'\r\nimport ProfileDetails from './ProfileDetails'\r\nimport ProfileSection from './ProfileSection'\r\nimport ProfileYourKeys from './ProfileYourKeys'\r\nimport ProfileNotice from './ProfileNotice'\r\n\r\nclass Profile extends Component {\r\n   state = {\r\n      loader: false\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <ProfileContainer>\r\n            <ProfileSection>\r\n               <ProfileDetails />\r\n               <ProfileYourKeys />\r\n               <ProfileNotice />\r\n            </ProfileSection>\r\n         </ProfileContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const ProfileWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Profile))\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  \r\n  * {\r\n   box-sizing: inherit;\r\n   }\r\n\r\n   #root {\r\n      min-height: 100vh;\r\n      position: relative;\r\n   }\r\n   html {\r\n      box-sizing: border-box;\r\n      min-height: 100vh;\r\n      height: auto !important;\r\n\r\n      body {\r\n         margin: 0;\r\n         padding: 0;\r\n         min-height: 100vh !important;\r\n\r\n         position: relative;\r\n         color: #999;\r\n         font-family: \"benton-sans\",sans-serif;\r\n         font-weight: 500;\r\n         font-size: 14px !important;\r\n      }\r\n   }\r\n   \r\n\r\n   .App {\r\n      min-height: 100vh;\r\n\r\n      > div {\r\n         min-height: 100vh;\r\n      }\r\n   }\r\n\r\n   a {\r\n      color: #0072ce;\r\n   }\r\n   a:hover {\r\n      color: #0072ce;\r\n      text-decoration: underline;\r\n   }\r\n\r\n   h1, .h1 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 48px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 100px;\r\n      color: #4a4f54;\r\n   }\r\n   h2, .h2 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 24px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 1.33;\r\n      color: #24272a !important;\r\n      margin: 0px;\r\n   }\r\n   h3, .h3 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 18px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 24px !important;\r\n      color: #24272a !important;\r\n      margin: 0px;\r\n   }\r\n   h4, .h4 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      line-height: 1.33;\r\n      color: #24272a;\r\n      margin: 0px;\r\n   }\r\n\r\n   h5, .h5 {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 13px !important;\r\n      line-height: 26px;\r\n      font-weight: 500;\r\n      color: #999999 !important;\r\n      margin: 0px;\r\n      letter-spacing: 1.8px;\r\n   }\r\n\r\n   h6, .h6 {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 12px !important;\r\n      line-height: 18px;\r\n      font-weight: 600;\r\n      color: #999999;\r\n      margin: 0px !important;\r\n      letter-spacing: 1.5px !important;\r\n   }\r\n\r\n\r\n\r\n   .font-small {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 12px !important;\r\n      color: #999 !important;\r\n      font-weight: 500 !important;\r\n\r\n      a {\r\n         font-family: \"benton-sans\",sans-serif !important;\r\n         font-size: 12px !important;\r\n         color: #999 !important;\r\n         font-weight: 500 !important;\r\n      }\r\n\r\n      a:hover {\r\n         color: #999 !important;\r\n      }\r\n   }\r\n\r\n   .ui.form input[type=text] {\r\n      font-family: \"benton-sans\",sans-serif;\r\n      font-size: 16px;\r\n   }\r\n\r\n\r\n   .font-bold {\r\n      font-weight: 600;\r\n   }\r\n\r\n\r\n   .color-seafoam-blue {\r\n      color: #6ad1e3 !important;\r\n   }\r\n   .color-blue {\r\n      color: #0072ce !important;\r\n   }\r\n   .color-brown-grey {\r\n      color: #999;\r\n   }\r\n   .color-charcoal-grey {\r\n      color: #4a4f54 !important;\r\n   }\r\n   .color-black {\r\n      color: #24272a !important;\r\n\r\n      :hover {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n\r\n   .ui.popup > .header {\r\n      font-weight: 600 !important;\r\n      color: #24272a !important;\r\n   }\r\n\r\n\r\n   .ui.list .list>.item .header, .ui.list>.item .header, .ui.button {\r\n      font-weight: 600;\r\n   }\r\n\r\n\r\n   .border-bottom {\r\n      border-bottom: 2px solid #f8f8f8 !important;\r\n   }\r\n   .border-bottom-bold {\r\n      border-bottom: 4px solid #e6e6e6 !important;\r\n   }\r\n   .border-bottom-light {\r\n      border-bottom: 1px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-top {\r\n      border-top: 2px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-top-bold {\r\n      border-top: 4px solid #e6e6e6 !important;\r\n   }\r\n   .border-top-light {\r\n      border-top: 1px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-left-bold {\r\n      border-left: 4px solid #f8f8f8 !important;\r\n   }\r\n\r\n\r\n   .border-right {\r\n      border-right: 2px solid #e6e6e6;\r\n   }\r\n   .border-right-light {\r\n      border-right: 1px solid #e6e6e6;\r\n   }\r\n   .background-lg {\r\n      background: #f8f8f8;\r\n   }\r\n\r\n\r\n   .button {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n   }\r\n\r\n\r\n   .box {\r\n      border: 4px solid #e6e6e6;\r\n      border-radius: 8px;\r\n      margin-bottom: 0px;\r\n      position: relative;\r\n      min-height: 100px;\r\n      position: relative;\r\n\r\n      .row {\r\n         padding: 0px !important;\r\n      }\r\n      .column {\r\n         padding: 24px 10px 20px 30px !important;\r\n         word-wrap: break-word;\r\n      }\r\n      .segment {\r\n         padding: 30px 0 20px 0 !important;\r\n      }\r\n      .list {\r\n         > .item {\r\n            padding: 0px !important;\r\n\r\n            > img {\r\n               top: -4px;\r\n               margin: 0 10px;\r\n            }\r\n            > img.transarrow {\r\n               width: 11px !important;\r\n            }\r\n         }\r\n         > h5.item {\r\n            top: -4px;\r\n         }\r\n      } \r\n   }\r\n\r\n\r\n   .copy-image {\r\n      width: 18px !important;\r\n      margin: 0px 10px 0 0px !important;\r\n      top: -4px !important;\r\n   }\r\n\r\n\r\n   .balance-image {\r\n      font-size: 20px !important;\r\n      font-weight: 100 !important;\r\n\r\n      &-big {\r\n         font-size: 32px !important;\r\n         font-weight: 100 !important;\r\n      }\r\n   }\r\n   \r\n\r\n   .transactions-block .item {\r\n      margin-left: 10px !important;\r\n   }\r\n\r\n\r\n   .hide {\r\n      display: none !important;\r\n   }\r\n\r\n\r\n   .App-section {\r\n      width: 860px;\r\n      margin: auto;\r\n      margin-top: 10px;\r\n      margin-bottom: 20px;\r\n   }\r\n\r\n   .App-error-message {\r\n      width: 100%;\r\n      text-align: center;\r\n      display: inline-block;\r\n      margin: auto;\r\n   }\r\n\r\n   .ui.list .list>.item .header, .ui.list>.item .header {\r\n      font-family: \"benton-sans\",sans-serif;\r\n      \r\n   }\r\n   .ui.popup>.header, .ui.popup {\r\n      color: #999;\r\n      font-family: \"benton-sans\",sans-serif;\r\n      font-weight: 500;\r\n      font-size: 14px !important;\r\n   }\r\n   .ui.popup {\r\n      border: 1px solid #eee;\r\n   }\r\n   .ui.left.center.popup:before {\r\n      box-shadow: 1px -1px 0 0 #eee;\r\n   }\r\n   .ui.bottom.right.popup:before {\r\n      box-shadow: -1px -1px 0 0 #eee;\r\n   }\r\n\r\n\r\n   @media screen and (max-width: 767px) {\r\n      h1, .h1 {\r\n         font-size: 38px !important;\r\n         font-weight: 500;\r\n         line-height: 50px;\r\n         color: #4a4f54;\r\n      }\r\n      h2, .h2 {\r\n         font-size: 24px !important;\r\n         font-weight: 600;\r\n         line-height: 1.33;\r\n         margin: 0px;\r\n      }\r\n      h3, .h3 {\r\n         font-size: 16px !important;\r\n         font-weight: 500;\r\n         line-height: 1.33;\r\n         margin: 0px;\r\n      }\r\n      \r\n\r\n      .box .column {\r\n         padding: 16px 10px !important;\r\n      }\r\n   }\r\n`\r\n","import React, { Component } from 'react'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\n\r\nimport '../index.css'\r\n\r\nimport ResponsiveContainer from './responsive/ResponsiveContainer'\r\nimport Footer from './common/Footer'\r\nimport DashboardDetailWithRouter from './dashboard/DashboardDetail'\r\nimport { CreateAccountWithRouter } from './accounts/CreateAccount'\r\nimport { SetRecoveryInfoWithRouter } from './accounts/SetRecoveryInfo'\r\nimport { RecoverAccountWithRouter } from './accounts/RecoverAccount'\r\nimport { LoginWithRouter } from './login/Login'\r\nimport { ContactsWithRouter } from './contacts/Contacts'\r\nimport { AuthorizedAppsWithRouter } from './authorized-apps/AuthorizedApps'\r\nimport { SendMoneyWithRouter } from './send-money/SendMoney'\r\nimport { ProfileWithRouter } from './profile/Profile'\r\n\r\nimport { ThemeProvider } from 'styled-components'\r\nimport GlobalStyle from './GlobalStyle'\r\nconst theme = {}\r\n\r\nconst PATH_PREFIX = process.env.PUBLIC_URL\r\n\r\nclass Routing extends Component {\r\n   render() {\r\n      return (\r\n         <div className='App'>\r\n            <GlobalStyle />\r\n\r\n            <ConnectedRouter basename={PATH_PREFIX}  history={this.props.history}>\r\n               <ThemeProvider theme={theme}>\r\n                  <ResponsiveContainer>\r\n                     <Switch>\r\n                        <Route\r\n                           exact\r\n                           path='/'\r\n                           component={DashboardDetailWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/create'\r\n                           component={CreateAccountWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/set-recovery/:accountId'\r\n                           component={SetRecoveryInfoWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/recover-account'\r\n                           component={RecoverAccountWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/login'\r\n                           component={LoginWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/contacts'\r\n                           component={ContactsWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/authorized-apps'\r\n                           component={AuthorizedAppsWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/send-money/:id?'\r\n                           component={SendMoneyWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/profile'\r\n                           component={ProfileWithRouter}\r\n                        />\r\n\r\n                        <Route component={DashboardDetailWithRouter} />\r\n                     </Switch>\r\n                     <Footer />\r\n                  </ResponsiveContainer>\r\n               </ThemeProvider>\r\n            </ConnectedRouter>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Routing\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport createRootReducer from './reducers'\r\nimport createMiddleware from './middleware'\r\n\r\nimport Routing from './components/Routing'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst store = createStore(createRootReducer(history), createMiddleware(history))\r\n\r\nReactDOM.render(\r\n   <Provider store={store}>\r\n      <Routing history={history} />\r\n   </Provider>,\r\n   document.getElementById('root')\r\n)\r\nserviceWorker.unregister()\r\n","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport account from './account'\r\n\r\nexport default (history) => combineReducers({\r\n   account,\r\n   router: connectRouter(history)\r\n})\r\n","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-down.fcefbf0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-problems.1f0685f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.5c3cedcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-send.f7a4807a.svg\";"],"sourceRoot":""}