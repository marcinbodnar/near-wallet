{"version":3,"sources":["images/icon-problems.svg","images/icon-contacts.svg","images/icon-authorized.svg","images/icon-logout.svg","images/wallet.png","images/icon-account.svg","images/icon-recent.svg","images/icon-activity.svg","images/icon-arrow-right.svg","images/icon-t-transfer.svg","images/icon-m-transaction.svg","images/icon-account-grey.svg","images/icon-mobile-menu.svg","images/icon-help.svg","images/near.svg","images/icon-t-contract.svg","images/icon-arrow-grn.svg","images/icon-arrow-blk.svg","images/icon-activity-grey.svg","images/icon-authorized-grey.svg","images/icon-contacts-grey.svg","images/icon-t-stake.svg","images/near_logo.svg","images/icon-deny.svg","images/icon-app-default.svg","images/icon-authorize.svg","images/icon-add-blue.svg","images/icon-arrow-up.svg","images/icon-m-filter.svg","images/icon-arrow-left.svg","images/icon-m-search.svg","images/icon-lock.svg","images/icon-keys-grey.svg","images/icon-doc-grey.svg","images/footer-nearkat.svg","utils/wallet.js","actions/account.js","reducers/account.js","middleware/index.js","components/responsive/MobileView.js","components/responsive/DesktopPopup.js","components/responsive/DesktopView.js","components/responsive/ResponsiveContainer.js","components/common/Footer.js","components/dashboard/DashboardOtherAssets.js","components/dashboard/DashboardContainer.js","components/dashboard/DashboardNotice.js","components/dashboard/DashboardSection.js","components/dashboard/ListItem.js","components/dashboard/DashboardActivity.js","components/dashboard/DashboardDetail.js","components/accounts/CreateAccountSection.js","components/accounts/CreateAccoungFormInput.js","components/accounts/CreateAccountForm.js","components/accounts/NearInfo.js","components/accounts/CreateAccountContainer.js","components/accounts/CreateAccount.js","components/accounts/SetRecoveryInfoSection.js","components/accounts/SetRecoveryInfoForm.js","components/accounts/SetRecoveryInfoContainer.js","components/accounts/SetRecoveryInfo.js","components/login/LoginContainer.js","components/login/LoginForm.js","components/login/Login.js","components/pagination/PaginationTab.js","components/pagination/PaginationPaging.js","components/pagination/PaginationSummary.js","components/common/Search.js","components/pagination/PaginationSortBy.js","components/pagination/PaginationBlock.js","components/contacts/ContactsContainer.js","components/contacts/Contacts.js","components/authorized-apps/AuthorizedAppsContainer.js","components/authorized-apps/AuthorizedApps.js","components/send-money/SendMoneyContainer.js","components/send-money/SendMoneyFirstStep.js","components/send-money/SendMoneySecondStep.js","components/send-money/SendMoneyThirdStep.js","components/send-money/SendMoney.js","components/profile/ProfileContainer.js","components/profile/ProfileDetails.js","components/profile/ProfileSection.js","components/profile/ProfileYourKeys.js","components/profile/ProfileNotice.js","components/profile/Profile.js","components/GlobalStyle.js","components/Routing.js","serviceWorker.js","index.js","reducers/index.js","images/icon-check-blue.svg","images/icon-arrow-down.svg","images/icon-send.svg","images/icon-close.svg"],"names":["module","exports","__webpack_require__","p","ACCOUNT_HELPER_URL","CONTRACT_CREATE_ACCOUNT_URL","concat","NODE_URL","KEY_WALLET_ACCOUNTS","KEY_UNIQUE_PREFIX","KEY_WALLET_TOKENS","KEY_ACTIVE_ACCOUNT_ID","ACCOUNT_ID_REGEX","Wallet","Object","classCallCheck","this","key_store","nearlib","BrowserLocalStorageKeystore","near","Near","createDefaultConfig","account","Account","nearClient","accounts","JSON","parse","localStorage","getItem","tokens","accountId","createClass","key","value","setItem","stringify","save","app_url","app_title","contract_id","token","possible","i","charAt","Math","floor","random","length","isLegitAccountId","account_id","test","_sendTransaction","asyncToGenerator","regenerator_default","a","mark","_callee","senderId","receiverId","methodName","amount","args","wrap","_context","prev","next","scheduleFunctionCall","abrupt","sent","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","options","undefined","history","param","next_url","window","location","search","reset_accounts","url","WALLET_CREATE_NEW_ACCOUNT_URL","keys","map","encodeURIComponent","push","replace","isEmpty","redirectToCreateAccount","_loadAccount","_callee2","_context2","Error","viewAccount","_x6","_x7","_checkAccount","_callee3","_context3","_x8","_checkNewAccount","_callee4","remoteAccount","_context4","t0","_x9","_createNewAccount","_callee5","keyPair","_this","_context5","KeyPair","fromRandomSeed","Promise","resolve","reject","data","newAccountId","newAccountPublicKey","getPublicKey","xhr","XMLHttpRequest","open","setRequestHeader","onload","status","setKey","catch","console","log","responseText","send","_x10","_addAccessKey","_callee6","contractId","publicKey","successUrl","addAccessKeyResponse","_context6","addAccessKey","waitForTransactionResult","href","_x11","_x12","_x13","_x14","addEventListener","receiveMessage","bind","_processTransactionMessage","_callee7","action","app_data","hash","signature","_context7","parseInt","sendTransaction","signer","signHash","_x15","_x16","phoneNumber","sendJson","securityCode","event","e","request_id","reply","d","source","postMessage","origin","processTransactionMessage","then","result","success","error","REFRESH_ACCOUNT","LOADER_ACCOUNT","REFRESH_URL","handleRefreshAccount","wallet","dispatch","getState","redirectIfEmpty","getAccountId","type","loader","loadAccount","v","authToken","newAccessToken","stake","nonce","code_hash","message","indexOf","clearState","handleRefreshUrl","title","success_url","failure_url","public_key","createActions","REQUEST_CODE","requestCode","VALIDATE_CODE","validateCode","initialState","formLoader","sentSms","successMessage","errorMessage","requestResultReducer","handleActions","defineProperty","combineActions","state","_ref2","payload","objectSpread","reducer","_ref3","reduceReducers","_ref","ready","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","readyStatePromise","store","makeAction","newAction","assign","CustomResponsive","styled","Responsive","_templateObject","getWidth","onlyTablet","minWidth","innerWidth","MobileView","dropdown","handleDropdown","setState","handleSelectAccount","selectAccount","props","redirectCreateAccount","_this2","react_default","createElement","maxWidth","Segment","basic","className","Menu","borderless","Item","as","Link","to","Image","src","LogoImage","position","onClick","Loader","active","inline","size","MobileMenuImage","CloseImage","react_router_dom","RecentImage","ActivityImage","SendImage","AccountGreyImage","ContactsGreyImage","AuthorizedGreyImage","LogoutImage","List","filter","Button","children","Component","defaultProps","mapDispatchToProps","connect","withRouter","CustomPopup","Popup","DesktopPopup_templateObject","DesktopPopup","trigger","ArrowDownImage","on","Icon","AccountImage","Content","DesktopView_templateObject","DesktopView","fixed","activeItem","hideFixedMenu","showFixedMenu","handleItemClick","name","DesktopView_CustomResponsive","onlyComputer","Visibility","once","onBottomPassed","onBottomPassedReverse","pointing","target","HelpImage","responsive_DesktopPopup","ResponsiveContainer","react","responsive_DesktopView","responsive_MobileView","FooterGrid","Grid","Footer_templateObject","columns","Column","textAlign","verticalAlign","computer","tablet","mobile","Group","LogoFooterImage","only","floated","NearkatImage","CustomGrid","DashboardOtherAssets_templateObject","TContractImage","DashboardOtherAssets","Row","horizontal","Header","Description","CustomContainer","Container","DashboardContainer_templateObject","ArrowGrnImage","ArrowRightImage","DashboardContainer","dashboard_DashboardOtherAssets","CustomList","DashboardNotice_templateObject","DashboardNotice","handleNotice","DashboardSection","notice","stackable","dashboard_DashboardNotice","CustomGridRow","ListItem_templateObject","ListItem","row","_ref$wide","wide","_ref$showSub","showSub","toggleShowSub","showSubOpen","align","ArrowBlkImage","ArrowRight","DashboardActivity_templateObject","DashboardActivity","image","activity","DashboardActivity_CustomGrid","width","Dimmer","inverted","dashboard_ListItem","DashboardDetail","authorizedaps","newcontacts","setTimeout","_","TTransferImage","TStakeImage","_this$state","dashboard_DashboardContainer","dashboard_DashboardSection","dashboard_DashboardActivity","activityGreyImage","CreateAccountSection_templateObject","CreateAccountSection","CreateAccountSection_CustomGrid","CustomFormInput","Form","Input","CreateAccoungFormInput_templateObject","ProblemsImage","CheckBlueImage","CreateAccoungFormInput","handleChangeAccountId","loading","onChange","placeholder","AccountForm","CreateAccountForm_templateObject","CreateAccountForm","handleSubmit","handleRecaptcha","autoComplete","onSubmit","accounts_CreateAccoungFormInput","onlyMobile","lib_es","sitekey","disabled","NearInfo_templateObject","NearInfo","NearInfo_CustomList","NearLogoImage","CreateAccountContainer_templateObject","CreateAccountContainer","CreateAccountContainer_CustomContainer","accounts_NearInfo","CreateAccount","componentDidMount","timeout","clearTimeout","checkNewAccount","finally","preventDefault","createNewAccount","accounts_CreateAccountContainer","accounts_CreateAccountSection","accounts_CreateAccountForm","CreateAccountWithRouter","SetRecoveryInfoSection_templateObject","SetRecoveryInfoSection","SetRecoveryInfoSection_CustomGrid","RecoveryInfoForm","SetRecoveryInfoForm_templateObject","SetRecoveryInfoForm","isLegit","handleChange","Field","react_phone_number_input","SetRecoveryInfoContainer_templateObject","SetRecoveryInfoContainer","SetRecoveryInfoContainer_CustomContainer","SetRecoveryInfo","isLegitField","nextUrl","isValidPhoneNumber","trim","match","combinedState","accounts_SetRecoveryInfoContainer","accounts_SetRecoveryInfoSection","accounts_SetRecoveryInfoForm","SetRecoveryInfoWithRouter","_ref4","params","LoginContainer_templateObject","DenyImage","LoginContainer","appTitle","LoginContainer_CustomContainer","Dimmable","AuthorizeImage","AppDefaultImage","largeScreen","LoginForm_templateObject","ArrowUpImage","AddBlueImage","handleOnClick","handleDeny","handleAllow","LoginForm_CustomGrid","Login","login_LoginContainer","login_LoginForm","LoginWithRouter","PaginationTabList","PaginationTab_templateObject","LEFT_PAGE","RIGHT_PAGE","range","from","step","PaginationTab","_Component","_getPrototypeOf2","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","call","currentPage","gotoPage","page","onPageChanged","handleClick","evt","blur","handleMoveLeft","pageNeighbors","handleMoveRight","fetchPageNumbers","totalPages","getTotalPages","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","inherits","ceil","totalRecords","pageLimit","initialPage","index","circular","ArrowLeftImage","onPageChange","PaginationPagingList","PaginationPaging_templateObject","pagingTypes","PaginationFilter","handleOnClickPaging","pagingValue","pagingDropdown","handlePagingDropdownClick","style","backgroundImage","ArrowDown","selection","PaginationSummary","pageNumber","SearchForm","Search_templateObject","MSearchImage","Search","PaginationFilterList","PaginationSortBy_templateObject","filterTypesByType","handleDropdownClick","img","PaginationBlockGrid","PaginationBlock_templateObject","MTransactionImage","PaginationBlock","dropdownType","filterTypes","TransactionFilter","buttonRadio","buttonRadioClick","_this$props","_this$props$pageNumbe","_this$props$showSub","subPage","_this$props2","_this$props2$totalRec","_this$props2$pageLimi","_this$props2$initialP","_this$props2$onPageCh","_this$props2$pageNeig","PaginationSortBy","common_Search","backgroundColor","PaginationPaging","pagination_PaginationSummary","PaginationTab_PaginationTab","ContactsContainer_templateObject","ContactsContainer","ContactsContainer_CustomContainer","Contacts","_this3","contacts_ContactsContainer","pagination_PaginationBlock","ContactsWithRouter","AuthorizedAppsContainer_templateObject","AuthorizedAppsContainer","AuthorizedAppsContainer_CustomContainer","AuthorizedApps","authorized_apps_AuthorizedAppsContainer","AuthorizedAppsWithRouter","SendMoneyContainer_templateObject","SendMoneyContainer","SendMoneyContainer_CustomContainer","SendMoneyFirstStep_templateObject","SendMoneyFirstStep","handleNextStep","note","paramAccountId","SendMoneyFirstStep_CustomList","min","TextArea","parseFloat","SendMoneySecondStep_templateObject","SendMoneySecondStep","handleExpandNote","expandNote","SendMoneySecondStep_CustomList","SendMoneyThirdStep_templateObject","SendMoneyThirdStep","SendMoneyThirdStep_CustomList","SendMoney","checkAccount","paramId","id","send_money_SendMoneyContainer","send_money_SendMoneyFirstStep","send_money_SendMoneySecondStep","send_money_SendMoneyThirdStep","SendMoneyWithRouter","ProfileContainer_templateObject","ProfileContainer","ProfileContainer_CustomContainer","ProfileDetails_templateObject","ProfileDetails","ProfileDetails_CustomGrid","LockImage","hoverable","ProfileSection","ProfileYourKeys_templateObject","ProfileYourKeys","ProfileYourKeys_CustomList","KeysGreyImage","DocGreyImage","ProfileNotice_templateObject","ProfileNotice","ProfileNotice_CustomList","Profile","profile_ProfileContainer","profile_ProfileSection","profile_ProfileDetails","profile_ProfileYourKeys","profile_ProfileNotice","ProfileWithRouter","createGlobalStyle","GlobalStyle_templateObject","theme","Routing","GlobalStyle","esm","basename","process","styled_components_browser_esm","responsive_ResponsiveContainer","react_router","exact","path","component","DashboardDetailWithRouter","Footer","Boolean","hostname","createBrowserHistory","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","createMiddleware","ReactDOM","render","es","components_Routing","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.fc2d19d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-problems.1f0685f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts.f6e4afac.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized.2f2edb66.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-logout.9cae8fb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet.89d47110.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-account.ab010182.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-recent.83086272.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity.b48f419e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-right.2c9f3083.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-transfer.f726da93.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-transaction.23b32201.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-account-grey.4d7da491.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-mobile-menu.1acfd8f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-help.f6c0707a.svg\";","module.exports = __webpack_public_path__ + \"static/media/near.584de59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-contract.35047442.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-grn.eaf2a8e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-blk.79cca70c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity-grey.c5c92b3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized-grey.4d2fc992.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts-grey.c7048ab4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-stake.cc91ad52.svg\";","module.exports = __webpack_public_path__ + \"static/media/near_logo.f25a0b86.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-deny.6946f17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-app-default.11c1df80.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorize.377da011.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-add-blue.be7039c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-up.b5be78eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-filter.1f33be14.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-left.5e7a861f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-search.2cea301b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lock.255000ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-keys-grey.a339e56f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-doc-grey.888e4b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/footer-nearkat.3083dec6.svg\";","import nearlib from 'nearlib'\r\nimport sendJson from 'fetch-send-json'\r\n\r\nconst WALLET_CREATE_NEW_ACCOUNT_URL = `/create/`\r\n\r\nconst ACCOUNT_HELPER_URL = 'https://studio.nearprotocol.com/contract-api'\r\nconst CONTRACT_CREATE_ACCOUNT_URL = `${ACCOUNT_HELPER_URL}/account`\r\nconst NODE_URL = 'https://studio.nearprotocol.com/devnet'\r\n\r\nconst KEY_UNIQUE_PREFIX = '_4:'\r\nconst KEY_WALLET_ACCOUNTS = KEY_UNIQUE_PREFIX + 'wallet:accounts_v2'\r\nconst KEY_WALLET_TOKENS = KEY_UNIQUE_PREFIX + 'wallet:tokens_v2'\r\nconst KEY_ACTIVE_ACCOUNT_ID = KEY_UNIQUE_PREFIX + 'wallet:active_account_id_v2'\r\n\r\nconst ACCOUNT_ID_REGEX = /^[a-z0-9@._-]{5,32}$/\r\n\r\nexport class Wallet {\r\n   constructor() {\r\n      this.key_store = new nearlib.BrowserLocalStorageKeystore()\r\n      this.near = nearlib.Near.createDefaultConfig(NODE_URL)\r\n      this.account = new nearlib.Account(this.near.nearClient);\r\n      this.accounts = JSON.parse(\r\n         localStorage.getItem(KEY_WALLET_ACCOUNTS) || '{}'\r\n      )\r\n      this.tokens = JSON.parse(localStorage.getItem(KEY_WALLET_TOKENS) || '{}')\r\n      this.accountId = localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID) || ''\r\n   }\r\n\r\n   save() {\r\n      localStorage.setItem(KEY_ACTIVE_ACCOUNT_ID, this.accountId)\r\n      localStorage.setItem(KEY_WALLET_ACCOUNTS, JSON.stringify(this.accounts))\r\n      localStorage.setItem(KEY_WALLET_TOKENS, JSON.stringify(this.tokens))\r\n   }\r\n\r\n   getAccountId() {\r\n      return this.accountId\r\n   }\r\n\r\n   selectAccount(accountId) {\r\n      if (!(accountId in this.accounts)) {\r\n         return false\r\n      }\r\n      this.accountId = accountId\r\n      this.save()\r\n   }\r\n\r\n   newAccessToken(app_url, app_title, contract_id) {\r\n      var token = ''\r\n      var possible =\r\n         'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n\r\n      for (var i = 0; i < 32; i++) {\r\n         token += possible.charAt(Math.floor(Math.random() * possible.length))\r\n      }\r\n\r\n      if (!this.isLegitAccountId(contract_id)) {\r\n         contract_id = ''\r\n      }\r\n\r\n      this.tokens[token] = {\r\n         app_url,\r\n         app_title,\r\n         contract_id,\r\n         account_id: this.accountId\r\n      }\r\n      this.save()\r\n      return token\r\n   }\r\n\r\n   isLegitAccountId(accountId) {\r\n      return ACCOUNT_ID_REGEX.test(accountId)\r\n   }\r\n\r\n   async sendTransaction(senderId, receiverId, methodName, amount, args) {\r\n      return await this.near.scheduleFunctionCall(\r\n         amount,\r\n         senderId,\r\n         receiverId,\r\n         methodName,\r\n         args || {}\r\n      )\r\n   }\r\n\r\n   redirectToCreateAccount(options = {}, history) {\r\n      const param = {\r\n         next_url: window.location.search\r\n      }\r\n      if (options.reset_accounts) {\r\n         param.reset_accounts = true\r\n      }\r\n      //  let url = WALLET_CREATE_NEW_ACCOUNT_URL + \"?\" + $.param(param)\r\n      let url =\r\n         WALLET_CREATE_NEW_ACCOUNT_URL +\r\n         '?' +\r\n         Object.keys(param).map(\r\n            (p, i) =>\r\n               `${i ? '&' : ''}${encodeURIComponent(p)}=${encodeURIComponent(\r\n                  param[p]\r\n               )}`\r\n         )\r\n      history ? history.push(url) : window.location.replace(url)\r\n   }\r\n\r\n   isEmpty() {\r\n      return !this.accounts || !Object.keys(this.accounts).length\r\n   }\r\n\r\n   redirectIfEmpty(history) {\r\n      if (this.isEmpty()) {\r\n         this.redirectToCreateAccount({}, history)\r\n      }\r\n   }\r\n\r\n   async loadAccount(accountId, history) {\r\n      if (!(accountId in this.accounts)) {\r\n         throw new Error('Account ' + accountId + \" doesn't exist.\")\r\n      }\r\n      return await this.near.nearClient.viewAccount(accountId)\r\n   }\r\n\r\n   async checkAccount(accountId) {\r\n      if (accountId !== this.accountId) {\r\n         return await this.near.nearClient.viewAccount(accountId)\r\n      } else {\r\n         throw new Error('You are logged into account ' + accountId + ' .')\r\n      }\r\n   }\r\n\r\n   async checkNewAccount(accountId) {\r\n      if (accountId in this.accounts) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let remoteAccount = null\r\n      try {\r\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\r\n      } catch (e) {\r\n         // expected\r\n      }\r\n      if (!!remoteAccount) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n   }\r\n\r\n   async createNewAccount(accountId) {\r\n      if (accountId in this.accounts) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let remoteAccount = null\r\n      try {\r\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\r\n      } catch (e) {\r\n         // expected\r\n      }\r\n      if (!!remoteAccount) {\r\n         throw new Error('Account ' + accountId + ' already exists.')\r\n      }\r\n      let keyPair = await nearlib.KeyPair.fromRandomSeed();\r\n      return await new Promise((resolve, reject) => {\r\n         let data = JSON.stringify({\r\n            newAccountId: accountId,\r\n            newAccountPublicKey: keyPair.getPublicKey()\r\n         })\r\n\r\n         let xhr = new XMLHttpRequest()\r\n         xhr.open('POST', CONTRACT_CREATE_ACCOUNT_URL)\r\n         xhr.setRequestHeader('Content-Type', 'application/json')\r\n         xhr.onload = () => {\r\n            if (xhr.status === 200) {\r\n               this.key_store.setKey(accountId, keyPair).catch(console.log)\r\n               this.accounts[accountId] = true\r\n               this.accountId = accountId\r\n               this.save()\r\n               resolve(xhr)\r\n            } else if (xhr.status !== 200) {\r\n               reject(xhr.responseText)\r\n            }\r\n         }\r\n         xhr.send(data)\r\n      })\r\n   }\r\n\r\n   async addAccessKey(accountId, contractId, publicKey, successUrl) {\r\n      const addAccessKeyResponse = await this.account.addAccessKey(\r\n         accountId,\r\n         publicKey,\r\n         contractId,\r\n         '',  // methodName\r\n         '',  // fundingOwner\r\n         0,  // fundingAmount\r\n      );\r\n      try {\r\n         const result = await this.near.waitForTransactionResult(addAccessKeyResponse);\r\n         if (result.status == \"Completed\") {\r\n            window.location.href = successUrl;\r\n         }\r\n      } catch (e) {\r\n         // TODO: handle errors\r\n         console.log(\"Error on adding access key \", e);\r\n      }\r\n   }\r\n\r\n   subscribeForMessages() {\r\n      //  window.addEventListener(\"message\", $.proxy(this.receiveMessage, this), false);\r\n      window.addEventListener('message', this.receiveMessage.bind(this), false)\r\n   }\r\n\r\n   clearState() {\r\n      this.accounts = {}\r\n      this.tokens = {}\r\n      this.accountId = ''\r\n      this.save()\r\n   }\r\n\r\n   async processTransactionMessage(action, data) {\r\n      let token = data['token'] || ''\r\n      if (!(token in this.tokens)) {\r\n         // Unknown token.\r\n         throw new Error('The token ' + token + ' is not found ')\r\n      }\r\n      let app_data = this.tokens[token]\r\n      let accountId = app_data['account_id']\r\n      if (!(accountId in this.accounts)) {\r\n         // Account is no longer authorized.\r\n         throw new Error(\r\n            'The account ' + accountId + ' is not part of the wallet anymore.'\r\n         )\r\n      }\r\n      let contract_id = app_data['contract_id']\r\n      let receiverId = data['receiver_id'] || contract_id\r\n      if (receiverId !== contract_id || !this.isLegitAccountId(receiverId)) {\r\n         // Bad receiver account ID or it doesn't match contract id.\r\n         throw new Error(\r\n            \"Bad receiver's account ID ('\" +\r\n               receiverId +\r\n               \"') or it doesn't match the authorized contract id\"\r\n         )\r\n      }\r\n      let amount = parseInt(data['amount']) || 0\r\n      if (amount !== 0) {\r\n         // Automatic authorization denied since for amounts greater than 0.\r\n         throw new Error('Transaction amount should be 0.')\r\n      }\r\n      let methodName = data['methodName'] || ''\r\n      if (!methodName) {\r\n         // Method name can't be empty since the amount is 0.\r\n         throw new Error(\"Method name can't be empty since the amount is 0\")\r\n      }\r\n      let args = data['args'] || {}\r\n      if (action === 'send_transaction') {\r\n         // Sending the transaction on behalf of the accountId\r\n         return await this.sendTransaction(\r\n            accountId,\r\n            receiverId,\r\n            methodName,\r\n            amount,\r\n            args\r\n         )\r\n      } else if (action === 'sign_transaction') {\r\n         // Signing the provided hash of the transaction. It's a security issue here.\r\n         // In the future we would sign the transaction above and don't depend on the given hash.\r\n         let hash = data['hash'] || ''\r\n         let signature = await this.near.nearClient.signer.signHash(\r\n            hash,\r\n            accountId\r\n         )\r\n         return signature\r\n      } else {\r\n         throw new Error('Unknown action')\r\n      }\r\n   }\r\n\r\n   requestCode(phoneNumber, accountId) {\r\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/requestCode`);\r\n   }\r\n\r\n   validateCode(phoneNumber, accountId, securityCode) {\r\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/validateCode`, { securityCode });\r\n   }\r\n\r\n   receiveMessage(event) {\r\n      let data\r\n      try {\r\n         data = JSON.parse(event.data)\r\n      } catch (e) {\r\n         // Silently dying.\r\n         return\r\n      }\r\n      const action = data['action'] || ''\r\n      if (action !== 'send_transaction' && action !== 'sign_transaction') {\r\n         // Unknown action, skipping silently.\r\n         return\r\n      }\r\n      const request_id = data['request_id'] || ''\r\n\r\n      let reply = d => event.source.postMessage(JSON.stringify(d), event.origin)\r\n\r\n      this.processTransactionMessage(action, data)\r\n         .then(result => {\r\n            console.log('Wallet: OK ' + action)\r\n            reply({\r\n               success: true,\r\n               request_id,\r\n               result\r\n            })\r\n         })\r\n         .catch(error => {\r\n            console.error('Wallet: failed to ' + action, error)\r\n            reply({\r\n               success: false,\r\n               request_id,\r\n               error\r\n            })\r\n         })\r\n   }\r\n}\r\n","import { parse } from 'query-string'\r\nimport { createActions } from 'redux-actions';\r\nimport { Wallet } from '../utils/wallet';\r\n\r\nexport const REFRESH_ACCOUNT = 'REFRESH_ACCOUNT'\r\nexport const LOADER_ACCOUNT = 'LOADER_ACCOUNT'\r\nexport const REFRESH_URL = 'REFRESH_URL'\r\n\r\nexport function handleRefreshAccount(wallet, history) {\r\n   return (dispatch, getState) => {\r\n      wallet.redirectIfEmpty(history)\r\n      const accountId = wallet.getAccountId()\r\n\r\n      dispatch({\r\n         type: LOADER_ACCOUNT,\r\n         loader: true\r\n      })\r\n\r\n      wallet\r\n         .loadAccount(accountId, history)\r\n         .then(v => {\r\n            dispatch({\r\n               type: REFRESH_ACCOUNT,\r\n               data: {\r\n                  accountId: accountId,\r\n                  authToken: wallet.newAccessToken(\r\n                     getState().account.url.app_title,\r\n                     getState().account.url.app_url,\r\n                     getState().account.url.contract_id\r\n                  ),\r\n                  amount: v['amount'] || 0,\r\n                  stake: v['stake'],\r\n                  nonce: v['nonce'],\r\n                  code_hash: v['code_hash'],\r\n                  accounts: wallet.accounts\r\n               }\r\n            })\r\n\r\n            dispatch({\r\n               type: LOADER_ACCOUNT,\r\n               loader: false\r\n            })\r\n         })\r\n         .catch(e => {\r\n            console.log(e)\r\n\r\n            if (e.message && e.message.indexOf('is not valid') !== -1) {\r\n               // We have an account in the storage, but it doesn't exist on blockchain. We probably nuked storage so just redirect to create account\r\n               wallet.clearState()\r\n               wallet.redirectToCreateAccount(\r\n                  {\r\n                     reset_accounts: true\r\n                  },\r\n                  history\r\n               )\r\n            }\r\n         })\r\n   }\r\n}\r\n\r\nexport function handleRefreshUrl(location) {\r\n   return dispatch => {\r\n      dispatch({\r\n         type: REFRESH_URL,\r\n         url: {\r\n            app_title: parse(location.search).title || '',\r\n            app_url: parse(location.search).app_url || '',\r\n            contract_id: parse(location.search).contract_id || '',\r\n            success_url: parse(location.search).success_url || '',\r\n            failure_url: parse(location.search).failure_url || '',\r\n            public_key: parse(location.search).public_key || ''\r\n         }\r\n      })\r\n   }\r\n}\r\n\r\nconst wallet = new Wallet()\r\n\r\nexport const { requestCode, validateCode } = createActions({\r\n   REQUEST_CODE: wallet.requestCode.bind(wallet),\r\n   VALIDATE_CODE: wallet.validateCode.bind(wallet)\r\n})\r\n\r\n\r\n\r\n\r\n","import { handleActions, combineActions } from 'redux-actions'\r\nimport {\r\n   REFRESH_ACCOUNT,\r\n   LOADER_ACCOUNT,\r\n   REFRESH_URL,\r\n   requestCode,\r\n   validateCode\r\n} from '../actions/account'\r\nimport reduceReducers from 'reduce-reducers';\r\n\r\nconst initialState = {\r\n   formLoader: false,\r\n   sentSms: false,\r\n   successMessage: false,\r\n   errorMessage: false\r\n}\r\n\r\nconst loaderReducer = (state, { ready }) => {\r\n   if (typeof ready === 'undefined') {\r\n      return state\r\n   }\r\n   return { ...state, formLoader: !ready }\r\n}\r\n\r\nconst requestResultReducer = handleActions({\r\n   [combineActions(requestCode, validateCode)]: (state, { error, payload }) => {\r\n      return { ...state, successMessage: !!payload, errorMessage: !!error}\r\n   }\r\n}, initialState)\r\n\r\nconst reducer = handleActions({\r\n   [requestCode]: (state, { payload }) => {\r\n      if (payload) {\r\n         return { ...state, sentSms: true }\r\n      }\r\n      return state\r\n   },\r\n}, initialState)\r\n\r\n// TODO: Migrate everything to redux-actions\r\nfunction account(state = {}, action) {\r\n   switch (action.type) {\r\n      case REFRESH_ACCOUNT:\r\n         return {\r\n            ...state,\r\n            ...action.data\r\n         }\r\n      case LOADER_ACCOUNT: {\r\n         return {\r\n            ...state,\r\n            loader: action.loader\r\n         }\r\n      }\r\n      case REFRESH_URL: {\r\n         return {\r\n            ...state,\r\n            url: action.url\r\n         }\r\n      }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport default reduceReducers(\r\n   initialState,\r\n   loaderReducer,\r\n   requestResultReducer,\r\n   reducer,\r\n   account)\r\n\r\n","import thunk from 'redux-thunk'\r\nimport { applyMiddleware, compose } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n/**\r\n * Lets you dispatch special actions with a { promise } field.\r\n *\r\n * This middleware will turn them into a single action at the beginning,\r\n * and a single success (or failure) action when the `promise` resolves.\r\n *\r\n * For convenience, `dispatch` will return the promise so the caller can wait.\r\n */\r\nconst readyStatePromise = store => next => action => {\r\n    if (!action.payload || !action.payload.then) {\r\n      return next(action)\r\n    }\r\n  \r\n    function makeAction(ready, data) {\r\n      const newAction = Object.assign({}, action)\r\n      delete newAction.payload\r\n      return Object.assign(newAction, { ready }, data)\r\n    }\r\n  \r\n    next(makeAction(false))\r\n    return action.payload.then(\r\n      payload => next(makeAction(true, { payload })),\r\n      error => next(makeAction(true, { error }))\r\n    )\r\n  }\r\n\r\nexport default (history) => composeEnhancers(\r\n    applyMiddleware(\r\n        routerMiddleware(history),\r\n        readyStatePromise,\r\n        thunk))\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport {\r\n   Image,\r\n   Menu,\r\n   Responsive,\r\n   Segment,\r\n   List,\r\n   Button,\r\n   Loader\r\n} from 'semantic-ui-react'\r\n\r\nimport SendImage from '../../images/icon-send.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\r\nimport LogoutImage from '../../images/icon-logout.svg'\r\nimport LogoImage from '../../images/wallet.png'\r\nimport AccountGreyImage from '../../images/icon-account.svg'\r\nimport MobileMenuImage from '../../images/icon-mobile-menu.svg'\r\nimport CloseImage from '../../images/icon-close.svg'\r\nimport RecentImage from '../../images/icon-recent.svg'\r\nimport ActivityImage from '../../images/icon-activity.svg'\r\n\r\nimport { handleRefreshAccount } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomResponsive = styled(Responsive)`\r\n   &&& {\r\n      padding-bottom: 240px;\r\n\r\n      .navbar {\r\n         padding: 0px;\r\n\r\n         &-main {\r\n            background-color: #24272a;\r\n            height: 72px;\r\n            border-radius: 0;\r\n            margin-bottom: 0;\r\n\r\n            .item {\r\n               font-family: 'benton-sans', sans-serif;\r\n               font-weight: 600;\r\n            }\r\n\r\n            .mainlogo {\r\n               padding-left: 0px;\r\n\r\n               > div {\r\n                  width: 50px;\r\n                  overflow: hidden;\r\n\r\n                  > img.image {\r\n                     width: 160px;\r\n                     max-width: none;\r\n                  }\r\n               }\r\n            }\r\n\r\n            .account-name {\r\n               padding-right: 0px;\r\n               text-align: right;\r\n\r\n               > div {\r\n                  font-size: 16px;\r\n                  letter-spacing: normal;\r\n                  padding-left: 0px;\r\n                  padding-right: 0px;\r\n                  text-overflow: ellipsis;\r\n                  overflow: hidden;\r\n                  width: 116px;\r\n                  color: #fff;\r\n\r\n                  :hover {\r\n                     color: #fff;\r\n                  }\r\n               }\r\n            }\r\n\r\n            .account-tokens {\r\n               line-height: 28px;\r\n               font-size: 16px;\r\n\r\n               color: #fff;\r\n\r\n               margin: 21px 0 0 10px;\r\n               height: 28px;\r\n               background: #111314;\r\n               border-radius: 12px;\r\n               padding: 0 10px;\r\n\r\n               letter-spacing: normal;\r\n\r\n               :hover {\r\n                  color: #fff;\r\n               }\r\n\r\n               .near {\r\n                  font-size: 18px;\r\n                  padding-left: 4px;\r\n               }\r\n            }\r\n\r\n            .account-arrow {\r\n               padding-right: 14px;\r\n\r\n               img {\r\n                  width: 20px;\r\n               }\r\n            }\r\n         }\r\n         &-sub {\r\n            margin: 0px;\r\n            padding: 0px;\r\n            background-color: #24272a;\r\n\r\n            &.hide {\r\n               display: none;\r\n            }\r\n\r\n            .main {\r\n               font-family: 'benton-sans', sans-serif;\r\n               font-weight: 400;\r\n               font-size: 14px;\r\n               padding: 18px 6px;\r\n               margin: 0 1rem;\r\n               border-top: 1px solid #4a4f54;\r\n\r\n               &.border {\r\n                  border-bottom: 1px solid #4a4f54;\r\n               }\r\n\r\n               a {\r\n                  color: #fff;\r\n                  letter-spacing: 2px;\r\n               }\r\n\r\n               img {\r\n                  margin-top: -4px;\r\n                  width: 24px;\r\n                  margin-right: 20px;\r\n                  display: inline-block !important;\r\n               }\r\n            }\r\n\r\n            .sub {\r\n               padding: 10px 1rem 0 1rem;\r\n\r\n               .item {\r\n                  font-family: 'benton-sans', sans-serif;\r\n                  font-weight: 400;\r\n                  font-size: 14px;\r\n                  padding: 8px 9px;\r\n\r\n                  a {\r\n                     color: #8fd6bd;\r\n                     letter-spacing: 2px;\r\n                  }\r\n\r\n                  img {\r\n                     margin-top: -2px;\r\n                     width: 18px;\r\n                     margin-right: 22px;\r\n                     display: inline-block !important;\r\n                  }\r\n               }\r\n            }\r\n\r\n            .switch-account {\r\n               background: #000;\r\n               padding: 0 1rem;\r\n\r\n               padding: 20px;\r\n\r\n               .item {\r\n                  padding: 0 10px;\r\n               }\r\n\r\n               h6.item {\r\n                  padding-bottom: 10px;\r\n                  border: 0px;\r\n               }\r\n\r\n               .account-title {\r\n                  height: 40px;\r\n                  line-height: 40px;\r\n                  color: #fff;\r\n                  font-weight: 500;\r\n                  border-bottom: 1px solid #323434;\r\n                  letter-spacing: normal;\r\n\r\n                  text-overflow: ellipsis;\r\n                  overflow: hidden;\r\n               }\r\n\r\n               button {\r\n                  width: 100%;\r\n                  border-radius: 30px;\r\n                  background: #24272a;\r\n                  color: #6ad1e3;\r\n\r\n                  :hover {\r\n                     background: #fff;\r\n                     color: #6ad1e3;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst getWidth = () => {\r\n   const isSSR = typeof window === 'undefined'\r\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\nclass MobileView extends Component {\r\n   static propTypes = {\r\n      children: PropTypes.node\r\n   }\r\n\r\n   static defaultProps = {\r\n      children: ''\r\n   }\r\n\r\n   state = {\r\n      dropdown: true\r\n   }\r\n\r\n   handleDropdown = () =>\r\n      this.setState(state => ({\r\n         dropdown: !state.dropdown\r\n      }))\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n      this.handleDropdown()\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet = new Wallet()\r\n      this.handleDropdown()\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { dropdown } = this.state\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <CustomResponsive\r\n            getWidth={getWidth}\r\n            maxWidth={Responsive.onlyTablet.maxWidth}\r\n         >\r\n            <Segment basic className='navbar'>\r\n               <Menu\r\n                  className='navbar-main'\r\n                  // fixed={fixed ? 'top' : null}\r\n                  // fixed='top'\r\n                  // pointing={!fixed}\r\n                  borderless\r\n               >\r\n                  <Menu.Item as={Link} to='/' className='mainlogo'>\r\n                     <div>\r\n                        <Image src={LogoImage} />\r\n                     </div>\r\n                  </Menu.Item>\r\n\r\n                  {account.accountId && (\r\n                  <Menu.Menu position='right' onClick={this.handleDropdown}>\r\n                     <Menu.Menu position='right'>\r\n                        <Menu.Item className='account-name'>\r\n                           {account.loader || !account.accountId ? (\r\n                              <Loader active inline size='mini' />\r\n                           ) : (\r\n                              <div>@{account.accountId}</div>\r\n                           )}\r\n                        </Menu.Item>\r\n                        <Menu.Item className='account-tokens'>\r\n                           {account.loader || !account.accountId ? (\r\n                              <Loader active inline size='mini' />\r\n                           ) : (\r\n                              account.amount\r\n                           )}\r\n                           <span className='near'>Ⓝ</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item className='account-arrow'>\r\n                           <Image\r\n                              src={dropdown ? MobileMenuImage : CloseImage}\r\n                           />\r\n                        </Menu.Item>\r\n                     </Menu.Menu>\r\n                  </Menu.Menu>\r\n                )}\r\n               </Menu>\r\n               <Segment\r\n                  basic\r\n                  className={`navbar-sub ${dropdown ? `hide` : ``}`}\r\n               >\r\n                  <Menu.Menu>\r\n                     <Menu.Item className='main'>\r\n                        <Link to='/' onClick={this.handleDropdown}>\r\n                           <Image src={RecentImage} />\r\n                           SUMMARY\r\n                        </Link>\r\n                     </Menu.Item>\r\n                     <Menu.Item className='main'>\r\n                        <Link to='/activity' onClick={this.handleDropdown}>\r\n                           <Image src={ActivityImage} />\r\n                           ACTIVITY\r\n                        </Link>\r\n                     </Menu.Item>\r\n                     <Menu.Item className='main border'>\r\n                        <Link to='/send-money' onClick={this.handleDropdown}>\r\n                           <Image src={SendImage} />\r\n                           SEND MONEY\r\n                        </Link>\r\n                     </Menu.Item>\r\n\r\n                     <Menu.Menu className='sub'>\r\n                        <Menu.Item>\r\n                           <Link to='/profile' onClick={this.handleDropdown}>\r\n                              <Image src={AccountGreyImage} />\r\n                              Profile\r\n                           </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                           <Link to='/contacts' onClick={this.handleDropdown}>\r\n                              <Image src={ContactsGreyImage} />\r\n                              Contacts\r\n                           </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                           <Link\r\n                              to='/authorized-apps'\r\n                              onClick={this.handleDropdown}\r\n                           >\r\n                              <Image src={AuthorizedGreyImage} />\r\n                              Authorized Apps\r\n                           </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                           <Link to='/' onClick={this.handleDropdown}>\r\n                              <Image src={LogoutImage} />\r\n                              Logout\r\n                           </Link>\r\n                        </Menu.Item>\r\n                     </Menu.Menu>\r\n                     <Segment basic className='switch-account'>\r\n                        <List>\r\n                           <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\r\n\r\n                           {account.accounts &&\r\n                              Object.keys(account.accounts)\r\n                                 .filter(a => a !== account.accountId)\r\n                                 .map((account, i) => (\r\n                                    <List.Item\r\n                                       as='a'\r\n                                       key={`mf-${i}`}\r\n                                       onClick={() =>\r\n                                          this.handleSelectAccount(account)\r\n                                       }\r\n                                       className='account-title'\r\n                                    >\r\n                                       @{account}\r\n                                    </List.Item>\r\n                                 ))}\r\n                        </List>\r\n                        <Button onClick={this.redirectCreateAccount}>\r\n                           CREATE NEW ACCOUNT\r\n                        </Button>\r\n                     </Segment>\r\n                  </Menu.Menu>\r\n               </Segment>\r\n            </Segment>\r\n\r\n            {this.props.children}\r\n         </CustomResponsive>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(MobileView))\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport {\r\n   Image,\r\n   Menu,\r\n   Segment,\r\n   List,\r\n   Button,\r\n   Loader,\r\n   Popup\r\n} from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport AccountImage from '../../images/icon-account.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\r\nimport LogoutImage from '../../images/icon-logout.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomPopup = styled(Popup)`\r\n   &&& {\r\n      padding: 0px;\r\n      right: 12px !important;\r\n      top: 50px !important;\r\n      position: fixed !important;\r\n\r\n      .account-dropdown {\r\n         width: 290px;\r\n         min-height: 100px;\r\n         background-color: #f8f8f8;\r\n\r\n         padding: 20px;\r\n\r\n         .item {\r\n            color: #999999;\r\n         }\r\n\r\n         .submenu {\r\n            margin: -20px;\r\n            padding: 20px;\r\n            background: #fff;\r\n\r\n            .icon {\r\n               width: 20px;\r\n            }\r\n            .content {\r\n               line-height: 26px;\r\n               padding-left: 10px;\r\n            }\r\n            .item {\r\n               margin: 4px 0;\r\n            }\r\n         }\r\n\r\n         .switch-account {\r\n            margin-top: 40px;\r\n            margin-bottom: 0px;\r\n         }\r\n\r\n         &-scroll {\r\n            max-height: 226px;\r\n            overflow-y: auto;\r\n            width: 270px;\r\n            margin-top: 0px;\r\n\r\n            > .item {\r\n               width: 250px;\r\n               margin: 0px;\r\n               padding: 0px;\r\n\r\n               :hover {\r\n                  text-decoration: underline;\r\n               }\r\n               ::before {\r\n                  display: none;\r\n               }\r\n               ::after {\r\n                  display: none;\r\n               }\r\n            }\r\n         }\r\n\r\n         h6 {\r\n            padding-bottom: 6px;\r\n         }\r\n         .account-title {\r\n            height: 40px;\r\n            line-height: 40px;\r\n            color: #4a4f54;\r\n            font-weight: 500;\r\n            border-bottom: 2px solid #e6e6e6;\r\n            letter-spacing: normal;\r\n\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n         }\r\n         button {\r\n            width: 100%;\r\n            border-radius: 30px;\r\n            background: #fff;\r\n            color: #6ad1e3;\r\n\r\n            :hover {\r\n               background: #6ad1e3;\r\n               color: #fff;\r\n            }\r\n         }\r\n      }\r\n\r\n      :hover {\r\n         .account-dropdown {\r\n            display: block;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DesktopPopup = ({\r\n   account,\r\n   handleSelectAccount,\r\n   redirectCreateAccount\r\n}) => (\r\n   <CustomPopup\r\n      trigger={\r\n         <Menu.Menu position='right' className='popup-trigger'>\r\n            <Menu.Item className='devider' />\r\n            <Menu.Item className='account-img'>\r\n               <Image src={AccountGreyImage} />\r\n            </Menu.Item>\r\n            <Menu.Item className='account-name'>\r\n               {account.loader || !account.accountId ? (\r\n                  <Loader active inline size='mini' />\r\n               ) : (\r\n                  `@${account.accountId}`\r\n               )}\r\n            </Menu.Item>\r\n            <Menu.Item className='account-tokens'>\r\n               {account.loader || !account.accountId ? (\r\n                  <Loader active inline size='mini' />\r\n               ) : (\r\n                  account.amount\r\n               )}\r\n               <span className='near'>Ⓝ</span>\r\n            </Menu.Item>\r\n            <Menu.Item className='account-arrow'>\r\n               <Image src={ArrowDownImage} />\r\n            </Menu.Item>\r\n         </Menu.Menu>\r\n      }\r\n      on='click'\r\n      position='right center'\r\n   >\r\n      <Segment basic className='account-dropdown'>\r\n         <List className='submenu'>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={AccountImage} />\r\n               <List.Content as={Link} to='/profile'>\r\n                  Profile\r\n               </List.Content>\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={ContactsGreyImage} />\r\n               <List.Content as={Link} to='/contacts'>\r\n                  Contacts\r\n               </List.Content>\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={AuthorizedGreyImage} />\r\n               <List.Content as={Link} to='authorized-apps'>\r\n                  Authorized Apps\r\n               </List.Content>\r\n            </List.Item>\r\n            <List.Item>\r\n               <List.Icon as={Image} src={LogoutImage} />\r\n               <List.Content as={Link} to='/logout'>\r\n                  Logout\r\n               </List.Content>\r\n            </List.Item>\r\n         </List>\r\n         <List className='switch-account'>\r\n            <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\r\n         </List>\r\n         <List className='account-dropdown-scroll'>\r\n            {account.accounts &&\r\n               Object.keys(account.accounts)\r\n                  .filter(a => a !== account.accountId)\r\n                  .map((account, i) => (\r\n                     <List.Item\r\n                        as='a'\r\n                        key={`mf-${i}`}\r\n                        onClick={() => handleSelectAccount(account)}\r\n                        className='account-title'\r\n                     >\r\n                        @{account}\r\n                     </List.Item>\r\n                  ))}\r\n         </List>\r\n         <Button onClick={redirectCreateAccount}>CREATE NEW ACCOUNT</Button>\r\n      </Segment>\r\n   </CustomPopup>\r\n)\r\n\r\nexport default DesktopPopup\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport DesktopPopup from './DesktopPopup'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { Image, Menu, Responsive, Segment, Visibility } from 'semantic-ui-react'\r\n\r\nimport LogoImage from '../../images/wallet.png'\r\nimport HelpImage from '../../images/icon-help.svg'\r\nimport ActivityImage from '../../images/icon-activity.svg'\r\nimport RecentImage from '../../images/icon-recent.svg'\r\nimport SendImage from '../../images/icon-send.svg'\r\n\r\nimport { handleRefreshAccount } from '../../actions/account'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomResponsive = styled(Responsive)`\r\n   padding-bottom: 180px;\r\n\r\n   .spacer {\r\n      height: 72px;\r\n   }\r\n\r\n   &&& .navbar {\r\n      background-color: #24272a;\r\n      height: 72px;\r\n      border-radius: 0;\r\n\r\n      &-icon {\r\n         height: 24px;\r\n         margin-right: 14px;\r\n         display: inline-block;\r\n      }\r\n      .item {\r\n         color: white;\r\n         font-family: 'benton-sans', sans-serif;\r\n         font-weight: 600;\r\n         font-size: 14px;\r\n         padding-left: 0px;\r\n         padding-right: 30px;\r\n         letter-spacing: 2px;\r\n\r\n         .mainlogo {\r\n            width: 220px;\r\n         }\r\n      }\r\n\r\n      a.item:hover {\r\n         color: #6ad1e3;\r\n      }\r\n      .hover.item {\r\n         color: #6ad1e3;\r\n      }\r\n      .account-img {\r\n         width: 36px;\r\n         height: 36px;\r\n         background: #4a4f54;\r\n         padding-right: 0px;\r\n         padding-left: 6px;\r\n         border-radius: 18px;\r\n         margin-top: 16px;\r\n\r\n         > img {\r\n            width: 24px;\r\n            height: 24px;\r\n         }\r\n      }\r\n      .item.account-name {\r\n         font-size: 14px;\r\n         letter-spacing: normal;\r\n         padding-left: 10px;\r\n         padding-right: 10px;\r\n\r\n         :hover {\r\n            color: #fff;\r\n         }\r\n      }\r\n      .account-tokens {\r\n         line-height: 24px;\r\n         font-size: 14px;\r\n\r\n         color: #fff;\r\n\r\n         margin: 23px 20px 0 10px;\r\n         height: 24px;\r\n         background: #111314;\r\n         border-radius: 12px;\r\n         padding: 0 10px;\r\n\r\n         letter-spacing: normal;\r\n\r\n         :hover {\r\n            color: #fff;\r\n         }\r\n\r\n         .near {\r\n            font-size: 18px;\r\n            padding-left: 4px;\r\n         }\r\n      }\r\n\r\n      .account-arrow {\r\n         padding-right: 26px;\r\n\r\n         img {\r\n            width: 12px;\r\n         }\r\n      }\r\n\r\n      .popup-container {\r\n         .popup-trigger {\r\n            cursor: pointer;\r\n         }\r\n         .devider {\r\n            width: 2px;\r\n            height: 40px;\r\n            background: #5d5f60;\r\n            padding: 0px;\r\n            margin: 16px 28px 0 0;\r\n         }\r\n\r\n         .help {\r\n            padding-right: 12px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst getWidth = () => {\r\n   const isSSR = typeof window === 'undefined'\r\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\nclass DesktopView extends Component {\r\n   static propTypes = {\r\n      children: PropTypes.node\r\n   }\r\n\r\n   static defaultProps = {\r\n      children: ''\r\n   }\r\n\r\n   state = {\r\n      fixed: false,\r\n      activeItem: 'home'\r\n   }\r\n\r\n   hideFixedMenu = () => this.setState({ fixed: false })\r\n\r\n   showFixedMenu = () => this.setState({ fixed: true })\r\n\r\n   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet = new Wallet()\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { fixed } = this.state\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <CustomResponsive\r\n            getWidth={getWidth}\r\n            minWidth={Responsive.onlyComputer.minWidth}\r\n         >\r\n            <Visibility\r\n               once={false}\r\n               onBottomPassed={this.showFixedMenu}\r\n               onBottomPassedReverse={this.hideFixedMenu}\r\n            >\r\n               <Segment className='spacer' basic />\r\n               <Menu\r\n                  className='navbar'\r\n                  // fixed={fixed ? 'top' : null}\r\n                  fixed='top'\r\n                  pointing={!fixed}\r\n                  borderless\r\n                  size='large'\r\n               >\r\n                  <Menu.Item as={Link} to='/'>\r\n                     <Image className='mainlogo' src={LogoImage} />\r\n                  </Menu.Item>\r\n                  <Menu.Item as={Link} to='/'>\r\n                     <Image className='navbar-icon' src={RecentImage} />\r\n                     SUMMARY\r\n                  </Menu.Item>\r\n                  <Menu.Item as={Link} to='/activity'>\r\n                     <Image className='navbar-icon' src={ActivityImage} />\r\n                     ACTIVITY\r\n                  </Menu.Item>\r\n                  <Menu.Item as={Link} to='/send-money'>\r\n                     <Image className='navbar-icon' src={SendImage} />\r\n                     SEND MONEY\r\n                  </Menu.Item>\r\n                  {account.accountId && (\r\n                     <Menu.Menu position='right' className='popup-container'>\r\n                        <Menu.Item\r\n                           as='a'\r\n                           href='http://near.chat/'\r\n                           target='_blank'\r\n                           className='help'\r\n                        >\r\n                           <Image className='navbar-icon' src={HelpImage} />\r\n                        </Menu.Item>\r\n                        <DesktopPopup\r\n                           account={account}\r\n                           handleSelectAccount={this.handleSelectAccount}\r\n                           redirectCreateAccount={this.redirectCreateAccount}\r\n                        />\r\n                     </Menu.Menu>\r\n                  )}\r\n               </Menu>\r\n            </Visibility>\r\n\r\n            {this.props.children}\r\n         </CustomResponsive>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(DesktopView))\r\n","import React, { Fragment } from 'react'\r\n\r\nimport MobileView from './MobileView'\r\nimport DesktopView from './DesktopView'\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n   <Fragment>\r\n      <DesktopView>{children}</DesktopView>\r\n      <MobileView>{children}</MobileView>\r\n   </Fragment>\r\n)\r\n\r\nexport default ResponsiveContainer\r\n","import React from 'react'\r\nimport { Grid, Image, List, Item } from 'semantic-ui-react'\r\n\r\nimport LogoFooterImage from '../../images/near.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst FooterGrid = styled(Grid)`\r\n   position: absolute;\r\n   bottom: 0px;\r\n   width: 100%;\r\n\r\n   height: 100px;\r\n   background-color: #f8f8f8;\r\n\r\n   font-size: 12px;\r\n   font-weight: 300;\r\n   color: #999999;\r\n\r\n   &&& {\r\n      margin-bottom: 0px;\r\n      margin-left: 0px;\r\n\r\n      .near-logo {\r\n         .content {\r\n            a {\r\n               font-size: 12px;\r\n               font-weight: 300;\r\n               color: #999999;\r\n               text-decoration: underline;\r\n\r\n               :hover {\r\n                  text-decoration: none;\r\n               }\r\n            }\r\n            .color-brown-grey {\r\n               color: #e6e6e6;\r\n               padding: 0 6px;\r\n            }\r\n         }\r\n         .image {\r\n            width: 140px;\r\n            padding-left: 14px;\r\n\r\n            img {\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   &&&& .help {\r\n      padding-right: 0px;\r\n      padding-top: 10px;\r\n      padding-bottom: 0px;\r\n\r\n      > .list {\r\n         width: 230px;\r\n         height: 80px;\r\n         padding: 20px 0;\r\n         background: #fff;\r\n         text-align: left;\r\n\r\n         > img {\r\n            width: 80px;\r\n            position: absolute;\r\n            bottom: 0px;\r\n            right: 200px;\r\n         }\r\n\r\n         > h3 {\r\n            font-weight: 600 !important;\r\n            padding: 0 0 0 40px;\r\n            color: #999999 !important;\r\n\r\n            &.color {\r\n               color: #0072ce !important;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         height: 180px;\r\n\r\n         .near-logo {\r\n            .item {\r\n            }\r\n            .content {\r\n               text-align: center;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ResponsiveContainer = () => (\r\n   <FooterGrid columns={2}>\r\n      <Grid.Column\r\n         textAlign='left'\r\n         verticalAlign='middle'\r\n         computer={10}\r\n         tablet={10}\r\n         mobile={16}\r\n      >\r\n         <Item.Group className='near-logo'>\r\n            <Item>\r\n               <Item.Image src={LogoFooterImage} />\r\n               <Item.Content>\r\n                  © 2019 NEAR Inc. All Rights Reserved.\r\n                  <br />\r\n                  <a href='/'>Terms of Service</a>\r\n                  <span className='color-brown-grey'>|</span>\r\n                  <a href='/'>Privacy Policy</a>\r\n               </Item.Content>\r\n            </Item>\r\n         </Item.Group>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         only='tablet computer'\r\n         computer={6}\r\n         tablet={6}\r\n         textAlign='right'\r\n         className='help'\r\n      >\r\n         <List floated='right'>\r\n            <List.Item as='h3'>Need Help?</List.Item>\r\n            <List.Item as='h3' className='color'>\r\n               <a href='https://discordapp.com/invite/gBtUFKR'>\r\n                  Contact Support\r\n               </a>\r\n            </List.Item>\r\n            <Image className='nearkat' src={NearkatImage} />\r\n         </List>\r\n      </Grid.Column>\r\n   </FooterGrid>\r\n)\r\n\r\nexport default ResponsiveContainer\r\n","import React from 'react'\r\n\r\nimport TContractImage from '../../images/icon-t-contract.svg'\r\n\r\nimport { Grid, List } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&&& {\r\n      margin-top: 0px;\r\n\r\n      .other-assets {\r\n         background: #f8f8f8;\r\n         border-top: 2px solid #e6e6e6;\r\n         border-bottom: 4px solid #e6e6e6;\r\n         padding: 0px;\r\n\r\n         .column {\r\n            border-right: 2px solid #e6e6e6;\r\n            padding: 10px 0px 10px 18px;\r\n\r\n            :last-of-type {\r\n               border: 0px;\r\n            }\r\n\r\n            .content {\r\n               width: auto;\r\n            }\r\n\r\n            .icon {\r\n               background-image: url(${TContractImage});\r\n               background-repeat: no-repeat;\r\n               background-position: center top;\r\n               background-size: 24px 24px;\r\n               width: 24px;\r\n               height: 38px;\r\n               margin: 0 6px 0 0;\r\n            }\r\n\r\n            h5 {\r\n               font-weight: 600;\r\n               line-height: 16px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   && .other-assets-title {\r\n      padding-bottom: 6px;\r\n      color: #24272a;\r\n      font-weight: 600;\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      &&&& .other-assets {\r\n         .column {\r\n            .content {\r\n               h2 {\r\n                  font-size: 16px !important;\r\n               }\r\n            }\r\n            .icon {\r\n               background-size: 18px 24px;\r\n               width: 18px;\r\n               margin: 8px 6px 0 0;\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&&& .other-assets {\r\n         background: #fff;\r\n         margin-top: 18px !important;\r\n         border-right: 0px;\r\n\r\n         > .column {\r\n            width: 100% !important;\r\n            border-right: 0px;\r\n            border-bottom: 2px solid #f8f8f8;\r\n            padding: 6px 0px 6px 4px;\r\n\r\n            .list {\r\n               width: 100%;\r\n\r\n               .item {\r\n                  width: 100%;\r\n\r\n                  .content {\r\n                     float: right;\r\n                     text-align: right;\r\n\r\n                     h2 {\r\n                        font-size: 14px !important;\r\n                     }\r\n                  }\r\n                  .icon {\r\n                     height: 20px;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n\r\n         &-title {\r\n            display: none;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardOtherAssets = () => (\r\n   <CustomGrid>\r\n      <Grid.Row className='other-assets-title' as='h6'>\r\n         OTHER ASSETS\r\n      </Grid.Row>\r\n      <Grid.Row columns={6} className='other-assets'>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        12.125\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ETH\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        3.2501\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        XRP\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        8.0987\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ZEC\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        13.258\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        BNB\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        2.5897\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        XMR\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n         <Grid.Column>\r\n            <List horizontal>\r\n               <List.Item>\r\n                  <List.Icon />\r\n                  <List.Content>\r\n                     <List.Header as='h2' className='color-charcoal-grey'>\r\n                        1.2589\r\n                     </List.Header>\r\n                     <List.Description as='h5' className='color-brown-grey'>\r\n                        ZIL\r\n                     </List.Description>\r\n                  </List.Content>\r\n               </List.Item>\r\n            </List>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default DashboardOtherAssets\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport DashboardOtherAssets from './DashboardOtherAssets'\r\n\r\nimport ArrowGrnImage from '../../images/icon-arrow-grn.svg'\r\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\r\n\r\nimport { Container, Grid, Button, Header } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n\r\n         :first-child {\r\n            padding-left: 0px;\r\n         }\r\n      }\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-left: 0px;\r\n         line-height: 48px;\r\n      }\r\n   }\r\n\r\n   .near {\r\n      font-size: 48px;\r\n      color: #24272a;\r\n   }\r\n\r\n   &&& .send-money {\r\n      margin: -8px 0 0 0;\r\n\r\n      > .button {\r\n         width: 100%;\r\n         line-height: 60px;\r\n         border-radius: 30px;\r\n         border: solid 2px #5ace84;\r\n         font-size: 18px;\r\n         font-weight: 600;\r\n         letter-spacing: 2px;\r\n         color: #5ace84;\r\n         background: #fff;\r\n         text-align: left;\r\n         padding: 0 0 0 40px;\r\n\r\n         background-image: url(${ArrowGrnImage});\r\n         background-repeat: no-repeat;\r\n         background-position: 90% center;\r\n         background-size: 14px 20px;\r\n\r\n         :hover {\r\n            background-color: #5ace84;\r\n            color: #fff;\r\n            background-image: url(${ArrowRightImage});\r\n         }\r\n      }\r\n   }\r\n\r\n   &&& {\r\n      .right-section {\r\n         padding-left: 40px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      > .grid {\r\n         margin-left: 0px;\r\n         margin-right: 0px;\r\n      }\r\n\r\n      &&& .send-money {\r\n         margin-top: 20px;\r\n         margin-top: 0px;\r\n      }\r\n\r\n      &&& .creating-info {\r\n         padding-top: 24px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 12px 0;\r\n         }\r\n         .balance {\r\n            display: none;\r\n         }\r\n         .button {\r\n            width: 240px;\r\n            line-height: 44px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row className='creating-info'>\r\n            <Grid.Column computer={12} tablet={11} mobile={16}>\r\n               <Header as='h1'>\r\n                  <span className='balance'>Balance: </span>\r\n                  <span className='color-black'>2,300.562</span>\r\n                  <span className='near'>Ⓝ</span>\r\n               </Header>\r\n            </Grid.Column>\r\n            <Grid.Column\r\n               computer={4}\r\n               tablet={5}\r\n               mobile={16}\r\n               className='send-money'\r\n            >\r\n               <Button as={Link} to='/contacts'>\r\n                  SEND MONEY\r\n               </Button>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      <DashboardOtherAssets />\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default DashboardContainer\r\n","import React from 'react'\r\n\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nimport CloseImage from '../../images/icon-close.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 20px;\r\n      margin: 12px 0 12px 0;\r\n\r\n      .img {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 20px;\r\n         right: 20px;\r\n\r\n         img {\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      .text {\r\n         margin: 0 10% 0 0;\r\n         color: #24272a;\r\n         float: left;\r\n\r\n         .header {\r\n            font-family: 'benton-sans', sans-serif;\r\n         }\r\n         .content {\r\n            color: #999999;\r\n            padding-top: 12px;\r\n            line-height: 20px;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardNotice = ({ handleNotice }) => (\r\n   <CustomList horizontal className='box'>\r\n      <List.Item className='text'>\r\n         <List.Header>Here’s a Notice of some sort</List.Header>\r\n         <List.Content>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce nec\r\n            ex non augue volutpat finibus. Suspendisse fringilla consequat magna\r\n            a finibus.{` `}\r\n            <a href='/'>Call to Action</a>\r\n         </List.Content>\r\n      </List.Item>\r\n      <List.Item className='img'>\r\n         <Image onClick={handleNotice} src={CloseImage} />\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default DashboardNotice\r\n","import React from 'react'\r\n\r\nimport DashboardNotice from './DashboardNotice'\r\n\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nconst DashboardSection = ({ children, notice, handleNotice }) => (\r\n   <Grid columns={2} stackable>\r\n      <Grid.Column computer={10}>\r\n         {notice && <DashboardNotice handleNotice={handleNotice} />}\r\n         {children[0]}\r\n      </Grid.Column>\r\n      <Grid.Column computer={6} className='right-section'>\r\n         {children[1]}\r\n         {children[2]}\r\n      </Grid.Column>\r\n   </Grid>\r\n)\r\n\r\nexport default DashboardSection\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Grid, Image } from 'semantic-ui-react'\r\n\r\nimport ArrowRight from '../../images/icon-arrow-right.svg'\r\nimport ArrowBlkImage from '../../images/icon-arrow-blk.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGridRow = styled(Grid.Row)`\r\n   &&& {\r\n      margin-left: 20px;\r\n      border-left: 4px solid #f8f8f8;\r\n\r\n      .col-image {\r\n         margin-left: -33px;\r\n         width: 40px;\r\n         flex: 0 0 40px;\r\n         padding-left: 0px;\r\n\r\n         .main-image {\r\n            border: 1px solid #e6e6e6;\r\n            background: #fff;\r\n            border-radius: 14px;\r\n            padding: 5px;\r\n            width: 26px;\r\n            height: 26px;\r\n            margin: 0 24px 0 18px;\r\n            overflow: hidden;\r\n\r\n            img {\r\n               margin: 0 0 0 0;\r\n            }\r\n         }\r\n      }\r\n\r\n      &.wide {\r\n         margin-left: 0px;\r\n         border-left: 0px;\r\n\r\n         .col-image {\r\n            margin-left: 6px;\r\n            width: 56px;\r\n            flex: 0 0 56px;\r\n         }\r\n\r\n         .main-image {\r\n            border: 0px;\r\n            padding: 0 10px;\r\n            width: 48px;\r\n            height: 48px;\r\n            background: #e6e6e6;\r\n            border-radius: 32px;\r\n            margin: 0 24px 0 0;\r\n\r\n            img {\r\n               padding-top: 10px;\r\n            }\r\n         }\r\n      }\r\n\r\n      .main-row-title {\r\n         font-weight: 600;\r\n         width: auto;\r\n         padding-right: 0px;\r\n         flex: 1;\r\n      }\r\n\r\n      .dropdown-image-right {\r\n         width: 10px;\r\n         margin: 0 0 0 0;\r\n         cursor: pointer;\r\n      }\r\n      .dropdown-image {\r\n         float: right;\r\n      }\r\n\r\n      &.dropdown-down {\r\n         background-color: #f8f8f8;\r\n\r\n         .dropdown-image-right {\r\n            width: 10px;\r\n            top: 0px;\r\n            left: 12px;\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      &.showsub {\r\n         .dropdown-image-right {\r\n            left: -24px;\r\n         }\r\n      }\r\n      &.showsub.dropdown-down {\r\n         .dropdown-image-right {\r\n            left: -6px;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         &.showsub {\r\n            .dropdown-image-right {\r\n               left: -14px;\r\n            }\r\n         }\r\n         &.showsub.dropdown-down {\r\n            .dropdown-image-right {\r\n               left: 4px;\r\n            }\r\n         }\r\n\r\n         .main-row-title {\r\n            a {\r\n               font-size: 14px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ListItem = ({\r\n   row,\r\n   i,\r\n   wide = false,\r\n   showSub = false,\r\n   toggleShowSub,\r\n   showSubOpen\r\n}) => (\r\n   <CustomGridRow\r\n      verticalAlign='middle'\r\n      className={`border-bottom-light ${wide ? `wide` : ``} ${\r\n         showSub && showSubOpen === i ? `dropdown-down` : ``\r\n      } ${showSub ? `showsub` : ``}`}\r\n   >\r\n      <Grid.Column computer={8} tablet={wide ? 14 : 8} mobile={wide ? 14 : 10}>\r\n         <Grid verticalAlign='middle'>\r\n            <Grid.Column className='col-image'>\r\n               <div className='main-image'>\r\n                  <Image src={row[0]} align='left' />\r\n               </div>\r\n            </Grid.Column>\r\n            <Grid.Column className='main-row-title'>\r\n               <Link to='/' className='color-black'>\r\n                  {row[1]}\r\n               </Link>\r\n               {row[2] && (\r\n                  <span className='font-small'>\r\n                     <br />\r\n                     <Link to='/'>{row[2]}</Link>\r\n                  </span>\r\n               )}\r\n            </Grid.Column>\r\n         </Grid>\r\n      </Grid.Column>\r\n      <Grid.Column\r\n         computer={8}\r\n         tablet={wide ? 2 : 8}\r\n         mobile={wide ? 2 : 6}\r\n         textAlign='right'\r\n      >\r\n         {wide ? (\r\n            <Image\r\n               onClick={() => toggleShowSub(i)}\r\n               src={showSub && showSubOpen === i ? ArrowBlkImage : ArrowRight}\r\n               className='dropdown-image dropdown-image-right'\r\n            />\r\n         ) : (\r\n            <span className='font-small'>{row[3]}</span>\r\n         )}\r\n      </Grid.Column>\r\n   </CustomGridRow>\r\n)\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ListItem from './ListItem'\r\n\r\nimport { Loader, Grid, Dimmer, Button, Header, Image } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      margin-bottom: 20px;\r\n\r\n      .row:first-child {\r\n         padding-bottom: 0px;\r\n      }\r\n\r\n      .row:last-child {\r\n         padding: 14px 0 0 4px;\r\n         margin-left: 20px;\r\n         border-left: 4px solid #f8f8f8;\r\n      }\r\n\r\n      .dashboard-header {\r\n         padding: 14px 0 10px 0;\r\n      }\r\n\r\n      link.view-all,\r\n      button.view-all,\r\n      a.view-all {\r\n         background: #f8f8f8;\r\n         margin: 0;\r\n         padding: 10px 20px;\r\n         color: #0072ce;\r\n         font-weight: 600;\r\n         border-radius: 20px;\r\n         border: 2px solid #f8f8f8;\r\n\r\n         :hover {\r\n            background: #fff;\r\n         }\r\n      }\r\n\r\n      .column-icon {\r\n         width: 28px;\r\n         display: inline-block;\r\n         margin: -4px 10px 0 8px;\r\n      }\r\n   }\r\n`\r\n\r\nconst DashboardActivity = ({ loader, image, title, to, activity }) => (\r\n   <CustomGrid>\r\n      <Grid.Row>\r\n         <Grid.Column className='dashboard-header' textAlign='left' width={16}>\r\n            <Header className='h2'>\r\n               <Image className='column-icon' src={image} />\r\n               {title}\r\n            </Header>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Dimmer inverted active={loader}>\r\n         <Loader />\r\n      </Dimmer>\r\n\r\n      {activity.map((row, i) => (\r\n         <ListItem key={`d-${i}`} row={row} />\r\n      ))}\r\n\r\n      <Grid.Row>\r\n         <Grid.Column textAlign='left' width={16}>\r\n            <Button as={Link} to={to} className='view-all'>\r\n               VIEW ALL\r\n            </Button>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default DashboardActivity\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport DashboardContainer from './DashboardContainer'\r\nimport DashboardSection from './DashboardSection'\r\nimport DashboardActivity from './DashboardActivity'\r\n\r\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\r\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\r\n\r\nimport TStakeImage from '../../images/icon-t-stake.svg'\r\nimport TTransferImage from '../../images/icon-t-transfer.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nclass DashboardDetail extends Component {\r\n   state = {\r\n      loader: false,\r\n      notice: true,\r\n      activity: [],\r\n      authorizedaps: [],\r\n      newcontacts: []\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [\r\n                  TTransferImage,\r\n                  'Sent: 125 Ⓝ  to @jake.near',\r\n                  'Some details about this activity here',\r\n                  '3 min ago'\r\n               ],\r\n               [\r\n                  TStakeImage,\r\n                  'You Staked 10 tokens',\r\n                  'Some details about this activity here',\r\n                  '20 min ago'\r\n               ],\r\n               [\r\n                  TTransferImage,\r\n                  'Sent: 125 Ⓝ  to @vlad.near',\r\n                  'Some details about this activity here',\r\n                  '1 hr ago'\r\n               ]\r\n            ],\r\n            authorizedaps: [\r\n               [NearkatImage, 'NEAR Place', '', '3 hrs ago'],\r\n               [NearkatImage, 'Cryptocats', '', '5 hrs ago'],\r\n               [NearkatImage, 'Knights App', '', '2 days ago']\r\n            ],\r\n            newcontacts: [\r\n               [AccountGreyImage, 'Alex Skidanov ', '', 'Connected 2 days ago'],\r\n               [AccountGreyImage, '@vlad.near', '', '2 days ago'],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  '',\r\n                  'Connected 2 days ago'\r\n               ]\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   handleNotice = () => {\r\n      this.setState(state => ({\r\n         notice: !state.notice\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         loader,\r\n         notice,\r\n         activity,\r\n         authorizedaps,\r\n         newcontacts\r\n      } = this.state\r\n\r\n      return (\r\n         <DashboardContainer>\r\n            <DashboardSection notice={notice} handleNotice={this.handleNotice}>\r\n               <DashboardActivity\r\n                  loader={loader}\r\n                  image={activityGreyImage}\r\n                  title='Activity'\r\n                  to='/'\r\n                  activity={activity}\r\n               />\r\n               <DashboardActivity\r\n                  loader={loader}\r\n                  image={AuthorizedGreyImage}\r\n                  title='Authorized Apps'\r\n                  to='/authorized-apps'\r\n                  activity={authorizedaps}\r\n               />\r\n               <DashboardActivity\r\n                  loader={loader}\r\n                  image={ContactsGreyImage}\r\n                  title='New Contacts'\r\n                  to='/contacts'\r\n                  activity={newcontacts}\r\n               />\r\n            </DashboardSection>\r\n         </DashboardContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(DashboardDetail))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid, List, Responsive } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      .username-row {\r\n         padding-bottom: 0px;\r\n         margin-left: -1rem;\r\n      }\r\n\r\n      .alert-info {\r\n         font-size: 18px;\r\n         font-weight: 600;\r\n         line-height: 64px;\r\n         margin: 0 0 0 0;\r\n         padding-left: 0px;\r\n\r\n         &.problem {\r\n            color: #ff585d;\r\n         }\r\n         &.success {\r\n            color: #6ad1e3;\r\n         }\r\n      }\r\n\r\n      .note-box {\r\n         padding-left: 30px;\r\n\r\n         .border-left-bold {\r\n            padding-bottom: 20px;\r\n         }\r\n      }\r\n\r\n      .note-info {\r\n         .title {\r\n            letter-spacing: 2px;\r\n            font-weight: 600;\r\n            line-height: 20px;\r\n            color: #4a4f54;\r\n         }\r\n      }\r\n\r\n      .form-row {\r\n         margin-left: -1rem;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      .note-box {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         .username-row {\r\n            margin-left: 0;\r\n         }\r\n\r\n         .alert-info {\r\n            padding: 0 0 6px 24px;\r\n            line-height: 34px;\r\n            font-size: 14px;\r\n            margin-top: -6px;\r\n         }\r\n\r\n         .note-box {\r\n            padding-left: 1rem;\r\n            margin-top: 10px;\r\n         }\r\n\r\n         .note-box {\r\n            .border-left-bold {\r\n               padding-bottom: 0px;\r\n            }\r\n         }\r\n\r\n         .form-row {\r\n            padding-top: 6px;\r\n            margin-left: 0;\r\n         }\r\n\r\n         &&& .note-info {\r\n            font-size: 12px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst CreateAccountSection = ({ successMessage, errorMessage, children }) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='username-row'>\r\n         <Grid.Column as='h3' computer={16} tablet={16} mobile={16}>\r\n            Choose a Username\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='form-row'>\r\n         <Grid.Column computer={8} tablet={8} mobile={16}>\r\n            {children}\r\n         </Grid.Column>\r\n         <Grid.Column computer={8} tablet={8} mobile={16}>\r\n            <Grid className='note-box'>\r\n               {successMessage && (\r\n                  <Responsive\r\n                     as={Grid.Row}\r\n                     minWidth={Responsive.onlyTablet.minWidth}\r\n                  >\r\n                     <Grid.Column className='alert-info success'>\r\n                        Congrats! this name is available.\r\n                     </Grid.Column>\r\n                  </Responsive>\r\n               )}\r\n               {errorMessage && (\r\n                  <Responsive\r\n                     as={Grid.Row}\r\n                     minWidth={Responsive.onlyTablet.minWidth}\r\n                  >\r\n                     <Grid.Column className='alert-info problem'>\r\n                        Username is taken. Try something else.\r\n                     </Grid.Column>\r\n                  </Responsive>\r\n               )}\r\n\r\n               <Grid.Row>\r\n                  <Grid.Column className='border-left-bold'>\r\n                     <List className='note-info'>\r\n                        <List.Item className='title'>NOTE</List.Item>\r\n                        <List.Item>\r\n                           Your username can be 5-32 characters\r\n                        </List.Item>\r\n                        <List.Item>\r\n                           long and contain any of the following:\r\n                        </List.Item>\r\n                        <List.Item>• Lowercase characters (a-z)</List.Item>\r\n                        <List.Item>• Digits (0-9)</List.Item>\r\n                        <List.Item>• Special characters (@._-)</List.Item>\r\n                     </List>\r\n                  </Grid.Column>\r\n               </Grid.Row>\r\n            </Grid>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nCreateAccountSection.propTypes = {\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default CreateAccountSection\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nimport ProblemsImage from '../../images/icon-problems.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomFormInput = styled(Form.Input)`\r\n   &&& input {\r\n      width: 100%;\r\n      height: 64px;\r\n      border: 4px solid #f8f8f8;\r\n      padding: 0 0 0 20px;\r\n\r\n      font-size: 18px;\r\n      color: #4a4f54;\r\n      font-weight: 400;\r\n      background: 0;\r\n\r\n      position: relative;\r\n\r\n      :focus {\r\n         border-color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   &&&&& .spinner {\r\n      margin-right: 20px;\r\n\r\n      :before,\r\n      :after {\r\n         top: 28px;\r\n         width: 24px;\r\n         height: 24px;\r\n      }\r\n   }\r\n\r\n   &.problem > .input > input,\r\n   &.problem > .input > input:focus {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n\r\n   &.success > .input > input,\r\n   &.success > .input > input:focus {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n`\r\n\r\nconst CreateAccoungFormInput = ({\r\n   formLoader,\r\n   accountId,\r\n   handleChangeAccountId,\r\n   successMessage,\r\n   errorMessage\r\n}) => (\r\n   <CustomFormInput\r\n      loading={formLoader}\r\n      className={`create ${successMessage ? 'success' : ''}${\r\n         errorMessage ? 'problem' : ''\r\n      }`}\r\n      name='accountId'\r\n      value={accountId}\r\n      onChange={handleChangeAccountId}\r\n      placeholder='example: satoshi.near'\r\n   />\r\n)\r\n\r\nCreateAccoungFormInput.propTypes = {\r\n   formLoader: PropTypes.bool.isRequired,\r\n   accountId: PropTypes.string,\r\n   handleChangeAccountId: PropTypes.func.isRequired,\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default CreateAccoungFormInput\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Segment, Form, Button, Responsive } from 'semantic-ui-react'\r\n\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nimport CreateAccoungFormInput from './CreateAccoungFormInput'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst AccountForm = styled(Form)`\r\n   && button {\r\n      width: 288px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n      font-weight: 600;\r\n\r\n      background: #0072ce;\r\n      margin: 10px 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n         opacity: 1 !important;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n   }\r\n`\r\n\r\nconst CreateAccountForm = ({\r\n   formLoader,\r\n   accountId,\r\n   successMessage,\r\n   errorMessage,\r\n   handleSubmit,\r\n   handleChangeAccountId,\r\n   handleRecaptcha\r\n}) => (\r\n   <AccountForm autoComplete='off' onSubmit={handleSubmit}>\r\n      <CreateAccoungFormInput\r\n         formLoader={formLoader}\r\n         accountId={accountId}\r\n         handleChangeAccountId={handleChangeAccountId}\r\n         successMessage={successMessage}\r\n         errorMessage={errorMessage}\r\n      />\r\n\r\n      <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\r\n         {successMessage && (\r\n            <Segment basic className='alert-info success'>\r\n               Congrats! this name is available.\r\n            </Segment>\r\n         )}\r\n         {errorMessage && (\r\n            <Segment basic className='alert-info problem'>\r\n               Username is taken. Try something else.\r\n            </Segment>\r\n         )}\r\n      </Responsive>\r\n\r\n      <ReCAPTCHA\r\n         sitekey='6LfNjp8UAAAAAByZu30I-2-an14USj3yVbbUI3eN'\r\n         onChange={handleRecaptcha}\r\n      />\r\n\r\n      <Button type='submit' disabled={!successMessage}>\r\n         CREATE ACCOUNT\r\n      </Button>\r\n   </AccountForm>\r\n)\r\n\r\nCreateAccountForm.propTypes = {\r\n   formLoader: PropTypes.bool.isRequired,\r\n   accountId: PropTypes.string,\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired,\r\n   handleSubmit: PropTypes.func.isRequired,\r\n   handleChangeAccountId: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CreateAccountForm\r\n","import React from 'react'\r\n\r\nimport { Image, List } from 'semantic-ui-react'\r\n\r\nimport NearLogoImage from '../../images/near_logo.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   background: #f8f8f8;\r\n   width: 360px;\r\n   float: right;\r\n\r\n   img {\r\n      width: 160px;\r\n   }\r\n\r\n   .text {\r\n      margin: 0 16px 16px 64px;\r\n      line-height: 20px !important;\r\n      color: #24272a;\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& {\r\n         margin-top: 14px;\r\n         float: left;\r\n         width: 100%;\r\n      }\r\n   }\r\n`\r\n\r\nconst NearInfo = () => (\r\n   <CustomList className='box'>\r\n      <List.Item>\r\n         <Image src={NearLogoImage} />\r\n      </List.Item>\r\n      <List.Item className='text'>\r\n         NEAR is a scalable computing and storage platform that changes how the\r\n         web works for the better.{' '}\r\n         <a href='https://nearprotocol.com/'>Learn More</a>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default NearInfo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\r\n\r\nimport { parse } from 'query-string'\r\n\r\nimport NearInfo from './NearInfo'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   && .disclaimer {\r\n      margin-left: 1rem;\r\n      margin-right: 1rem;\r\n      margin-top: 100px;\r\n\r\n      > .column {\r\n         padding-left: 0px;\r\n         padding-right: 0px;\r\n      }\r\n   }\r\n   .disclaimer-info {\r\n      font-weight: 600;\r\n      letter-spacing: 2px;\r\n   }\r\n\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n         }\r\n         h1 {\r\n            margin-bottom: 0px;\r\n         }\r\n         h2 {\r\n            font-size: 16px !important;\r\n            line-height: 22px !important;\r\n            color: #999 !important;\r\n         }\r\n         .column.add {\r\n            text-align: left;\r\n            padding-top: 0px !important;\r\n         }\r\n      }\r\n\r\n      && .disclaimer {\r\n         margin-top: 50px;\r\n         font-size: 12px;\r\n      }\r\n   }\r\n`\r\n\r\nconst CreateAccountContainer = ({ loader, children, location }) => (\r\n   <CustomContainer>\r\n      <Grid stackable>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column>\r\n               <h1>Create Account</h1>\r\n               <h2>\r\n                  Creating a NEAR account is easy. Just choose a username and\r\n                  you’re ready to go.\r\n               </h2>\r\n               {parse(location.search).reset_accounts && (\r\n                  <Header as='h3' className='color-blue'>\r\n                     You have been redirected to this page because we had to\r\n                     reset the developer accounts. Please create a new account.\r\n                     We apologize for the inconveience.\r\n                  </Header>\r\n               )}\r\n            </Grid.Column>\r\n            <Grid.Column className='add'>\r\n               <NearInfo />\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n\r\n      <Grid>\r\n         <Grid.Row className='disclaimer border-top-bold'>\r\n            <Grid.Column computer={16} tablet={16} mobile={16}>\r\n               <span className='disclaimer-info'>DISCLAIMER: </span>\r\n               This is a developers&apos; preview Wallet. It should be used for\r\n               NEAR Protocol DevNet only. Learn more at{` `}\r\n               <a href='http://nearprotocol.com'>nearprotocol.com</a>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n   </CustomContainer>\r\n)\r\n\r\nCreateAccountContainer.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired,\r\n   location: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CreateAccountContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport CreateAccountSection from './CreateAccountSection'\r\nimport CreateAccountForm from './CreateAccountForm'\r\nimport CreateAccountContainer from './CreateAccountContainer'\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nclass CreateAccount extends Component {\r\n   state = {\r\n      loader: false,\r\n      formLoader: false,\r\n      accountId: '',\r\n      successMessage: false,\r\n      errorMessage: false\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n      // this.props.handleRefreshUrl(this.props.location)\r\n      // this.props.handleRefreshAccount(this.wallet)\r\n   }\r\n\r\n   handleChangeAccountId = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: false\r\n      }))\r\n\r\n      if (!this.wallet.isLegitAccountId(value)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         formLoader: true\r\n      }))\r\n\r\n      this.timeout && clearTimeout(this.timeout)\r\n\r\n      this.timeout = setTimeout(() => {\r\n         this.wallet\r\n            .checkNewAccount(value)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  successMessage: true,\r\n                  errorMessage: false\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  successMessage: false,\r\n                  errorMessage: true\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  formLoader: false\r\n               }))\r\n            })\r\n      }, 500)\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.wallet.isLegitAccountId(this.state.accountId)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: true\r\n      }))\r\n\r\n      this.wallet\r\n         .createNewAccount(this.state.accountId)\r\n         .then(d => {\r\n            this.setState(() => ({\r\n               successMessage: true\r\n            }))\r\n            this.props.history.push(`/set-recovery/${this.state.accountId}`)\r\n         })\r\n         .catch(e => {\r\n            this.setState(() => ({\r\n               errorMessage: true\r\n            }))\r\n            console.error('Error creating account:', e)\r\n         })\r\n         .finally(() => {\r\n            this.setState(() => ({\r\n               formLoader: false\r\n            }))\r\n         })\r\n   }\r\n\r\n   handleRecaptcha = value => {\r\n      console.log(value)\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n\r\n      return (\r\n         <CreateAccountContainer loader={loader} location={this.props.location}>\r\n            <CreateAccountSection {...this.state}>\r\n               <CreateAccountForm\r\n                  {...this.state}\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleRecaptcha={this.handleRecaptcha}\r\n                  handleChangeAccountId={this.handleChangeAccountId}\r\n               />\r\n            </CreateAccountSection>\r\n         </CreateAccountContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const CreateAccountWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(CreateAccount)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid, Responsive } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& .alert-info {\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n      line-height: 64px;\r\n      margin: 0 0 0 0;\r\n      padding-left: 0px;\r\n\r\n      &.problem {\r\n         color: #ff585d;\r\n      }\r\n      &.success {\r\n         color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   .note-box {\r\n      padding-left: 30px;\r\n\r\n      .border-left-bold {\r\n         padding-bottom: 20px;\r\n      }\r\n   }\r\n\r\n   &&& .note-info {\r\n      letter-spacing: 2px;\r\n      font-weight: 600;\r\n      line-height: 20px;\r\n      color: #4a4f54;\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      .note-box {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .alert-info {\r\n         padding: 0 0 0 24px;\r\n         line-height: 34px;\r\n         font-size: 14px;\r\n      }\r\n\r\n      .note-box {\r\n         padding-left: 1rem;\r\n         margin-top: 10px;\r\n      }\r\n\r\n      .note-box {\r\n         .border-left-bold {\r\n            padding-bottom: 0px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SetRecoveryInfoSection = ({ successMessage, errorMessage, children }) => (\r\n   <CustomGrid>\r\n      <Grid.Row>\r\n         <Grid.Column computer={8} tablet={8} mobile={16}>\r\n            {children}\r\n         </Grid.Column>\r\n         <Grid.Column computer={8} tablet={8} mobile={16}>\r\n            <Grid className='note-box'>\r\n               {successMessage && (\r\n                  <Responsive\r\n                     as={Grid.Row}\r\n                     minWidth={Responsive.onlyTablet.minWidth}\r\n                  >\r\n                     <Grid.Column className='alert-info success'>\r\n                        TODO: Message to wait for SMS\r\n                     </Grid.Column>\r\n                  </Responsive>\r\n               )}\r\n               {errorMessage && (\r\n                  <Responsive\r\n                     as={Grid.Row}\r\n                     minWidth={Responsive.onlyTablet.minWidth}\r\n                  >\r\n                     <Grid.Column className='alert-info problem'>\r\n                        TODO: Show error message\r\n                     </Grid.Column>\r\n                  </Responsive>\r\n               )}\r\n            </Grid>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nSetRecoveryInfoSection.propTypes = {\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default SetRecoveryInfoSection\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Input, Button } from 'semantic-ui-react'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nimport ProblemsImage from '../../images/icon-problems.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst RecoveryInfoForm = styled(Form)`\r\n   &&& input {\r\n      width: 100%;\r\n      height: 64px;\r\n      border: 4px solid #f8f8f8;\r\n      padding: 0 0 0 20px;\r\n\r\n      font-size: 18px;\r\n      color: #4a4f54;\r\n      font-weight: 400;\r\n      background: 0;\r\n\r\n      position: relative;\r\n\r\n      :focus {\r\n         border-color: #6ad1e3;\r\n      }\r\n   }\r\n\r\n   &&&&& .spinner {\r\n      margin-right: 20px;\r\n\r\n      :before,\r\n      :after {\r\n         top: 28px;\r\n         width: 24px;\r\n         height: 24px;\r\n      }\r\n   }\r\n\r\n   .problem > .input > input {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .problem > .input > input:focus {\r\n      background: url(${ProblemsImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n\r\n   .success > .input > input {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n   .success > .input > input:focus {\r\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\r\n      background-size: 24px 24px;\r\n   }\r\n\r\n   &&& button {\r\n      width: 288px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n\r\n      background: #0072ce;\r\n      margin: 10px 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n         opacity: 1 !important;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   .ui.button {\r\n      height: 60px;\r\n      margin: 10px 0 0 1em;\r\n\r\n      background-color: #fff;\r\n      border-radius: 30px;\r\n      border: 4px solid #e6e6e6;\r\n      color: #999999;\r\n\r\n      font-size: 18px;\r\n      line-height: 24px;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background-color: #e6e6e6;\r\n         color: #fff;\r\n      }\r\n   }\r\n\r\n   & h3 {\r\n      margin-bottom: 1rem;\r\n   }\r\n\r\n   select.react-phone-number-input__country-select {\r\n      height: 100%;\r\n   }\r\n`\r\n\r\nconst SetRecoveryInfoForm = ({\r\n   formLoader,\r\n   phoneNumber,\r\n   sentSms,\r\n   isLegit,\r\n   successMessage,\r\n   errorMessage,\r\n   handleSubmit,\r\n   handleChange\r\n}) => (\r\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\r\n      {!sentSms && (\r\n         <Form.Field>\r\n            <h3>Phone Number</h3>\r\n            <PhoneInput\r\n               className={`create ${successMessage ? 'success' : ''}${\r\n                  errorMessage ? 'problem' : ''\r\n               } ${formLoader ? 'loading' : '' } `}\r\n               name='phoneNumber'\r\n               value={phoneNumber}\r\n               onChange={ value => handleChange(null, { name: 'phoneNumber', value })}\r\n               placeholder='example: +1 555 123 4567'\r\n            />\r\n         </Form.Field>\r\n      )}\r\n\r\n      {sentSms && (\r\n         <Form.Field>\r\n            <h3>Security Code from SMS</h3>\r\n            <Input\r\n               name='securityCode'\r\n               onChange={handleChange}\r\n               placeholder='example: 123456'\r\n            />\r\n         </Form.Field>\r\n      )}\r\n\r\n      <Form.Field>\r\n         <Button type='submit' disabled={!isLegit}>PROTECT ACCOUNT</Button>\r\n         <Link to=\"/dashboard\" className=\"ui button\">NOT NOW</Link>\r\n      </Form.Field>\r\n   </RecoveryInfoForm>\r\n)\r\n\r\nSetRecoveryInfoForm.propTypes = {\r\n   formLoader: PropTypes.bool.isRequired,\r\n   phoneNumber: PropTypes.string,\r\n   sentSms: PropTypes.bool.isRequired,\r\n   isLegit: PropTypes.bool.isRequired,\r\n   successMessage: PropTypes.bool.isRequired,\r\n   errorMessage: PropTypes.bool.isRequired,\r\n   handleSubmit: PropTypes.func.isRequired,\r\n   handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SetRecoveryInfoForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\r\n\r\nimport NearInfo from './NearInfo'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   && .disclaimer {\r\n      margin-left: 1rem;\r\n      margin-right: 1rem;\r\n      margin-top: 100px;\r\n\r\n      > .column {\r\n         padding-left: 0px;\r\n         padding-right: 0px;\r\n      }\r\n   }\r\n   .disclaimer-info {\r\n      font-weight: 600;\r\n      letter-spacing: 2px;\r\n   }\r\n\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-bottom: 24px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .creating-info {\r\n         padding-right: 1rem;\r\n      }\r\n   }\r\n`\r\n\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nconst SetRecoveryInfoContainer = ({ loader, children, location }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         <Grid.Row className='creating-info'>\r\n            <Grid.Column computer={8} tablet={8} mobile={16}>\r\n               <Header as='h1'>Protect your Account 🔒</Header>\r\n               <Header as='h2'>\r\n                  Connect account to phone number – save recovery key on our\r\n                  servers.\r\n               </Header>\r\n               <Header as='h3' className='color-blue'>\r\n                  You can skip this if you plan to backup account keys manually.\r\n                  We won't be able to help you with account recovery otherwise.\r\n               </Header>\r\n            </Grid.Column>\r\n            <Grid.Column computer={8} tablet={8} mobile={16}>\r\n               <NearInfo />\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n\r\n      <Grid>\r\n         <Grid.Row className='disclaimer border-top-bold'>\r\n            <Grid.Column computer={16} tablet={16} mobile={16}>\r\n               <span className='disclaimer-info'>DISCLAIMER: </span>\r\n               This is a developers&apos; preview Wallet. It should be used for\r\n               NEAR Protocol DevNet only. Learn more at\r\n               <a href='http://nearprotocol.com'>nearprotocol.com</a>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n   </CustomContainer>\r\n)\r\n\r\nSetRecoveryInfoContainer.propTypes = {\r\n   loader: PropTypes.bool.isRequired,\r\n   children: PropTypes.element.isRequired,\r\n   location: PropTypes.object.isRequired\r\n}\r\n\r\nexport default SetRecoveryInfoContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { isValidPhoneNumber } from 'react-phone-number-input'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport SetRecoveryInfoSection from './SetRecoveryInfoSection'\r\nimport SetRecoveryInfoForm from './SetRecoveryInfoForm'\r\nimport SetRecoveryInfoContainer from './SetRecoveryInfoContainer'\r\nimport { requestCode, validateCode } from '../../actions/account';\r\n\r\nclass SetRecoveryInfo extends Component {\r\n   state = {\r\n      loader: false,\r\n      phoneNumber: '',\r\n      isLegit: false,\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         isLegit: this.isLegitField(name, value)\r\n      }))\r\n   }\r\n\r\n   isLegitField(name, value) {\r\n      // TODO: Use some validation framework?\r\n      let validators = {\r\n         phoneNumber: isValidPhoneNumber,\r\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\r\n      }\r\n      return validators[name](value);\r\n   }\r\n\r\n   handleSubmit = e => {\r\n      e.preventDefault()\r\n\r\n      if (!this.state.isLegit) {\r\n         return false\r\n      }\r\n\r\n      const { dispatch } = this.props;\r\n      if (!this.props.sentSms) {\r\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\r\n      } else {\r\n         dispatch(validateCode(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\r\n            .then(() => {\r\n               let nextUrl = `/login/${(this.props.url && this.props.url.next_url) || '/'}`;\r\n               setTimeout(() => {\r\n                  this.props.history.push(nextUrl)\r\n               }, 1500)\r\n            })\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { loader } = this.state\r\n      const combinedState = {\r\n         ...this.props,\r\n         ...this.state,\r\n         isLegit: this.state.isLegit && !this.props.formLoader\r\n      }\r\n      return (\r\n         <SetRecoveryInfoContainer loader={loader} location={this.props.location}>\r\n            <SetRecoveryInfoSection {...combinedState}>\r\n               <SetRecoveryInfoForm\r\n                  {...combinedState}\r\n                  handleSubmit={this.handleSubmit}\r\n                  handleChange={this.handleChange}\r\n               />\r\n            </SetRecoveryInfoSection>\r\n         </SetRecoveryInfoContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = ({ account }, { match }) => {\r\n   return {\r\n      ...account,\r\n      accountId: match.params.accountId\r\n   }\r\n}\r\n\r\nexport const SetRecoveryInfoWithRouter = connect(mapStateToProps)(SetRecoveryInfo)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n   Container,\r\n   Loader,\r\n   Grid,\r\n   Dimmer,\r\n   Image,\r\n   List,\r\n   Segment\r\n} from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\nimport DenyImage from '../../images/icon-deny.svg'\r\nimport AppDefaultImage from '../../images/icon-app-default.svg'\r\nimport AuthorizeImage from '../../images/icon-authorize.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   && .title {\r\n      padding-top: 40px;\r\n   }\r\n\r\n   && .contract {\r\n      padding-bottom: 40px;\r\n   }\r\n\r\n   &&& .authorize {\r\n      margin-top: 40px;\r\n\r\n      .bg {\r\n         width: 64px;\r\n         height: 64px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n\r\n         > img {\r\n            width: 40px;\r\n            height: 40px;\r\n            margin-top: 8px;\r\n         }\r\n      }\r\n      .md {\r\n         > img {\r\n            margin-top: 8px;\r\n            padding: 0 24px;\r\n         }\r\n      }\r\n   }\r\n\r\n   && .cont {\r\n      background: #f8f8f8;\r\n      padding: 16px 0px;\r\n\r\n      > div {\r\n         padding: 20px 0 20px 50px;\r\n      }\r\n      img {\r\n         height: 24px;\r\n         margin-right: 6px;\r\n      }\r\n      div.item {\r\n         padding-top: 24px;\r\n\r\n         .content {\r\n            line-height: 24px;\r\n         }\r\n      }\r\n   }\r\n\r\n   .list-item {\r\n      background: url(${CheckBlueImage}) no-repeat left 24px;\r\n      background-size: 24px 24px;\r\n\r\n      > .content {\r\n         padding-left: 32px;\r\n      }\r\n   }\r\n\r\n   .list-item-deny {\r\n      background: url(${DenyImage}) no-repeat left 24px;\r\n      background-size: 24px 24px;\r\n\r\n      > .content {\r\n         padding-left: 32px;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n      && .cont {\r\n         > div {\r\n            padding: 20px 0 20px 20px;\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && .title {\r\n         padding-top: 0px;\r\n\r\n         h2 {\r\n            font-size: 18px !important;\r\n            line-height: 24px !important;\r\n         }\r\n      }\r\n\r\n      && .contract {\r\n         padding-top: 0px;\r\n         padding-bottom: 20px;\r\n      }\r\n\r\n      && .cont {\r\n         > div {\r\n            border: 0px;\r\n            padding: 10px 0 10px 0;\r\n\r\n            h3 {\r\n               font-size: 14px !important;\r\n            }\r\n         }\r\n\r\n         div.item {\r\n            padding-top: 24px;\r\n\r\n            .content {\r\n               font-size: 12px;\r\n               line-height: 14px;\r\n            }\r\n         }\r\n      }\r\n\r\n      &&& .authorize {\r\n         margin-top: 20px;\r\n      }\r\n   }\r\n`\r\n\r\nconst LoginContainer = ({ loader, children, appTitle }) => (\r\n   <CustomContainer>\r\n      <Dimmer.Dimmable as={Segment} basic>\r\n         <Grid>\r\n            <Dimmer inverted active={loader}>\r\n               <Loader />\r\n            </Dimmer>\r\n\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  <List horizontal className='authorize'>\r\n                     <List.Item className='bg'>\r\n                        <Image src={AccountGreyImage} />\r\n                     </List.Item>\r\n                     <List.Item className='md'>\r\n                        <Image src={AuthorizeImage} />\r\n                     </List.Item>\r\n                     <List.Item className='bg'>\r\n                        <Image src={AppDefaultImage} />\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row className='title'>\r\n               <Grid.Column\r\n                  as='h2'\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  <span className='font-bold'>{appTitle} </span> is requesting\r\n                  to use your NEAR account.\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row className='contract'>\r\n               <Grid.Column\r\n                  textAlign='center'\r\n                  computer={16}\r\n                  tablet={16}\r\n                  mobile={16}\r\n               >\r\n                  Contract: @contractname.near\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n               <Grid.Column\r\n                  largeScreen={2}\r\n                  computer={1}\r\n                  mobile={16}\r\n                  only='large screen computer mobile'\r\n               />\r\n               <Grid.Column\r\n                  largeScreen={6}\r\n                  computer={7}\r\n                  tablet={8}\r\n                  mobile={8}\r\n                  className='cont'\r\n               >\r\n                  <List className='border-right-light'>\r\n                     <List.Item as='h3'>This allows:</List.Item>\r\n                     <List.Item className='list-item'>\r\n                        <List.Content className='color-black'>\r\n                           View your Account Name\r\n                        </List.Content>\r\n                     </List.Item>\r\n                     <List.Item className='list-item'>\r\n                        <List.Content className='color-black'>\r\n                           Write Chat messages with your name\r\n                        </List.Content>\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  largeScreen={6}\r\n                  computer={7}\r\n                  tablet={8}\r\n                  mobile={8}\r\n                  className='cont'\r\n               >\r\n                  <List>\r\n                     <List.Item as='h3'>Does not allow:</List.Item>\r\n                     <List.Item className='list-item-deny'>\r\n                        <List.Content className='color-black'>\r\n                           View your private account details\r\n                        </List.Content>\r\n                     </List.Item>\r\n                     <List.Item className='list-item-deny'>\r\n                        <List.Content className='color-black'>\r\n                           Buy, Sell, or Transfer on your behalf\r\n                        </List.Content>\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  largeScreen={2}\r\n                  computer={1}\r\n                  mobile={16}\r\n                  only='large screen computer mobile'\r\n               />\r\n            </Grid.Row>\r\n         </Grid>\r\n\r\n         {children}\r\n      </Dimmer.Dimmable>\r\n   </CustomContainer>\r\n)\r\n\r\nLoginContainer.propTypes = {\r\n   loader: PropTypes.bool,\r\n   children: PropTypes.element,\r\n   appTitle: PropTypes.string\r\n}\r\n\r\nexport default LoginContainer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, Segment, List, Form, Button } from 'semantic-ui-react'\r\n\r\nimport AddBlueImage from '../../images/icon-add-blue.svg'\r\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\r\nimport ArrowUpImage from '../../images/icon-arrow-up.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   && button {\r\n      width: 190px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #0072ce;\r\n\r\n      background: #0072ce;\r\n      margin: 0 0 0 0;\r\n\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n\r\n      :hover {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n      :disabled {\r\n         border: 4px solid #e6e6e6;\r\n         background: #e6e6e6;\r\n      }\r\n      :active,\r\n      :focus {\r\n         background: #fff;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   && .deny {\r\n      width: 190px;\r\n      height: 60px;\r\n      border-radius: 30px;\r\n      border: 4px solid #e6e6e6;\r\n\r\n      background: transparent;\r\n\r\n      font-size: 18px;\r\n      color: #999;\r\n      letter-spacing: 2px;\r\n\r\n      margin: 0 0 0 0;\r\n\r\n      :hover {\r\n         border: 4px solid #0072ce;\r\n         color: #0072ce;\r\n      }\r\n      :active,\r\n      :focus {\r\n         border: 4px solid #0072ce;\r\n         color: #0072ce;\r\n      }\r\n   }\r\n\r\n   .segment {\r\n      width: 100%;\r\n      padding: 0px;\r\n      margin: 0px;\r\n   }\r\n\r\n   .dropdown-list {\r\n      width: 100%;\r\n      position: relative;\r\n      cursor: pointer;\r\n\r\n      .element {\r\n         width: 100%;\r\n         min-height: 64px;\r\n         border: solid 4px #24272a;\r\n         margin: 0px;\r\n         padding: 0px;\r\n\r\n         background: #fff;\r\n\r\n         :hover {\r\n            background: #f8f8f8;\r\n         }\r\n         .img {\r\n            float: left;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-color: #d8d8d8;\r\n            background-image: url(${AccountGreyImage});\r\n            background-position: center center;\r\n            background-repeat: no-repeat;\r\n            background-size: 36px 36px;\r\n         }\r\n         .name {\r\n            margin-top: 12px;\r\n            margin-left: 18px;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n            flex: 1;\r\n         }\r\n         .arrow {\r\n            float: right;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-image: url(${ArrowDownImage});\r\n            background-repeat: no-repeat;\r\n            background-position: center center;\r\n            background-size: 24px auto;\r\n\r\n            &.up {\r\n               background-image: url(${ArrowUpImage});\r\n            }\r\n         }\r\n      }\r\n      .trigger {\r\n         display: flex;\r\n      }\r\n      .dropdown {\r\n         .element {\r\n            margin-top: -4px;\r\n            display: flex;\r\n         }\r\n      }\r\n      .create-account {\r\n         width: 100%;\r\n         min-height: 64px;\r\n         border: solid 4px #24272a;\r\n         margin: 0px;\r\n         padding: 0px;\r\n         cursor: pointer;\r\n\r\n         background: #24272a;\r\n\r\n         :hover {\r\n         }\r\n         .img {\r\n            float: left;\r\n            width: 56px;\r\n            height: 56px;\r\n            background-image: url(${AddBlueImage});\r\n            background-position: center center;\r\n            background-repeat: no-repeat;\r\n            background-size: 24px 24px;\r\n         }\r\n         .name {\r\n            float: left;\r\n            margin-top: 12px;\r\n            margin-left: 18px;\r\n         }\r\n         .arrow {\r\n         }\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      && {\r\n         button,\r\n         .deny {\r\n            width: 140px;\r\n            border-radius: 35px;\r\n         }\r\n\r\n         .buttons,\r\n         .dropdown {\r\n            .column {\r\n               padding: 0px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst LoginForm = ({\r\n   dropdown,\r\n   account,\r\n   handleOnClick,\r\n   handleDeny,\r\n   handleAllow,\r\n   handleSelectAccount,\r\n   redirectCreateAccount\r\n}) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='dropdown'>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\r\n            <Segment className='dropdown-list' onClick={handleOnClick} basic>\r\n               <List verticalAlign='middle' className={`element trigger`}>\r\n                  <List.Item className='img' />\r\n                  <List.Item as='h3' className='name'>\r\n                     @{account.accountId}\r\n                  </List.Item>\r\n                  <List.Item className={`arrow ${dropdown ? 'up' : ''}`} />\r\n               </List>\r\n\r\n               <Segment basic className={`dropdown ${dropdown ? '' : 'hide'}`}>\r\n                  {Object.keys(account.accounts)\r\n                     .filter(a => a !== account.accountId)\r\n                     .map((account, i) => (\r\n                        <List\r\n                           key={`lf-${i}`}\r\n                           onClick={() => handleSelectAccount(account)}\r\n                           className='element'\r\n                        >\r\n                           <List.Item className='img' />\r\n                           <List.Item as='h3' className='name'>\r\n                              @{account}\r\n                           </List.Item>\r\n                        </List>\r\n                     ))}\r\n                  <List\r\n                     onClick={redirectCreateAccount}\r\n                     className='create-account'\r\n                  >\r\n                     <List.Item className='img' />\r\n                     <List.Item className='h3 name color-seafoam-blue'>\r\n                        Create New Account\r\n                     </List.Item>\r\n                  </List>\r\n               </Segment>\r\n            </Segment>\r\n         </Grid.Column>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n      </Grid.Row>\r\n      <Grid.Row className={`buttons ${dropdown ? 'hide' : ''}`}>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\r\n            <Form action={account.url.success_url}>\r\n               <input\r\n                  type='hidden'\r\n                  name='authToken'\r\n                  value={account.authToken}\r\n               />\r\n               <input\r\n                  type='hidden'\r\n                  name='accountId'\r\n                  value={account.accountId}\r\n               />\r\n               <Button className='deny' onClick={handleDeny}>\r\n                  DENY\r\n               </Button>\r\n               <Button floated='right' onClick={handleAllow}>\r\n                  ALLOW\r\n               </Button>\r\n            </Form>\r\n         </Grid.Column>\r\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nLoginForm.propTypes = {\r\n   dropdown: PropTypes.bool.isRequired,\r\n   handleOnClick: PropTypes.func.isRequired,\r\n   handleDeny: PropTypes.func.isRequired,\r\n   handleSelectAccount: PropTypes.func.isRequired,\r\n   redirectCreateAccount: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport default connect(mapStateToProps)(LoginForm)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport LoginContainer from './LoginContainer'\r\nimport LoginForm from './LoginForm'\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nclass Login extends Component {\r\n   state = {\r\n      dropdown: false\r\n   }\r\n\r\n   componentDidMount = () => {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   handleOnClick = () => {\r\n      this.setState({\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handleDeny = e => {\r\n      e.preventDefault();\r\n      if (this.props.account.url.failure_url) {\r\n         window.location.href = this.props.account.url.failure_url\r\n      }\r\n   }\r\n\r\n   handleAllow = e => {\r\n      e.preventDefault()\r\n      this.wallet.addAccessKey(this.props.account.accountId, this.props.account.url.contract_id, this.props.account.url.public_key, this.props.account.url.success_url);\r\n   }\r\n\r\n   handleSelectAccount = accountId => {\r\n      this.wallet.selectAccount(accountId)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n   }\r\n\r\n   redirectCreateAccount = () => {\r\n      this.wallet.redirectToCreateAccount({}, this.props.history)\r\n   }\r\n\r\n   render() {\r\n      const { account } = this.props\r\n\r\n      return (\r\n         <LoginContainer\r\n            loader={account.loader}\r\n            appTitle={account.url && account.url.app_title}\r\n         >\r\n            {account.accountId && (\r\n               <LoginForm\r\n                  {...this.state}\r\n                  handleOnClick={this.handleOnClick}\r\n                  handleDeny={this.handleDeny}\r\n                  handleAllow={this.handleAllow}\r\n                  handleSelectAccount={this.handleSelectAccount}\r\n                  redirectCreateAccount={this.redirectCreateAccount}\r\n               />\r\n            )}\r\n         </LoginContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const LoginWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Login))\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Image, List } from 'semantic-ui-react'\r\n\r\nimport ArrowLeftImage from '../../images/icon-arrow-left.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationTabList = styled(List)`\r\n   .ui.button {\r\n      background: #f8f8f8;\r\n      color: #0072ce;\r\n      height: 36px;\r\n      font-weight: 500;\r\n      padding-left: 1em;\r\n      padding-right: 1em;\r\n\r\n      &.active {\r\n         background: #999999;\r\n         color: #ffffff;\r\n      }\r\n\r\n      :hover {\r\n         background: #999999;\r\n         color: #ffffff;\r\n      }\r\n   }\r\n\r\n   .ui.image {\r\n      width: 0.5em;\r\n      padding-bottom: 0px;\r\n   }\r\n`\r\n\r\nconst LEFT_PAGE = 'LEFT'\r\nconst RIGHT_PAGE = 'RIGHT'\r\n\r\nconst range = (from, to, step = 1) => {\r\n   let i = from\r\n   const range = []\r\n\r\n   while (i <= to) {\r\n      range.push(i)\r\n      i += step\r\n   }\r\n\r\n   return range\r\n}\r\n\r\nexport class PaginationTab extends Component {\r\n   static propTypes = {\r\n      totalRecords: PropTypes.number.isRequired,\r\n      pageLimit: PropTypes.number,\r\n      pageNeighbors: PropTypes.number,\r\n      onPageChanged: PropTypes.func,\r\n      initialPage: PropTypes.number.isRequired\r\n   }\r\n\r\n   static defaultProps = {\r\n      pageLimit: 10,\r\n      pageNeighbors: 1,\r\n      onPageChange: () => {},\r\n      initialPage: 0\r\n   }\r\n\r\n   state = {\r\n      currentPage: null\r\n   }\r\n\r\n   getTotalPages() {\r\n      return Math.ceil(this.props.totalRecords / this.props.pageLimit)\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ currentPage: this.props.initialPage + 1 })\r\n   }\r\n\r\n   gotoPage = page => {\r\n      const currentPage = this.props.onPageChanged(page) + 1\r\n      this.setState({ currentPage })\r\n   }\r\n\r\n   handleClick = (page, evt) => {\r\n      evt.preventDefault()\r\n      this.gotoPage(page)\r\n      evt.target.blur()\r\n   }\r\n\r\n   handleMoveLeft = evt => {\r\n      evt.preventDefault()\r\n      this.gotoPage(this.state.currentPage - this.props.pageNeighbors * 2 - 1)\r\n      evt.target.blur()\r\n   }\r\n\r\n   handleMoveRight = evt => {\r\n      evt.preventDefault()\r\n      this.gotoPage(this.state.currentPage + this.props.pageNeighbors * 2 + 1)\r\n      evt.target.blur()\r\n   }\r\n\r\n   fetchPageNumbers = () => {\r\n      const totalPages = this.getTotalPages()\r\n      const currentPage = this.state.currentPage\r\n      const pageNeighbors = this.props.pageNeighbors\r\n\r\n      const totalNumbers = pageNeighbors * 2 + 3\r\n      const totalBlocks = totalNumbers + 2\r\n\r\n      if (totalPages > totalBlocks) {\r\n         let pages = []\r\n\r\n         const leftBound = currentPage - pageNeighbors\r\n         const rightBound = currentPage + pageNeighbors\r\n         const beforeLastPage = totalPages - 1\r\n\r\n         const startPage = leftBound > 2 ? leftBound : 2\r\n         const endPage =\r\n            rightBound < beforeLastPage ? rightBound : beforeLastPage\r\n\r\n         pages = range(startPage, endPage)\r\n\r\n         const pagesCount = pages.length\r\n         const singleSpillOffset = totalNumbers - pagesCount - 1\r\n\r\n         const leftSpill = startPage > 2\r\n         const rightSpill = endPage < beforeLastPage\r\n\r\n         const leftSpillPage = LEFT_PAGE\r\n         const rightSpillPage = RIGHT_PAGE\r\n\r\n         if (leftSpill && !rightSpill) {\r\n            const extraPages = range(\r\n               startPage - singleSpillOffset,\r\n               startPage - 1\r\n            )\r\n            pages = [leftSpillPage, ...extraPages, ...pages]\r\n         } else if (!leftSpill && rightSpill) {\r\n            const extraPages = range(endPage + 1, endPage + singleSpillOffset)\r\n            pages = [...pages, ...extraPages, rightSpillPage]\r\n         } else if (leftSpill && rightSpill) {\r\n            pages = [leftSpillPage, ...pages, rightSpillPage]\r\n         }\r\n\r\n         return [1, ...pages, totalPages]\r\n      }\r\n\r\n      return range(1, totalPages)\r\n   }\r\n\r\n   render() {\r\n      if (!this.props.totalRecords) return null\r\n      if (this.totalPages === 1) return null\r\n\r\n      const pages = this.fetchPageNumbers()\r\n      return (\r\n         <PaginationTabList horizontal className='PaginationTab'>\r\n            {pages.map((page, index) => {\r\n               if (page === LEFT_PAGE)\r\n                  return (\r\n                     <List.Item key={index}>\r\n                        <Button circular onClick={this.handleMoveLeft}>\r\n                           <Image src={ArrowLeftImage} />\r\n                        </Button>\r\n                     </List.Item>\r\n                  )\r\n\r\n               if (page === RIGHT_PAGE)\r\n                  return (\r\n                     <List.Item key={index}>\r\n                        <Button circular onClick={this.handleMoveRight}>\r\n                           ...\r\n                        </Button>\r\n                     </List.Item>\r\n                  )\r\n\r\n               return (\r\n                  <List.Item key={index}>\r\n                     <Button\r\n                        circular\r\n                        active={this.state.currentPage === page}\r\n                        onClick={e => this.handleClick(page, e)}\r\n                     >\r\n                        {page}\r\n                     </Button>\r\n                  </List.Item>\r\n               )\r\n            })}\r\n         </PaginationTabList>\r\n      )\r\n   }\r\n}\r\n","import React from 'react'\r\n\r\nimport { Button, List } from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationPagingList = styled(List)`\r\n   && .paging-dropdown-tr {\r\n      width: 66px;\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n\r\n      border-radius: 18px;\r\n      background-position: 38px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 12px auto;\r\n      padding: 0 20px 0 0;\r\n\r\n      line-height: 32px;\r\n   }\r\n\r\n   && .paging-dropdown {\r\n      padding-top: 0px;\r\n      width: 66px;\r\n      min-height: 30px;\r\n\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 6px;\r\n\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 7px;\r\n      }\r\n\r\n      & > .item > .content {\r\n         font-size: 14px;\r\n         line-height: 18px;\r\n         font-weight: 600;\r\n         padding-left: 6px;\r\n      }\r\n   }\r\n\r\n   &&& .filter-by {\r\n      padding-left: 10px;\r\n      padding-right: 20px;\r\n   }\r\n`\r\n\r\nconst pagingTypes = [10, 20, 50, 100]\r\n\r\nconst PaginationFilter = ({\r\n   handleOnClickPaging,\r\n   pagingValue,\r\n   pagingDropdown,\r\n   handlePagingDropdownClick\r\n}) => (\r\n   <PaginationPagingList horizontal className='border-right-light'>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClickPaging}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='paging-dropdown-tr'\r\n            style={{ backgroundImage: ` url(${ArrowDown})` }}\r\n         >\r\n            {pagingValue}\r\n         </Button>\r\n\r\n         <List\r\n            selection\r\n            verticalAlign='middle'\r\n            className={`paging-dropdown ${pagingDropdown ? '' : 'hide'}`}\r\n         >\r\n            {pagingTypes.map((type, i) => (\r\n               <List.Item\r\n                  key={`page-${i}`}\r\n                  onClick={() => handlePagingDropdownClick(type)}\r\n               >\r\n                  <List.Content verticalAlign='middle'>{type}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n      <List.Item as='h6' className='filter-by'>\r\n         PER PAGE\r\n      </List.Item>\r\n   </PaginationPagingList>\r\n)\r\n\r\nexport default PaginationFilter\r\n","import React, { Fragment } from 'react'\r\n\r\nconst PaginationSummary = ({ pageNumber, pageLimit, totalRecords }) => (\r\n   <Fragment>\r\n      <span className='color-charcoal-grey'>\r\n         {pageNumber * pageLimit + 1}-{(pageNumber + 1) * pageLimit}{' '}\r\n      </span>\r\n      OF {totalRecords} TOTAL\r\n   </Fragment>\r\n)\r\n\r\nexport default PaginationSummary\r\n","import React from 'react'\r\n\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nimport MSearchImage from '../../images/icon-m-search.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst SearchForm = styled(Form)`\r\n   float: right;\r\n\r\n   &&&& .search input {\r\n      width: 360px;\r\n\r\n      height: 36px;\r\n      border: 2px solid #e6e6e6;\r\n      border-radius: 25px;\r\n      padding-left: 40px;\r\n\r\n      font-size: 14px;\r\n\r\n      background-color: #f8f8f8;\r\n      background-image: url(${MSearchImage});\r\n      background-position: 12px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 14px auto;\r\n   }\r\n`\r\n\r\nconst Search = ({ handleSubmit, handleChange, search }) => (\r\n   <SearchForm onSubmit={handleSubmit}>\r\n      <Form.Input\r\n         className='search'\r\n         name='search'\r\n         value={search}\r\n         onChange={handleChange}\r\n         placeholder='Search transactions and receipts...'\r\n      />\r\n   </SearchForm>\r\n)\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nimport { Button, List } from 'semantic-ui-react'\r\n\r\nimport ArrowDown from '../../images/icon-arrow-down.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationFilterList = styled(List)`\r\n   && .sortby-dropdown-tr {\r\n      width: 210px;\r\n      line-height: 32px;\r\n      border: 2px solid #e6e6e6;\r\n      background-color: #fff;\r\n      border-radius: 18px;\r\n      background-position: 180px center;\r\n      background-repeat: no-repeat;\r\n      background-size: 12px auto;\r\n      background-image: url(${ArrowDown});\r\n      text-align: left;\r\n      padding-top: 0px;\r\n      padding-bottom: 0px;\r\n      letter-spacing: 1.8px;\r\n   }\r\n\r\n   && .sortby-dropdown {\r\n      padding-top: 0px;\r\n      width: 210px;\r\n      min-height: 30px;\r\n      border: 2px solid #e6e6e6;\r\n      background: #fff;\r\n      border-radius: 18px;\r\n      position: absolute;\r\n      z-index: 200;\r\n      top: 2px;\r\n      box-shadow: 0 0 10px #ddd;\r\n\r\n      & > .item:first-child {\r\n         padding-top: 10px;\r\n      }\r\n\r\n      .item {\r\n         height: 36px !important;\r\n\r\n         img {\r\n            width: 18px !important;\r\n            margin: 0 10px !important;\r\n         }\r\n         .content {\r\n            margin: 2px 0 0 0 !important;\r\n         }\r\n      }\r\n   }\r\n\r\n   &&& .sortby {\r\n      padding-left: 10px;\r\n      padding-right: 0px;\r\n   }\r\n`\r\n\r\nconst PaginationFilter = ({\r\n   filterTypesByType,\r\n   handleOnClick,\r\n   handleDropdownClick,\r\n   dropdown\r\n}) => (\r\n   <PaginationFilterList horizontal>\r\n      <List.Item as='h6' className='sortby'>\r\n         SORT BY\r\n      </List.Item>\r\n      <List.Item>\r\n         <Button\r\n            onClick={handleOnClick}\r\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\r\n            className='sortby-dropdown-tr'\r\n         >\r\n            RECENTLY ADDED\r\n         </Button>\r\n\r\n         <List\r\n            selection\r\n            verticalAlign='middle'\r\n            className={`sortby-dropdown ${dropdown ? '' : 'hide'}`}\r\n         >\r\n            {filterTypesByType.map((type, i) => (\r\n               <List.Item\r\n                  key={`sortby-${i}`}\r\n                  onClick={() => handleDropdownClick(type.img)}\r\n               >\r\n                  <List.Content as='h6'>{type.name}</List.Content>\r\n               </List.Item>\r\n            ))}\r\n         </List>\r\n      </List.Item>\r\n   </PaginationFilterList>\r\n)\r\n\r\nexport default PaginationFilter\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Grid, List, Image, Button } from 'semantic-ui-react'\r\n\r\nimport TransactionFilter from '../../images/icon-m-filter.svg'\r\nimport CloseImage from '../../images/icon-close.svg'\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport MTransactionImage from '../../images/icon-m-transaction.svg'\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\r\n\r\nimport { PaginationTab } from './PaginationTab'\r\nimport PaginationPaging from './PaginationPaging'\r\nimport PaginationSummary from './PaginationSummary'\r\nimport Search from '../common/Search'\r\n\r\nimport PaginationSortBy from './PaginationSortBy'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst PaginationBlockGrid = styled(Grid)`\r\n   & > .row:first-child {\r\n      min-height: 70px;\r\n   }\r\n\r\n   &&& .pagination-block-paging {\r\n      padding: 0px;\r\n   }\r\n\r\n   &&& .pagination-block-top {\r\n      padding-left: 0px;\r\n\r\n      &-paging-summary {\r\n         padding-left: 20px;\r\n      }\r\n\r\n      &-search {\r\n         padding: 0px;\r\n      }\r\n\r\n      &-paging {\r\n         padding-left: 0px;\r\n      }\r\n   }\r\n\r\n   &&& .show-sub {\r\n      padding: 0 0 0 0;\r\n      margin-top: -16px;\r\n   }\r\n\r\n   &&& .sub-list {\r\n      background: #fff;\r\n      width: 100%;\r\n      min-height: 448px;\r\n      padding: 0 0;\r\n\r\n      > .item {\r\n         padding: 18px 20px;\r\n      }\r\n\r\n      .img {\r\n         width: 20px;\r\n         position: absolute;\r\n         top: 20px;\r\n         right: 20px;\r\n         padding: 0px;\r\n\r\n         img {\r\n            cursor: pointer;\r\n         }\r\n      }\r\n\r\n      .text {\r\n         margin: 0 10% 0 0;\r\n         color: #24272a;\r\n         float: left;\r\n\r\n         .header {\r\n            font-family: 'benton-sans', sans-serif;\r\n         }\r\n         .content {\r\n            color: #999999;\r\n            padding-top: 12px;\r\n            line-height: 20px;\r\n         }\r\n      }\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 0 0 0;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .remove-connection {\r\n         > button {\r\n            width: 100%;\r\n            background-color: #ff585d;\r\n            border: 2px solid #ff585d;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               background: #fff;\r\n               color: #ff585d;\r\n            }\r\n         }\r\n      }\r\n      .recent-transactions {\r\n         background-color: #f8f8f8;\r\n         margin: 0 0 0 0;\r\n      }\r\n      .recent-transactions-title {\r\n         padding: 0 0 0 24px;\r\n         background: url(${MTransactionImage}) no-repeat left 2px;\r\n         background-size: 12px auto;\r\n      }\r\n      .recent-transactions-row {\r\n         margin: 0 0 0 24px;\r\n         padding: 12px 0;\r\n         border-bottom: 2px solid #e6e6e6;\r\n      }\r\n      .recent-transactions-row:last-child {\r\n         border-bottom: 0px solid #e6e6e6;\r\n      }\r\n\r\n      .authorized-transactions {\r\n         background-color: #fff;\r\n         margin: 0 0 0 0;\r\n         padding-top: 0px;\r\n      }\r\n      .authorized-transactions-title {\r\n         padding: 12px 0 0 24px;\r\n         background: url(${MTransactionImage}) no-repeat left 14px;\r\n         background-size: 12px auto;\r\n      }\r\n      .authorized-transactions-row {\r\n         margin: 0 0 0 24px;\r\n         padding: 12px 0 0 32px;\r\n         background: url(${CheckBlueImage}) no-repeat left 14px;\r\n         line-height: 32px;\r\n      }\r\n      .authorized-transactions-row:last-child {\r\n         border-bottom: 0px solid #e6e6e6;\r\n      }\r\n\r\n      .send-money {\r\n         > .button {\r\n            width: 100%;\r\n            background-color: #5ace84;\r\n            border: 2px solid #5ace84;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               background-color: #fff;\r\n               color: #5ace84;\r\n            }\r\n         }\r\n      }\r\n   }\r\n   @media screen and (max-width: 991px) {\r\n      &&& .sub-list {\r\n         .img {\r\n            top: 6px;\r\n            right: 6px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nclass PaginationBlock extends Component {\r\n   static defaultProps = {\r\n      onPageChanged: () => {}\r\n   }\r\n\r\n   state = {\r\n      search: '',\r\n      dropdown: false,\r\n      dropdownType: this.props.type\r\n         ? this.props.filterTypes[this.props.type].img\r\n         : TransactionFilter,\r\n      pagingDropdown: false,\r\n      pagingValue: 10,\r\n\r\n      buttonRadio: false\r\n   }\r\n\r\n   handleOnClick = () => {\r\n      this.setState({\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handleOnClickPaging = () => {\r\n      this.setState({\r\n         pagingDropdown: !this.state.pagingDropdown\r\n      })\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({ [name]: value }))\r\n   }\r\n\r\n   handleSubmit = () => {\r\n      console.log('not ready yet')\r\n   }\r\n\r\n   handleDropdownClick = dropdownType => {\r\n      this.setState({\r\n         dropdownType,\r\n         dropdown: !this.state.dropdown\r\n      })\r\n   }\r\n\r\n   handlePagingDropdownClick = pagingValue => {\r\n      this.setState({\r\n         pagingValue,\r\n         pagingDropdown: !this.state.pagingDropdown\r\n      })\r\n\r\n      this.props.onPageChanged(1, pagingValue)\r\n   }\r\n\r\n   handleTabChange(pageNumber) {\r\n      // this.setState({\r\n      //    pageNumber: pageNumber,\r\n      //    loader: true,\r\n      // })\r\n      // this.updateBlock(pageNumber)\r\n      // return pageNumber\r\n   }\r\n\r\n   buttonRadioClick = () => {\r\n      this.setState(state => ({\r\n         buttonRadio: !state.buttonRadio\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         filterTypes,\r\n         type,\r\n         pageNumber = 0,\r\n         showSub = false,\r\n         subPage\r\n      } = this.props\r\n\r\n      const {\r\n         dropdownType,\r\n         dropdown,\r\n         search,\r\n         pagingValue,\r\n         pagingDropdown\r\n      } = this.state\r\n\r\n      const {\r\n         totalRecords = 1100,\r\n         pageLimit = 10,\r\n         initialPage = 0,\r\n         onPageChanged = () => {},\r\n         pageNeighbors = 1\r\n      } = this.props\r\n\r\n      const filterTypesByType = type ? [filterTypes[type]] : filterTypes\r\n\r\n      return (\r\n         <PaginationBlockGrid\r\n            className='border-top-bold border-bottom-bold'\r\n            stackable\r\n            columns={2}\r\n         >\r\n            <Grid.Row className='border-bottom-light'>\r\n               <Grid.Column\r\n                  width={10}\r\n                  verticalAlign='middle'\r\n                  className='pagination-block-top'\r\n               >\r\n                  <PaginationSortBy\r\n                     filterTypesByType={filterTypesByType}\r\n                     handleOnClick={this.handleOnClick}\r\n                     dropdownType={dropdownType}\r\n                     handleDropdownClick={this.handleDropdownClick}\r\n                     dropdown={dropdown}\r\n                  />\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  width={6}\r\n                  textAlign='right'\r\n                  verticalAlign='middle'\r\n                  className='pagination-block-top-search'\r\n               >\r\n                  <Search\r\n                     handleSubmit={this.handleSubmit}\r\n                     handleChange={this.handleChange}\r\n                     search={search}\r\n                  />\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n               <Grid.Column computer={showSub ? 10 : 16}>\r\n                  <Grid>{this.props.children}</Grid>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  computer={6}\r\n                  className={`show-sub ${showSub ? `` : `hide`}`}\r\n               >\r\n                  <List className='box sub-list'>\r\n                     <List.Item className='img'>\r\n                        <Image\r\n                           onClick={() => this.props.toggleShowSub()}\r\n                           src={CloseImage}\r\n                        />\r\n                     </List.Item>\r\n\r\n                     {subPage === 'authorized-apps' ? (\r\n                        <Fragment>\r\n                           <List.Item>\r\n                              <List horizontal>\r\n                                 <List.Item>\r\n                                    <div\r\n                                       className='main-image'\r\n                                       style={{ backgroundColor: '#fff' }}\r\n                                    >\r\n                                       <Image src={NearkatImage} align='left' />\r\n                                    </div>\r\n                                 </List.Item>\r\n                                 <List.Item>\r\n                                    <List.Header as='h2'>\r\n                                       NEAR Place\r\n                                    </List.Header>\r\n                                    <List.Item as='h5' className='color-blue'>\r\n                                       www.nearplace.com\r\n                                    </List.Item>\r\n                                 </List.Item>\r\n                              </List>\r\n                           </List.Item>\r\n                           <List.Item className='remove-connection border-top'>\r\n                              <Button>DEAUTHORIZE</Button>\r\n                           </List.Item>\r\n                           <List.Item className='authorized-transactions'>\r\n                              <List.Item\r\n                                 as='h6'\r\n                                 className='authorized-transactions-title border-top'\r\n                              >\r\n                                 AUTHORIZED TO\r\n                              </List.Item>\r\n                              <List.Item className='authorized-transactions-row color-black'>\r\n                                 View your Account Name\r\n                              </List.Item>\r\n                              <List.Item className='authorized-transactions-row color-black'>\r\n                                 Do something else on your behalf\r\n                              </List.Item>\r\n                           </List.Item>\r\n                           <List.Item className='recent-transactions'>\r\n                              <List.Item\r\n                                 as='h6'\r\n                                 className='recent-transactions-title border-top'\r\n                              >\r\n                                 RECENT TRANSACTIONS\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Another thing here</List.Header>\r\n                                 <List.Item>3h ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>\r\n                                    Another Thing Happened\r\n                                 </List.Header>\r\n                                 <List.Item>3d ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>\r\n                                    In-app purchase: 20 Ⓝ\r\n                                 </List.Header>\r\n                                 <List.Item>1w ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Staked: 10 Ⓝ</List.Header>\r\n                                 <List.Item>2w ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Authorized</List.Header>\r\n                                 <List.Item>2w ago</List.Item>\r\n                              </List.Item>\r\n                           </List.Item>\r\n                        </Fragment>\r\n                     ) : (\r\n                        <Fragment>\r\n                           <List.Item>\r\n                              <List horizontal>\r\n                                 <List.Item>\r\n                                    <div className='main-image'>\r\n                                       <Image\r\n                                          src={AccountGreyImage}\r\n                                          align='left'\r\n                                       />\r\n                                    </div>\r\n                                 </List.Item>\r\n                                 <List.Item>\r\n                                    <List.Header as='h2'>\r\n                                       Alex Skidanov\r\n                                    </List.Header>\r\n                                    <List.Item as='h5'>@alex.near</List.Item>\r\n                                 </List.Item>\r\n                              </List>\r\n                           </List.Item>\r\n                           <List.Item className='remove-connection border-top'>\r\n                              <Button>REMOVE CONNECTION</Button>\r\n                           </List.Item>\r\n                           <List.Item className='recent-transactions'>\r\n                              <List.Item\r\n                                 as='h6'\r\n                                 className='recent-transactions-title border-top'\r\n                              >\r\n                                 RECENT TRANSACTIONS\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>You sent 20 Ⓝ</List.Header>\r\n                                 <List.Item>3h ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>Alex sent you 1020 Ⓝ</List.Header>\r\n                                 <List.Item>3d ago</List.Item>\r\n                              </List.Item>\r\n                              <List.Item className='recent-transactions-row border-top'>\r\n                                 <List.Header>\r\n                                    You and Alex played NEAR Chess\r\n                                 </List.Header>\r\n                                 <List.Item>1w ago</List.Item>\r\n                              </List.Item>\r\n                           </List.Item>\r\n                           <List.Item className='send-money border-top'>\r\n                              <Button as={Link} to='/send-money/marcin'>\r\n                                 SEND MONEY\r\n                              </Button>\r\n                           </List.Item>\r\n                        </Fragment>\r\n                     )}\r\n                  </List>\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row className='border-top-light'>\r\n               <Grid.Column\r\n                  width={8}\r\n                  verticalAlign='middle'\r\n                  className='pagination-block-top-paging'\r\n               >\r\n                  <List horizontal verticalAlign='middle'>\r\n                     <List.Item width={6}>\r\n                        <PaginationPaging\r\n                           handleOnClickPaging={this.handleOnClickPaging}\r\n                           pagingValue={pagingValue}\r\n                           pagingDropdown={pagingDropdown}\r\n                           handlePagingDropdownClick={\r\n                              this.handlePagingDropdownClick\r\n                           }\r\n                        />\r\n                     </List.Item>\r\n                     <List.Item\r\n                        width={6}\r\n                        as='h6'\r\n                        className='pagination-block-top-paging-summary'\r\n                     >\r\n                        <PaginationSummary\r\n                           pageNumber={pageNumber}\r\n                           pageLimit={pageLimit}\r\n                           totalRecords={totalRecords}\r\n                        />\r\n                     </List.Item>\r\n                  </List>\r\n               </Grid.Column>\r\n               <Grid.Column\r\n                  width={8}\r\n                  className='pagination-block-paging'\r\n                  textAlign='right'\r\n               >\r\n                  <PaginationTab\r\n                     totalRecords={totalRecords}\r\n                     pageLimit={pageLimit}\r\n                     initialPage={initialPage}\r\n                     onPageChanged={onPageChanged}\r\n                     pageNeighbors={pageNeighbors}\r\n                  />\r\n               </Grid.Column>\r\n            </Grid.Row>\r\n         </PaginationBlockGrid>\r\n      )\r\n   }\r\n}\r\n\r\nexport default PaginationBlock\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n         text-align: right;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n            text-align: center;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ContactsContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column computer='10' tablet='10' mobile='16' as='h1'>\r\n               Contacts\r\n            </Grid.Column>\r\n            <Grid.Column\r\n               computer='6'\r\n               tablet='6'\r\n               mobile='16'\r\n               as='h1'\r\n               className='add'\r\n            >\r\n               203<span className='color-brown-grey'> total</span>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default ContactsContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport PaginationBlock from '../pagination/PaginationBlock'\r\nimport ListItem from '../dashboard/ListItem'\r\n\r\nimport ContactsContainer from './ContactsContainer'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nclass Contacts extends Component {\r\n   state = {\r\n      loader: false,\r\n      showSub: false,\r\n      showSubOpen: 0,\r\n      activity: [],\r\n      filterTypes: [\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' }\r\n      ]\r\n   }\r\n\r\n   toggleShowSub = i => {\r\n      i = i == null ? this.state.showSubOpen : i\r\n\r\n      this.setState(state => ({\r\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\r\n         showSubOpen: i\r\n      }))\r\n   }\r\n\r\n   componentDidMount() {\r\n      // this.wallet = new Wallet()\r\n      // this.props.handleRefreshUrl(this.props.location)\r\n      // this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\r\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\r\n               [\r\n                  AccountGreyImage,\r\n                  'Illia Polosukhin',\r\n                  'Connected 2 days ago',\r\n                  ''\r\n               ],\r\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', '']\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\r\n\r\n      return (\r\n         <ContactsContainer>\r\n            <PaginationBlock\r\n               filterTypes={filterTypes}\r\n               showSub={showSub}\r\n               toggleShowSub={this.toggleShowSub}\r\n            >\r\n               {activity.map((row, i) => (\r\n                  <ListItem\r\n                     key={`c-${i}`}\r\n                     row={row}\r\n                     i={i}\r\n                     wide={true}\r\n                     showSub={showSub}\r\n                     toggleShowSub={this.toggleShowSub}\r\n                     showSubOpen={showSubOpen}\r\n                  />\r\n               ))}\r\n            </PaginationBlock>\r\n         </ContactsContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nexport const ContactsWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Contacts))\r\n","import React from 'react'\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n         text-align: right;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n            text-align: center;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst AuthorizedAppsContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column computer='10' tablet='10' mobile='16' as='h1'>\r\n               Authorized Apps\r\n            </Grid.Column>\r\n            <Grid.Column\r\n               computer='6'\r\n               tablet='6'\r\n               mobile='16'\r\n               as='h1'\r\n               className='add'\r\n            >\r\n               23<span className='color-brown-grey'> total</span>\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default AuthorizedAppsContainer\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport PaginationBlock from '../pagination/PaginationBlock'\r\nimport ListItem from '../dashboard/ListItem'\r\n\r\nimport AuthorizedAppsContainer from './AuthorizedAppsContainer'\r\n\r\nimport NearkatImage from '../../images/footer-nearkat.svg'\r\n\r\nclass AuthorizedApps extends Component {\r\n   state = {\r\n      loader: false,\r\n      showSub: false,\r\n      showSubOpen: 0,\r\n      activity: [],\r\n      filterTypes: [\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' },\r\n         { img: '', name: 'ALL' }\r\n      ]\r\n   }\r\n\r\n   toggleShowSub = i => {\r\n      i = i == null ? this.state.showSubOpen : i\r\n\r\n      this.setState(state => ({\r\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\r\n         showSubOpen: i\r\n      }))\r\n   }\r\n\r\n   componentDidMount() {\r\n      // this.wallet = new Wallet()\r\n      // this.props.handleRefreshUrl(this.props.location)\r\n      // this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            activity: [\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\r\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\r\n               [NearkatImage, 'Knights App', '2 days ago', ''],\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\r\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\r\n               [NearkatImage, 'Knights App', '2 days ago', ''],\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\r\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\r\n               [NearkatImage, 'Knights App', '2 days ago', ''],\r\n               [NearkatImage, 'NEAR Place', '3 hrs ago', '']\r\n            ],\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\r\n\r\n      return (\r\n         <AuthorizedAppsContainer>\r\n            <PaginationBlock\r\n               filterTypes={filterTypes}\r\n               showSub={showSub}\r\n               toggleShowSub={this.toggleShowSub}\r\n               subPage='authorized-apps'\r\n            >\r\n               {activity.map((row, i) => (\r\n                  <ListItem\r\n                     key={`a-${i}`}\r\n                     row={row}\r\n                     i={i}\r\n                     wide={true}\r\n                     showSub={showSub}\r\n                     toggleShowSub={this.toggleShowSub}\r\n                     showSubOpen={showSubOpen}\r\n                  />\r\n               ))}\r\n            </PaginationBlock>\r\n         </AuthorizedAppsContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nexport const AuthorizedAppsWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(AuthorizedApps))\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .creating-info {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n\r\n         :first-child {\r\n            padding-left: 0px;\r\n         }\r\n      }\r\n\r\n      h1 {\r\n         color: #4a4f54;\r\n         padding-left: 0px;\r\n         line-height: 48px;\r\n      }\r\n   }\r\n\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 0 24px 0;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 991px) {\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .creating-info {\r\n         padding-left: 1rem;\r\n         padding-right: 1rem;\r\n      }\r\n\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyContainer = ({ children, step }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='1' className='page-title'>\r\n            <Grid.Column as='h1' textAlign='center'>\r\n               {step === 3 ? `Success!` : `Send Money`}\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default SendMoneyContainer\r\n","import React from 'react'\r\n\r\nimport {\r\n   Header,\r\n   TextArea,\r\n   List,\r\n   Image,\r\n   Button,\r\n   Form,\r\n   Dimmer,\r\n   Loader\r\n} from 'semantic-ui-react'\r\n\r\nimport CreateAccoungFormInput from '../accounts/CreateAccoungFormInput'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&&&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin: 36px auto 0 auto;\r\n\r\n      form {\r\n         h3 {\r\n            margin-bottom: 13px;\r\n            text-align: left;\r\n         }\r\n\r\n         .main-image {\r\n            border: 0px;\r\n            padding: 0 10px;\r\n            width: 48px;\r\n            height: 48px;\r\n            background: #e6e6e6;\r\n            border-radius: 32px;\r\n            margin: 0 auto;\r\n\r\n            img {\r\n               padding-top: 10px;\r\n            }\r\n         }\r\n\r\n         .amount {\r\n            margin-top: 16px;\r\n            margin-bottom: 0px;\r\n            padding-top: 24px;\r\n\r\n            input {\r\n               height: 80px;\r\n               border: 0px;\r\n               font-family: Bw Seido Round;\r\n               font-size: 72px;\r\n               font-weight: 500;\r\n               line-height: 80px;\r\n               color: #4a4f54;\r\n               text-align: center;\r\n               padding: 0px;\r\n            }\r\n         }\r\n         .near-tokens {\r\n            margin: 14px auto 36px auto;\r\n            text-align: center;\r\n            padding: 2px;\r\n\r\n            width: 200px;\r\n            background-color: #fff;\r\n            border: 2px solid #e6e6e6;\r\n            border-radius: 25px;\r\n            color: #999999;\r\n            font-weight: 700;\r\n\r\n            :hover {\r\n               background-color: #e6e6e6;\r\n               color: #fff;\r\n            }\r\n         }\r\n\r\n         .add-note {\r\n            > textarea {\r\n               width: 100%;\r\n               border: 0px;\r\n               padding: 12px;\r\n\r\n               :focus {\r\n                  border: 0px;\r\n               }\r\n            }\r\n         }\r\n\r\n         .send-money {\r\n            margin-top: 24px;\r\n            margin-bottom: 6px;\r\n\r\n            > button {\r\n               width: 288px;\r\n               line-height: 56px;\r\n               border-radius: 30px;\r\n               border: solid 2px #5ace84;\r\n               font-size: 18px;\r\n               font-weight: 600;\r\n               letter-spacing: 2px;\r\n               text-align: center;\r\n               padding: 0 0 0 0;\r\n               background-color: #5ace84;\r\n               color: #fff;\r\n\r\n               :hover {\r\n                  color: #5ace84;\r\n                  background: #fff;\r\n               }\r\n               :disabled {\r\n                  background-color: #e6e6e6;\r\n                  border-color: #e6e6e6;\r\n                  opacity: 1 !important;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         padding: 0px;\r\n         width: 100%;\r\n         text-align: center;\r\n         margin-left: auto;\r\n         margin-right: auto;\r\n         border: 0px;\r\n\r\n         .near-tokens {\r\n            width: 200px;\r\n         }\r\n\r\n         form {\r\n            .near-tokens {\r\n               margin: 14px auto 24px auto;\r\n            }\r\n            .add-note {\r\n               margin-left: -1rem;\r\n               margin-right: -1rem;\r\n\r\n               > textarea {\r\n                  width: 100%;\r\n                  height: 98px;\r\n                  border: 0px;\r\n                  padding: 12px;\r\n                  background: #f8f8f8;\r\n\r\n                  :focus {\r\n                     border: 0px;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyFirstStep = ({\r\n   handleNextStep,\r\n   handleChange,\r\n   note,\r\n   loader,\r\n   paramAccountId,\r\n   accountId,\r\n   handleChangeAccountId,\r\n   successMessage,\r\n   errorMessage,\r\n   formLoader,\r\n   amount\r\n}) => (\r\n   <CustomList className='box'>\r\n      <Form autoComplete='off' onSubmit={handleChangeAccountId}>\r\n         <Dimmer inverted active={loader}>\r\n            <Loader />\r\n         </Dimmer>\r\n\r\n         {paramAccountId ? (\r\n            <List.Item>\r\n               <List.Content>\r\n                  <div className='main-image'>\r\n                     <Image src={AccountGreyImage} align='left' />\r\n                  </div>\r\n               </List.Content>\r\n               <List.Content as='h2'>{accountId}</List.Content>\r\n               <List.Content>@{accountId}</List.Content>\r\n            </List.Item>\r\n         ) : (\r\n            <List.Item>\r\n               <List.Content>\r\n                  <Header as='h3'>Enter a username to send:</Header>\r\n\r\n                  <CreateAccoungFormInput\r\n                     formLoader={formLoader}\r\n                     accountId={accountId}\r\n                     handleChangeAccountId={handleChangeAccountId}\r\n                     successMessage={successMessage}\r\n                     errorMessage={errorMessage}\r\n                  />\r\n               </List.Content>\r\n            </List.Item>\r\n         )}\r\n\r\n         <List.Item className='amount border-top'>\r\n            <Form.Input\r\n               type='number'\r\n               name='amount'\r\n               value={amount}\r\n               onChange={handleChange}\r\n               placeholder='0.00'\r\n               step='0.01'\r\n               min='0'\r\n            />\r\n         </List.Item>\r\n         <List.Item as='h5' className='near-tokens'>\r\n            NEAR TOKENS\r\n         </List.Item>\r\n         <List.Item className='add-note border-bottom border-top'>\r\n            <TextArea\r\n               name='note'\r\n               value={note}\r\n               onChange={handleChange}\r\n               placeholder='Add a note...'\r\n            />\r\n         </List.Item>\r\n         <List.Item className='send-money'>\r\n            <Button\r\n               disabled={\r\n                  paramAccountId\r\n                     ? !(parseFloat(amount) > 0)\r\n                     : !(successMessage && parseFloat(amount) > 0)\r\n               }\r\n               onClick={handleNextStep}\r\n            >\r\n               SEND MONEY\r\n            </Button>\r\n         </List.Item>\r\n      </Form>\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneyFirstStep\r\n","import React from 'react'\r\n\r\nimport { List, Image, Button, Header } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      margin-top: 36px;\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 auto;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .amount {\r\n         margin-top: 0;\r\n         margin-bottom: 0px;\r\n         padding-top: 12px;\r\n         padding-bottom: 24px;\r\n\r\n         font-family: Bw Seido Round;\r\n         font-size: 72px;\r\n         font-weight: 500;\r\n         line-height: 72px;\r\n         color: #4a4f54;\r\n      }\r\n      .to {\r\n         width: 40px;\r\n         background: #fff;\r\n         margin: -20px auto 12px auto;\r\n      }\r\n\r\n      .with-note {\r\n         padding-top: 12px;\r\n\r\n         .expand-note {\r\n            color: #0072ce;\r\n            cursor: pointer;\r\n            font-weight: 600;\r\n\r\n            :hover {\r\n               text-decoration: underline;\r\n            }\r\n         }\r\n      }\r\n\r\n      .send-money {\r\n         padding-top: 24px;\r\n         padding-bottom: 24px;\r\n         margin-top: 24px;\r\n         margin-bottom: 24px;\r\n\r\n         > .button {\r\n            width: 288px;\r\n            line-height: 60px;\r\n            border-radius: 30px;\r\n            border: solid 2px #5ace84;\r\n            font-size: 18px;\r\n            font-weight: 600;\r\n            letter-spacing: 2px;\r\n            text-align: center;\r\n            padding: 0 0 0 0;\r\n            background-color: #5ace84;\r\n            color: #fff;\r\n\r\n            :hover {\r\n               color: #5ace84;\r\n               background: #fff;\r\n            }\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         .to {\r\n            margin: -20px auto 12px auto;\r\n         }\r\n\r\n         &&& {\r\n            padding: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n\r\n            border: 0px;\r\n\r\n            .amount {\r\n               font-size: 48px !important;\r\n               padding-top: 0px;\r\n            }\r\n            .send-money {\r\n               padding-top: 14px;\r\n               padding-bottom: 14px;\r\n               margin-top: 14px;\r\n               margin-bottom: 14px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneySecondStep = ({\r\n   handleNextStep,\r\n   handleExpandNote,\r\n   expandNote,\r\n   note,\r\n   amount,\r\n   accountId\r\n}) => (\r\n   <CustomList className='box'>\r\n      <List.Item as='h2'>You are sending</List.Item>\r\n      <List.Item as='h1' className='amount border-bottom'>\r\n         {amount}\r\n         <span>Ⓝ</span>\r\n      </List.Item>\r\n      <List.Item className='to'>\r\n         <Header as='h2'>to</Header>\r\n      </List.Item>\r\n      <List.Item>\r\n         <div className='main-image'>\r\n            <Image src={AccountGreyImage} align='left' />\r\n         </div>\r\n      </List.Item>\r\n      <List.Item as='h2'>{accountId}</List.Item>\r\n      <List.Item>@{accountId}</List.Item>\r\n      {note && (\r\n         <List.Item className='with-note '>\r\n            with note:\r\n            <br />\r\n            {expandNote ? (\r\n               <span className='color-black'>{note}</span>\r\n            ) : (\r\n               <span className='expand-note' onClick={handleExpandNote}>\r\n                  Expand note\r\n               </span>\r\n            )}\r\n         </List.Item>\r\n      )}\r\n      <List.Item className='send-money border-top border-bottom'>\r\n         <Button onClick={handleNextStep}>CONFIRM & SEND</Button>\r\n      </List.Item>\r\n      <List.Item>Once confirmed, this is not undoable.</List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneySecondStep\r\n","import React from 'react'\r\n\r\nimport { List, Image } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport SendImage from '../../images/icon-send.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 24px;\r\n      width: 360px;\r\n      text-align: center;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      margin-top: 12px;\r\n\r\n      .send-money img {\r\n         width: 24px;\r\n      }\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 48px;\r\n         height: 48px;\r\n         background: #e6e6e6;\r\n         border-radius: 32px;\r\n         margin: 0 auto;\r\n\r\n         img {\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .amount {\r\n         margin-top: 32px;\r\n         margin-bottom: 0px;\r\n         padding-top: 12px;\r\n         padding-bottom: 24px;\r\n      }\r\n\r\n      .with-note {\r\n         padding-top: 24px;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         &&& {\r\n            padding: 0px;\r\n            width: 100%;\r\n            text-align: center;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n\r\n            border: 0px;\r\n\r\n            .send-money img {\r\n               margin-top: 12px;\r\n            }\r\n            .amount {\r\n               padding-top: 0px;\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst SendMoneyThirdStep = ({ note, amount, accountId }) => (\r\n   <CustomList>\r\n      <List.Item className='send-money'>\r\n         <Image src={SendImage} />\r\n      </List.Item>\r\n      <List.Item as='h2' className='amount'>\r\n         {amount}\r\n         <span>Ⓝ</span> was sent to:\r\n      </List.Item>\r\n      <List.Item>\r\n         <div className='main-image'>\r\n            <Image src={AccountGreyImage} align='left' />\r\n         </div>\r\n      </List.Item>\r\n      <List.Item as='h2'>{accountId}</List.Item>\r\n      <List.Item>@{accountId}</List.Item>\r\n      {note && (\r\n         <List.Item className='with-note'>\r\n            <span className='font-bold'>with note:</span>\r\n            <br />\r\n            {note}\r\n         </List.Item>\r\n      )}\r\n   </CustomList>\r\n)\r\n\r\nexport default SendMoneyThirdStep\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport SendMoneyContainer from './SendMoneyContainer'\r\nimport SendMoneyFirstStep from './SendMoneyFirstStep'\r\nimport SendMoneySecondStep from './SendMoneySecondStep'\r\nimport SendMoneyThirdStep from './SendMoneyThirdStep'\r\n\r\nclass SendMoney extends Component {\r\n   state = {\r\n      loader: false,\r\n      formLoader: false,\r\n      step: 1,\r\n      note: '',\r\n      expandNote: false,\r\n      paramAccountId: false,\r\n      accountId: '',\r\n      successMessage: false,\r\n      errorMessage: false,\r\n      amount: ''\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      const paramId = this.props.match.params.id\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      if (paramId) {\r\n         this.wallet\r\n            .checkAccount(paramId)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  paramAccountId: true,\r\n                  accountId: paramId\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  accountId: ''\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  loader: false\r\n               }))\r\n            })\r\n      } else {\r\n         this.setState(() => ({\r\n            loader: false\r\n         }))\r\n      }\r\n   }\r\n\r\n   handleNextStep = () => {\r\n      this.setState(state => ({\r\n         step: ++state.step\r\n      }))\r\n   }\r\n\r\n   handleChange = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value\r\n      }))\r\n   }\r\n\r\n   handleExpandNote = () => {\r\n      this.setState(() => ({\r\n         expandNote: true\r\n      }))\r\n   }\r\n\r\n   handleChangeAccountId = (e, { name, value }) => {\r\n      this.setState(() => ({\r\n         [name]: value,\r\n         successMessage: false,\r\n         errorMessage: false,\r\n         formLoader: false\r\n      }))\r\n\r\n      if (!this.wallet.isLegitAccountId(value)) {\r\n         return false\r\n      }\r\n\r\n      this.setState(() => ({\r\n         formLoader: true\r\n      }))\r\n\r\n      this.timeout && clearTimeout(this.timeout)\r\n\r\n      this.timeout = setTimeout(() => {\r\n         this.wallet\r\n            .checkAccount(value)\r\n            .then(d => {\r\n               this.setState(() => ({\r\n                  successMessage: true,\r\n                  errorMessage: false\r\n               }))\r\n            })\r\n            .catch(e => {\r\n               this.setState(() => ({\r\n                  successMessage: false,\r\n                  errorMessage: true\r\n               }))\r\n            })\r\n            .finally(() => {\r\n               this.setState(() => ({\r\n                  formLoader: false\r\n               }))\r\n            })\r\n      }, 500)\r\n   }\r\n\r\n   render() {\r\n      const { step } = this.state\r\n\r\n      return (\r\n         <SendMoneyContainer step={step}>\r\n            {step === 1 && (\r\n               <SendMoneyFirstStep\r\n                  handleNextStep={this.handleNextStep}\r\n                  handleChange={this.handleChange}\r\n                  handleChangeAccountId={this.handleChangeAccountId}\r\n                  {...this.state}\r\n               />\r\n            )}\r\n            {step === 2 && (\r\n               <SendMoneySecondStep\r\n                  handleNextStep={this.handleNextStep}\r\n                  handleExpandNote={this.handleExpandNote}\r\n                  {...this.state}\r\n               />\r\n            )}\r\n            {step === 3 && <SendMoneyThirdStep {...this.state} />}\r\n         </SendMoneyContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nexport const SendMoneyWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(SendMoney))\r\n","import React from 'react'\r\n\r\nimport { Container, Grid } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomContainer = styled(Container)`\r\n   &&& .page-title {\r\n      padding-right: 0px;\r\n      padding-top: 48px;\r\n      padding-bottom: 0px;\r\n\r\n      .column {\r\n         padding: 0 14px 24px 0;\r\n         float: left;\r\n         width: auto !important;\r\n      }\r\n      h1 {\r\n         line-height: 48px;\r\n      }\r\n      .add {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n   @media screen and (max-width: 767px) {\r\n      &&& .page-title {\r\n         padding-top: 14px;\r\n         text-align: center;\r\n\r\n         .column {\r\n            padding: 0 0 6px 0;\r\n            width: 100% !important;\r\n            float: none;\r\n         }\r\n         .add {\r\n            font-size: 12px !important;\r\n            line-height: 18px !important;\r\n            letter-spacing: 2px;\r\n            text-transform: uppercase;\r\n\r\n            padding-bottom: 18px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileContainer = ({ children }) => (\r\n   <CustomContainer>\r\n      <Grid>\r\n         <Grid.Row columns='2' className='page-title'>\r\n            <Grid.Column as='h1'>Account:</Grid.Column>\r\n            <Grid.Column as='h1' className='add'>\r\n               @eugenethedream\r\n            </Grid.Column>\r\n         </Grid.Row>\r\n      </Grid>\r\n      {children}\r\n   </CustomContainer>\r\n)\r\n\r\nexport default ProfileContainer\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Popup, Grid, Image } from 'semantic-ui-react'\r\n\r\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\r\nimport LockImage from '../../images/icon-lock.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomGrid = styled(Grid)`\r\n   &&& {\r\n      .row {\r\n         padding-top: 12px;\r\n         padding-bottom: 12px;\r\n\r\n         .edit-link {\r\n            font-weight: 600;\r\n         }\r\n         .title {\r\n            font-weight: 600;\r\n            color: #24272a;\r\n         }\r\n      }\r\n\r\n      .main-image {\r\n         border: 0px;\r\n         padding: 0 10px;\r\n         width: 120px;\r\n         height: 120px;\r\n         background: #e6e6e6;\r\n         border-radius: 60px;\r\n\r\n         img {\r\n            width: 100px;\r\n            padding-top: 10px;\r\n         }\r\n      }\r\n\r\n      .locked {\r\n         float: right;\r\n         border: 0px;\r\n         padding: 1px 7px;\r\n         width: 32px;\r\n         height: 32px;\r\n         background: #f8f8f8;\r\n         border-radius: 32px;\r\n\r\n         img {\r\n            padding-top: 4px;\r\n         }\r\n      }\r\n\r\n      .row-title {\r\n         margin-top: 20px;\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0px;\r\n         margin-right: 0px;\r\n\r\n         .column {\r\n            padding-left: 0px;\r\n            padding-right: 0px;\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileDetails = ({ loader }) => (\r\n   <CustomGrid>\r\n      <Grid.Row className='border-top-bold'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            PROFILE\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' as='h6' textAlign='center' only='tablet'>\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Username\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            @eugenethedream\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column computer='2' tablet='2' mobile='3' textAlign='right'>\r\n            <Popup\r\n               trigger={\r\n                  <div className='locked'>\r\n                     <Image src={LockImage} align='left' />\r\n                  </div>\r\n               }\r\n               hoverable\r\n               position='left center'\r\n            >\r\n               <Popup.Header>Why is this locked?</Popup.Header>\r\n               <Popup.Content>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                  Curabitur sit amet pretium mi, a molestie est.{` `}\r\n                  <a href='/'>Learn more</a>\r\n               </Popup.Content>\r\n            </Popup>\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Full Name\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            Evgeny Kuzyakov\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Photo\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            <div className='main-image'>\r\n               <Image src={AccountGreyImage} align='left' />\r\n            </div>\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className='border-top-bold row-title'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            CONTACT INFORMATION\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            computer='4'\r\n            tablet='4'\r\n            as='h6'\r\n            textAlign='center'\r\n            only='tablet'\r\n         >\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Email\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            email@website.com\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Public\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Phone\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            000-000-0000\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Address\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            1234 N. West Ave., San Francisco, CA 98562\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Friends\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row className='border-top-bold row-title'>\r\n         <Grid.Column\r\n            computer='10'\r\n            tablet='10'\r\n            mobile='16'\r\n            as='h6'\r\n            className='color-charcoal-grey'\r\n         >\r\n            FINANCIAL INFORMATION\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            computer='4'\r\n            tablet='4'\r\n            as='h6'\r\n            textAlign='center'\r\n            only='tablet'\r\n         >\r\n            VISIBLE TO\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row className='border-top'>\r\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\r\n            Balance\r\n         </Grid.Column>\r\n         <Grid.Column computer='7' tablet='7' mobile='9'>\r\n            2,300 Ⓝ\r\n         </Grid.Column>\r\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\r\n            Only Me\r\n         </Grid.Column>\r\n         <Grid.Column\r\n            as={Link}\r\n            to='/'\r\n            computer='2'\r\n            tablet='2'\r\n            mobile='3'\r\n            textAlign='right'\r\n            className='edit-link'\r\n         >\r\n            Edit\r\n         </Grid.Column>\r\n      </Grid.Row>\r\n   </CustomGrid>\r\n)\r\n\r\nexport default ProfileDetails\r\n","import React from 'react'\r\n\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nconst ProfileSection = ({ children }) => (\r\n   <Grid columns={2} stackable>\r\n      <Grid.Column computer={10}>{children[0]}</Grid.Column>\r\n      <Grid.Column computer={6}>\r\n         {children[1]}\r\n         {children[2]}\r\n      </Grid.Column>\r\n   </Grid>\r\n)\r\n\r\nexport default ProfileSection\r\n","import React from 'react'\r\n\r\nimport { List, Button, Image } from 'semantic-ui-react'\r\n\r\nimport KeysGreyImage from '../../images/icon-keys-grey.svg'\r\nimport DocGreyImage from '../../images/icon-doc-grey.svg'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      background: #fff;\r\n      width: 100%;\r\n      margin-top: -1rem;\r\n      padding: 14px 4px 14px 14px;\r\n\r\n      .keys {\r\n         img {\r\n            width: 24px;\r\n            margin-top: 2px;\r\n         }\r\n      }\r\n      .account {\r\n         margin-top: 12px;\r\n\r\n         &-name {\r\n            margin-top: 12px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n         }\r\n         img {\r\n            width: 18px;\r\n            margin-top: 8px;\r\n            margin-right: 20px;\r\n         }\r\n         .download {\r\n            margin: 0px;\r\n         }\r\n         button {\r\n            width: 130px;\r\n            background-color: #0072ce;\r\n            border: 2px solid #0072ce;\r\n            border-radius: 25px;\r\n            color: #fff;\r\n            font-weight: 600;\r\n            margin-left: 20px;\r\n\r\n            :hover {\r\n               background-color: #fff;\r\n               color: #0072ce;\r\n            }\r\n         }\r\n         .account-name {\r\n            color: #24272a;\r\n            font-weight: 600;\r\n         }\r\n      }\r\n\r\n      @media screen and (max-width: 991px) {\r\n         &&& {\r\n            .account {\r\n               .download {\r\n                  float: none;\r\n                  margin: 0 0 0 16px;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      @media screen and (max-width: 767px) {\r\n         &&& {\r\n            margin-top: 20px;\r\n\r\n            .account {\r\n               button {\r\n                  margin-left: 8px;\r\n               }\r\n               .download {\r\n                  float: right;\r\n                  margin: 0 0 0 0;\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileYourKeys = () => (\r\n   <CustomList className='box'>\r\n      <List.Item className='keys'>\r\n         <List.Icon as={Image} src={KeysGreyImage} />\r\n         <List.Content as='h2'>Your Keys</List.Content>\r\n      </List.Item>\r\n      <List.Item className='account'>\r\n         <List.Content floated='right' className='download'>\r\n            <Button>DOWNLOAD</Button>\r\n         </List.Content>\r\n         <List.Content>\r\n            <Image align='left' src={DocGreyImage} />\r\n         </List.Content>\r\n         <List.Content className='account-name'>\r\n            @eugenethedream.key\r\n         </List.Content>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default ProfileYourKeys\r\n","import React from 'react'\r\n\r\nimport { List } from 'semantic-ui-react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst CustomList = styled(List)`\r\n   &&& {\r\n      padding: 8px 0 8px 20px;\r\n      margin-left: 28px;\r\n      margin-top: 20px;\r\n      border-left: 4px solid #f8f8f8;\r\n\r\n      .header {\r\n         line-height: 28px;\r\n      }\r\n      .content {\r\n         line-height: 20px;\r\n      }\r\n\r\n      @media screen and (max-width: 767px) {\r\n         margin-left: 0px;\r\n         border-left: 0px;\r\n      }\r\n   }\r\n`\r\n\r\nconst ProfileNotice = () => (\r\n   <CustomList>\r\n      <List.Item>\r\n         <List.Header>Never give your keys away</List.Header>\r\n         <List.Content>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\r\n            sit amet pretium mi, a molestie est.\r\n            <a href='/'>Learn more</a>\r\n         </List.Content>\r\n      </List.Item>\r\n   </CustomList>\r\n)\r\n\r\nexport default ProfileNotice\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { Wallet } from '../../utils/wallet'\r\n\r\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\r\n\r\nimport ProfileContainer from './ProfileContainer'\r\nimport ProfileDetails from './ProfileDetails'\r\nimport ProfileSection from './ProfileSection'\r\nimport ProfileYourKeys from './ProfileYourKeys'\r\nimport ProfileNotice from './ProfileNotice'\r\n\r\nclass Profile extends Component {\r\n   state = {\r\n      loader: false\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.wallet = new Wallet()\r\n      this.props.handleRefreshUrl(this.props.location)\r\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\r\n\r\n      this.setState(() => ({\r\n         loader: true\r\n      }))\r\n\r\n      setTimeout(() => {\r\n         this.setState(_ => ({\r\n            loader: false\r\n         }))\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <ProfileContainer>\r\n            <ProfileSection>\r\n               <ProfileDetails />\r\n               <ProfileYourKeys />\r\n               <ProfileNotice />\r\n            </ProfileSection>\r\n         </ProfileContainer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   handleRefreshAccount,\r\n   handleRefreshUrl\r\n}\r\n\r\nconst mapStateToProps = ({ account }) => ({\r\n   account\r\n})\r\n\r\nexport const ProfileWithRouter = connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(withRouter(Profile))\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  \r\n  * {\r\n   box-sizing: inherit;\r\n   }\r\n\r\n   #root {\r\n      min-height: 100vh;\r\n      position: relative;\r\n   }\r\n   html {\r\n      box-sizing: border-box;\r\n      min-height: 100vh;\r\n      height: auto !important;\r\n\r\n      body {\r\n         margin: 0;\r\n         padding: 0;\r\n         min-height: 100vh !important;\r\n\r\n         position: relative;\r\n         color: #999;\r\n         font-family: \"benton-sans\",sans-serif;\r\n         font-weight: 500;\r\n         font-size: 14px !important;\r\n      }\r\n   }\r\n   \r\n\r\n   .App {\r\n      min-height: 100vh;\r\n\r\n      > div {\r\n         min-height: 100vh;\r\n      }\r\n   }\r\n\r\n   a {\r\n      color: #0072ce;\r\n   }\r\n   a:hover {\r\n      color: #0072ce;\r\n      text-decoration: underline;\r\n   }\r\n\r\n   h1, .h1 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 48px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 100px;\r\n      color: #4a4f54;\r\n   }\r\n   h2, .h2 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 24px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 1.33;\r\n      color: #24272a !important;\r\n      margin: 0px;\r\n   }\r\n   h3, .h3 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 18px !important;\r\n      font-weight: 500 !important;\r\n      line-height: 24px !important;\r\n      color: #24272a !important;\r\n      margin: 0px;\r\n   }\r\n   h4, .h4 {\r\n      font-family: Bw Seido Round !important;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      line-height: 1.33;\r\n      color: #24272a;\r\n      margin: 0px;\r\n   }\r\n\r\n   h5, .h5 {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 13px !important;\r\n      line-height: 26px;\r\n      font-weight: 500;\r\n      color: #999999 !important;\r\n      margin: 0px;\r\n      letter-spacing: 1.8px;\r\n   }\r\n\r\n   h6, .h6 {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 12px !important;\r\n      line-height: 18px;\r\n      font-weight: 600;\r\n      color: #999999;\r\n      margin: 0px !important;\r\n      letter-spacing: 1.5px !important;\r\n   }\r\n\r\n\r\n\r\n   .font-small {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n      font-size: 12px !important;\r\n      color: #999 !important;\r\n      font-weight: 500 !important;\r\n\r\n      a {\r\n         font-family: \"benton-sans\",sans-serif !important;\r\n         font-size: 12px !important;\r\n         color: #999 !important;\r\n         font-weight: 500 !important;\r\n      }\r\n\r\n      a:hover {\r\n         color: #999 !important;\r\n      }\r\n   }\r\n\r\n   .ui.form input[type=text] {\r\n      font-family: \"benton-sans\",sans-serif;\r\n      font-size: 16px;\r\n   }\r\n\r\n\r\n   .font-bold {\r\n      font-weight: 600;\r\n   }\r\n\r\n\r\n   .color-seafoam-blue {\r\n      color: #6ad1e3 !important;\r\n   }\r\n   .color-blue {\r\n      color: #0072ce !important;\r\n   }\r\n   .color-brown-grey {\r\n      color: #999;\r\n   }\r\n   .color-charcoal-grey {\r\n      color: #4a4f54 !important;\r\n   }\r\n   .color-black {\r\n      color: #24272a !important;\r\n\r\n      :hover {\r\n         color: #24272a;\r\n      }\r\n   }\r\n\r\n\r\n   .ui.popup > .header {\r\n      font-weight: 600 !important;\r\n      color: #24272a !important;\r\n   }\r\n\r\n\r\n   .ui.list .list>.item .header, .ui.list>.item .header, .ui.button {\r\n      font-weight: 600;\r\n   }\r\n\r\n\r\n   .border-bottom {\r\n      border-bottom: 2px solid #f8f8f8 !important;\r\n   }\r\n   .border-bottom-bold {\r\n      border-bottom: 4px solid #e6e6e6 !important;\r\n   }\r\n   .border-bottom-light {\r\n      border-bottom: 1px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-top {\r\n      border-top: 2px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-top-bold {\r\n      border-top: 4px solid #e6e6e6 !important;\r\n   }\r\n   .border-top-light {\r\n      border-top: 1px solid #f8f8f8 !important;\r\n   }\r\n\r\n   .border-left-bold {\r\n      border-left: 4px solid #f8f8f8 !important;\r\n   }\r\n\r\n\r\n   .border-right {\r\n      border-right: 2px solid #e6e6e6;\r\n   }\r\n   .border-right-light {\r\n      border-right: 1px solid #e6e6e6;\r\n   }\r\n   .background-lg {\r\n      background: #f8f8f8;\r\n   }\r\n\r\n\r\n   .button {\r\n      font-family: \"benton-sans\",sans-serif !important;\r\n   }\r\n\r\n\r\n   .box {\r\n      border: 4px solid #e6e6e6;\r\n      border-radius: 8px;\r\n      margin-bottom: 0px;\r\n      position: relative;\r\n      min-height: 100px;\r\n      position: relative;\r\n\r\n      .row {\r\n         padding: 0px !important;\r\n      }\r\n      .column {\r\n         padding: 24px 10px 20px 30px !important;\r\n         word-wrap: break-word;\r\n      }\r\n      .segment {\r\n         padding: 30px 0 20px 0 !important;\r\n      }\r\n      .list {\r\n         > .item {\r\n            padding: 0px !important;\r\n\r\n            > img {\r\n               top: -4px;\r\n               margin: 0 10px;\r\n            }\r\n            > img.transarrow {\r\n               width: 11px !important;\r\n            }\r\n         }\r\n         > h5.item {\r\n            top: -4px;\r\n         }\r\n      } \r\n   }\r\n\r\n\r\n   .copy-image {\r\n      width: 18px !important;\r\n      margin: 0px 10px 0 0px !important;\r\n      top: -4px !important;\r\n   }\r\n\r\n\r\n   .balance-image {\r\n      font-size: 20px !important;\r\n      font-weight: 100 !important;\r\n\r\n      &-big {\r\n         font-size: 32px !important;\r\n         font-weight: 100 !important;\r\n      }\r\n   }\r\n   \r\n\r\n   .transactions-block .item {\r\n      margin-left: 10px !important;\r\n   }\r\n\r\n\r\n   .hide {\r\n      display: none !important;\r\n   }\r\n\r\n\r\n   .App-section {\r\n      width: 860px;\r\n      margin: auto;\r\n      margin-top: 10px;\r\n      margin-bottom: 20px;\r\n   }\r\n\r\n   .App-error-message {\r\n      width: 100%;\r\n      text-align: center;\r\n      display: inline-block;\r\n      margin: auto;\r\n   }\r\n\r\n   .ui.list .list>.item .header, .ui.list>.item .header {\r\n      font-family: \"benton-sans\",sans-serif;\r\n      \r\n   }\r\n   .ui.popup>.header, .ui.popup {\r\n      color: #999;\r\n      font-family: \"benton-sans\",sans-serif;\r\n      font-weight: 500;\r\n      font-size: 14px !important;\r\n   }\r\n   .ui.popup {\r\n      border: 1px solid #eee;\r\n   }\r\n   .ui.left.center.popup:before {\r\n      box-shadow: 1px -1px 0 0 #eee;\r\n   }\r\n   .ui.bottom.right.popup:before {\r\n      box-shadow: -1px -1px 0 0 #eee;\r\n   }\r\n\r\n\r\n   @media screen and (max-width: 767px) {\r\n      h1, .h1 {\r\n         font-size: 38px !important;\r\n         font-weight: 500;\r\n         line-height: 50px;\r\n         color: #4a4f54;\r\n      }\r\n      h2, .h2 {\r\n         font-size: 24px !important;\r\n         font-weight: 600;\r\n         line-height: 1.33;\r\n         margin: 0px;\r\n      }\r\n      h3, .h3 {\r\n         font-size: 16px !important;\r\n         font-weight: 500;\r\n         line-height: 1.33;\r\n         margin: 0px;\r\n      }\r\n      \r\n\r\n      .box .column {\r\n         padding: 16px 10px !important;\r\n      }\r\n   }\r\n`\r\n","import React, { Component } from 'react'\r\n\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\n\r\nimport '../index.css'\r\n\r\nimport ResponsiveContainer from './responsive/ResponsiveContainer'\r\nimport Footer from './common/Footer'\r\nimport DashboardDetailWithRouter from './dashboard/DashboardDetail'\r\nimport { CreateAccountWithRouter } from './accounts/CreateAccount'\r\nimport { SetRecoveryInfoWithRouter } from './accounts/SetRecoveryInfo'\r\nimport { LoginWithRouter } from './login/Login'\r\nimport { ContactsWithRouter } from './contacts/Contacts'\r\nimport { AuthorizedAppsWithRouter } from './authorized-apps/AuthorizedApps'\r\nimport { SendMoneyWithRouter } from './send-money/SendMoney'\r\nimport { ProfileWithRouter } from './profile/Profile'\r\n\r\nimport { ThemeProvider } from 'styled-components'\r\nimport GlobalStyle from './GlobalStyle'\r\nconst theme = {}\r\n\r\nconst PATH_PREFIX = process.env.PUBLIC_URL\r\n\r\nclass Routing extends Component {\r\n   render() {\r\n      return (\r\n         <div className='App'>\r\n            <GlobalStyle />\r\n\r\n            <ConnectedRouter basename={PATH_PREFIX}  history={this.props.history}>\r\n               <ThemeProvider theme={theme}>\r\n                  <ResponsiveContainer>\r\n                     <Switch>\r\n                        <Route\r\n                           exact\r\n                           path='/'\r\n                           component={DashboardDetailWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/create'\r\n                           component={CreateAccountWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/set-recovery/:accountId'\r\n                           component={SetRecoveryInfoWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/login'\r\n                           component={LoginWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/contacts'\r\n                           component={ContactsWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/authorized-apps'\r\n                           component={AuthorizedAppsWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/send-money/:id?'\r\n                           component={SendMoneyWithRouter}\r\n                        />\r\n                        <Route\r\n                           exact\r\n                           path='/profile'\r\n                           component={ProfileWithRouter}\r\n                        />\r\n\r\n                        <Route component={DashboardDetailWithRouter} />\r\n                     </Switch>\r\n                     <Footer />\r\n                  </ResponsiveContainer>\r\n               </ThemeProvider>\r\n            </ConnectedRouter>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Routing\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport createRootReducer from './reducers'\r\nimport createMiddleware from './middleware'\r\n\r\nimport Routing from './components/Routing'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst store = createStore(createRootReducer(history), createMiddleware(history))\r\n\r\nReactDOM.render(\r\n   <Provider store={store}>\r\n      <Routing history={history} />\r\n   </Provider>,\r\n   document.getElementById('root')\r\n)\r\nserviceWorker.unregister()\r\n","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport account from './account'\r\n\r\nexport default (history) => combineReducers({\r\n   account,\r\n   router: connectRouter(history)\r\n})\r\n","module.exports = __webpack_public_path__ + \"static/media/icon-check-blue.6dc3bbf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-down.fcefbf0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-send.f7a4807a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.5c3cedcf.svg\";"],"sourceRoot":""}